!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon8
ALT	kern/console.c	224;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/writemotd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BCAST	kern/lapic.c	28;"	d	file:
BLACK	lib/printfmt.c	15;"	d	file:
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BLUE	lib/printfmt.c	13;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	291;"	d	file:
CAPSLOCK	kern/console.c	226;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	21;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COM1	kern/console.c	29;"	d	file:
COM_DLL	kern/console.c	33;"	d	file:
COM_DLM	kern/console.c	34;"	d	file:
COM_FCR	kern/console.c	38;"	d	file:
COM_IER	kern/console.c	35;"	d	file:
COM_IER_RDI	kern/console.c	36;"	d	file:
COM_IIR	kern/console.c	37;"	d	file:
COM_LCR	kern/console.c	39;"	d	file:
COM_LCR_DLAB	kern/console.c	40;"	d	file:
COM_LCR_WLEN8	kern/console.c	41;"	d	file:
COM_LSR	kern/console.c	46;"	d	file:
COM_LSR_DATA	kern/console.c	47;"	d	file:
COM_LSR_TSRE	kern/console.c	49;"	d	file:
COM_LSR_TXRDY	kern/console.c	48;"	d	file:
COM_MCR	kern/console.c	42;"	d	file:
COM_MCR_DTR	kern/console.c	44;"	d	file:
COM_MCR_OUT2	kern/console.c	45;"	d	file:
COM_MCR_RTS	kern/console.c	43;"	d	file:
COM_RX	kern/console.c	31;"	d	file:
COM_TX	kern/console.c	32;"	d	file:
CONSBUFSIZE	kern/console.c	390;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon7
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon7
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	223;"	d	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Cpu	kern/cpu.h	/^struct Cpu {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/writemotd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	230;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon1
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon1
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon1
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon1
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon1
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_IDLE	inc/env.h	/^	ENV_TYPE_IDLE,$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	96;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	= 12,	\/\/ Bad path$/;"	e	enum:__anon2
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon2
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	= 13,	\/\/ File already exists$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon2
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	= 10,	\/\/ Too many files are open$/;"	e	enum:__anon2
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	= 14,	\/\/ File not a valid executable$/;"	e	enum:__anon2
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	= 11, 	\/\/ File or block not found$/;"	e	enum:__anon2
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	= 15,	\/\/ Operation not supported$/;"	e	enum:__anon2
E_NO_DISK	inc/error.h	/^	E_NO_DISK	= 9,	\/\/ No free space left on disk$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FDTABLE	lib/fd.c	8;"	d	file:
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon4
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon4
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon4
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon4
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon4
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon4
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon4
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon4
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
GREEN	lib/printfmt.c	12;"	d	file:
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INIT	kern/lapic.c	22;"	d	file:
IOMEMBASE	inc/memlayout.h	145;"	d
IOMEM_PADDR	inc/memlayout.h	143;"	d
IOPHYSMEM	inc/memlayout.h	95;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	132;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_QUEUE_H	inc/queue.h	36;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	90;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	99;"	d
KSTKGAP	inc/memlayout.h	101;"	d
KSTKSIZE	inc/memlayout.h	100;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=5$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LIST_EMPTY	inc/queue.h	142;"	d
LIST_ENTRY	inc/queue.h	129;"	d
LIST_FIRST	inc/queue.h	147;"	d
LIST_FOREACH	inc/queue.h	160;"	d
LIST_HEAD	inc/queue.h	109;"	d
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d
LIST_INIT	inc/queue.h	168;"	d
LIST_INSERT_AFTER	inc/queue.h	177;"	d
LIST_INSERT_BEFORE	inc/queue.h	190;"	d
LIST_INSERT_HEAD	inc/queue.h	201;"	d
LIST_NEXT	inc/queue.h	153;"	d
LIST_REMOVE	inc/queue.h	212;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	48;"	d
MAXARGS	kern/monitor.c	246;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXNAMELEN	inc/fs.h	17;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	42;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	140;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	40;"	d	file:
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NHANDLERS	fs/serv.c	315;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	220;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon5
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	227;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	116;"	d
O_CREAT	inc/lib.h	118;"	d
O_EXCL	inc/lib.h	120;"	d
O_MKDIR	inc/lib.h	121;"	d
O_RDONLY	inc/lib.h	113;"	d
O_RDWR	inc/lib.h	115;"	d
O_TRUNC	inc/lib.h	119;"	d
O_WRONLY	inc/lib.h	114;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Sat Nov 12 10:46:07 EST 2011$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	135;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	82;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
Page	inc/memlayout.h	/^struct Page {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RED	lib/printfmt.c	11;"	d	file:
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	57;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	63;"	d
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	228;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	222;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon5
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon5
SYS_env_checkpoint	inc/syscall.h	/^	SYS_env_checkpoint,$/;"	e	enum:__anon5
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon5
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon5
SYS_env_set_priority	inc/syscall.h	/^	SYS_env_set_priority,$/;"	e	enum:__anon5
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon5
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon5
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon5
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon5
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon5
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon5
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon5
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon5
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon5
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon5
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	114;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	102;"	d
UPAGES	inc/memlayout.h	112;"	d
USED	inc/lib.h	24;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	137;"	d
USTACKTOP	inc/memlayout.h	126;"	d
UTEMP	inc/memlayout.h	132;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	129;"	d
UTOP	inc/memlayout.h	121;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	110;"	d
UXSTACKTOP	inc/memlayout.h	123;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WHITE	lib/printfmt.c	14;"	d	file:
WHITESPACE	kern/monitor.c	245;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/hello.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/hello.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/writemotd.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr	obj/user/forktree.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);		$/;"	d
addr	obj/user/hello.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);		$/;"	d
addr	obj/user/pingpong.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);		$/;"	d
addr	obj/user/pingpongs.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);		$/;"	d
addr	obj/user/primes.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);		$/;"	d
addr	obj/user/spin.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);		$/;"	d
addr	obj/user/stresssched.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);		$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/writemotd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/writemotd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/writemotd.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
assert	inc/assert.h	14;"	d
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/writemotd.asm	/^			base = 10;$/;"	d
base	obj/user/writemotd.asm	/^			base = 16;$/;"	d
base	obj/user/writemotd.asm	/^			base = 8;$/;"	d
base	obj/user/writemotd.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bgColor	lib/printfmt.c	/^int bgColor = BLACK;$/;"	v
bgColor	obj/fs/fs.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/fs/fs.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/fs/fs.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/fs/fs.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/fs/fs.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/kern/kernel.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/kern/kernel.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/kern/kernel.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/kern/kernel.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/kern/kernel.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/badsegment.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/badsegment.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/badsegment.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/badsegment.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/badsegment.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/breakpoint.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/breakpoint.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/breakpoint.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/breakpoint.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/breakpoint.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/buggyhello.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/buggyhello.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/buggyhello.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/buggyhello.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/buggyhello.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/buggyhello2.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/buggyhello2.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/buggyhello2.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/buggyhello2.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/buggyhello2.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/divzero.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/divzero.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/divzero.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/divzero.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/divzero.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/dumbfork.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/dumbfork.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/dumbfork.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/dumbfork.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/dumbfork.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/evilhello.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/evilhello.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/evilhello.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/evilhello.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/evilhello.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/fairness.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/fairness.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/fairness.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/fairness.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/fairness.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/faultalloc.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/faultalloc.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/faultalloc.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/faultalloc.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/faultalloc.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/faultallocbad.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/faultallocbad.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/faultallocbad.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/faultallocbad.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/faultallocbad.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/faultbadhandler.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/faultbadhandler.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/faultbadhandler.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/faultbadhandler.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/faultbadhandler.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/faultdie.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/faultdie.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/faultdie.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/faultdie.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/faultdie.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/faultevilhandler.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/faultevilhandler.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/faultevilhandler.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/faultevilhandler.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/faultevilhandler.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/faultnostack.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/faultnostack.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/faultnostack.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/faultnostack.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/faultnostack.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/faultread.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/faultread.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/faultread.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/faultread.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/faultread.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/faultreadkernel.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/faultreadkernel.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/faultreadkernel.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/faultreadkernel.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/faultreadkernel.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/faultregs.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/faultregs.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/faultregs.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/faultregs.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/faultregs.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/faultwrite.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/faultwrite.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/faultwrite.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/faultwrite.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/faultwrite.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/faultwritekernel.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/faultwritekernel.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/faultwritekernel.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/faultwritekernel.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/faultwritekernel.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/forktree.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/forktree.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/forktree.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/forktree.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/forktree.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/hello.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/hello.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/hello.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/hello.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/hello.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/icode.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/icode.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/icode.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/icode.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/icode.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/idle.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/idle.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/idle.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/idle.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/idle.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/init.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/init.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/init.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/init.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/init.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/pingpong.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/pingpong.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/pingpong.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/pingpong.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/pingpong.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/pingpongs.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/pingpongs.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/pingpongs.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/pingpongs.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/pingpongs.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/primes.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/primes.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/primes.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/primes.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/primes.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/softint.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/softint.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/softint.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/softint.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/softint.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/spin.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/spin.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/spin.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/spin.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/spin.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/stresssched.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/stresssched.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/stresssched.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/stresssched.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/stresssched.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/testbss.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/testbss.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/testbss.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/testbss.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/testbss.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/testfile.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/testfile.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/testfile.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/testfile.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/testfile.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/writemotd.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/writemotd.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/writemotd.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/writemotd.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/writemotd.asm	/^				bgColor = WHITE;$/;"	d
bgColor	obj/user/yield.asm	/^				bgColor = BLACK;$/;"	d
bgColor	obj/user/yield.asm	/^				bgColor = BLUE;$/;"	d
bgColor	obj/user/yield.asm	/^				bgColor = GREEN;$/;"	d
bgColor	obj/user/yield.asm	/^				bgColor = RED;$/;"	d
bgColor	obj/user/yield.asm	/^				bgColor = WHITE;$/;"	d
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/writemotd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef int bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct Cpu *bootcpu;$/;"	v	typeref:struct:Cpu
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon6	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = c | bgColor << 12;$/;"	d
c	obj/kern/kernel.asm	/^	c = c | fontColor << 8;	$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/writemotd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/writemotd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/writemotd.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	grade-lab1.sh	/^check () {$/;"	f
check	grade-lab2.sh	/^check () {$/;"	f
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checkregexps	grade-functions.sh	/^checkregexps () {$/;"	f
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childid	obj/user/forktree.asm	/^	childid = sys_exofork();$/;"	d
childid	obj/user/hello.asm	/^	childid = sys_exofork();$/;"	d
childid	obj/user/pingpong.asm	/^	childid = sys_exofork();$/;"	d
childid	obj/user/pingpongs.asm	/^	childid = sys_exofork();$/;"	d
childid	obj/user/primes.asm	/^	childid = sys_exofork();$/;"	d
childid	obj/user/spin.asm	/^	childid = sys_exofork();$/;"	d
childid	obj/user/stresssched.asm	/^	childid = sys_exofork();$/;"	d
close	lib/fd.c	/^close(int fdnum)$/;"	f
close_all	lib/fd.c	/^close_all(void)$/;"	f
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/writemotd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon6	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/writemotd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/writemotd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct Cpu *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::Cpu
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:Cpu	typeref:struct:Cpu::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:Cpu
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:Cpu
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:Cpu	typeref:struct:Cpu::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct Cpu cpus[NCPU];$/;"	v	typeref:struct:Cpu
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
cr4	obj/kern/kernel.asm	/^	cr4 = rcr4();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] = $/;"	v	file:
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
current	obj/kern/kernel.asm	/^		current = &envs[index];$/;"	d
curva	obj/kern/kernel.asm	/^		curva = ROUNDDOWN(curva, PGSIZE);$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/writemotd.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon9
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/writemotd.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/writemotd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0];$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_n	grade-functions.sh	/^echo_n () {$/;"	f
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	obj/kern/kernel.asm	/^		eip = (uint32_t *)ebp[1];$/;"	d
eip	obj/kern/kernel.asm	/^	eip = (uint32_t *)ebp[1];$/;"	d
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
endAddr	obj/kern/kernel.asm	/^		endAddr = strtol(argv[3], 0, 0) * 4 + startAddr;$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_checkpoint	inc/env.h	/^	struct Env * env_checkpoint;	\/\/ checkpoint status$/;"	m	struct:Env	typeref:struct:Env::Env
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = NULL;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_priority	inc/env.h	/^	int env_priority;		\/\/ priority if the env$/;"	m	struct:Env
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/writemotd.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + ELFHDR->e_phnum;	$/;"	d
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/writemotd.asm	/^				err = -err;$/;"	d
err	obj/user/writemotd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/writemotd.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^err:$/;"	l
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exit	lib/exit.c	/^exit(void)$/;"	f
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 10 12 f0       	mov    $0xf0121000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 f0 00 00 00       	call   f010012e <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 80 8e 1d f0 00 	cmpl   $0x0,0xf01d8e80$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 80 8e 1d f0    	mov    %esi,0xf01d8e80$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 e0 6b 00 00       	call   f0106c44 <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 40 73 10 f0 	movl   $0xf0107340,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 18 40 00 00       	call   f010409a <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 d9 3f 00 00       	call   f0104067 <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 3e 84 10 f0 	movl   $0xf010843e,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 00 40 00 00       	call   f010409a <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 43 0d 00 00       	call   f0100de9 <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <mp_main>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	77 20                	ja     f01000da <mp_main+0x32>$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	f0 $/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	c7 44 24 04 75 00 00 	movl   $0x75,0x4(%esp)$/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	00 $/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	c7 04 24 ab 73 10 f0 	movl   $0xf01073ab,(%esp)$/;"	l
f01000d5	obj/kern/kernel.asm	/^f01000d5:	e8 66 ff ff ff       	call   f0100040 <_panic>$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	e8 5d 6b 00 00       	call   f0106c44 <cpunum>$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	c7 04 24 b7 73 10 f0 	movl   $0xf01073b7,(%esp)$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	e8 a3 3f 00 00       	call   f010409a <cprintf>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	e8 62 6b 00 00       	call   f0106c5e <lapic_init>$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	e8 17 37 00 00       	call   f0103818 <env_init_percpu>$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	e8 ba 3f 00 00       	call   f01040c0 <trap_init_percpu>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	e8 39 6b 00 00       	call   f0106c44 <cpunum>$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	81 c2 20 90 1d f0    	add    $0xf01d9020,%edx$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	c7 04 24 80 33 12 f0 	movl   $0xf0123380,(%esp)$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	e8 b7 6d 00 00       	call   f0106ee0 <spin_lock>$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	e8 86 4d 00 00       	call   f0104eb4 <sched_yield>$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e <i386_init>:$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	55                   	push   %ebp$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	53                   	push   %ebx$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	b8 04 a0 21 f0       	mov    $0xf021a004,%eax$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	2d 39 7d 1d f0       	sub    $0xf01d7d39,%eax$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	00 $/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	c7 04 24 39 7d 1d f0 	movl   $0xf01d7d39,(%esp)$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	e8 5a 64 00 00       	call   f01065b1 <memset>$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	e8 65 05 00 00       	call   f01006c1 <cons_init>$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	00 $/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	c7 04 24 cd 73 10 f0 	movl   $0xf01073cd,(%esp)$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	e8 2a 3f 00 00       	call   f010409a <cprintf>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	e8 7f 17 00 00       	call   f01018f4 <mem_init>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 c8 36 00 00       	call   f0103842 <env_init>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	e8 12 40 00 00       	call   f0104191 <trap_init>$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	90                   	nop$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	e8 dc 67 00 00       	call   f0106961 <mp_init>$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	e8 d4 6a 00 00       	call   f0106c5e <lapic_init>$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	e8 36 3e 00 00       	call   f0103fc5 <pic_init>$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	c7 04 24 80 33 12 f0 	movl   $0xf0123380,(%esp)$/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196:	e8 45 6d 00 00       	call   f0106ee0 <spin_lock>$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	83 3d 88 8e 1d f0 07 	cmpl   $0x7,0xf01d8e88$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	77 24                	ja     f01001c8 <i386_init+0x9a>$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	00 $/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	f0 $/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	00 $/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	c7 04 24 ab 73 10 f0 	movl   $0xf01073ab,(%esp)$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	e8 78 fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001c8	obj/kern/kernel.asm	/^f01001c8:	b8 7e 68 10 f0       	mov    $0xf010687e,%eax$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	2d 04 68 10 f0       	sub    $0xf0106804,%eax$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	c7 44 24 04 04 68 10 	movl   $0xf0106804,0x4(%esp)$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	f0 $/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	e8 26 64 00 00       	call   f0106610 <memmove>$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	6b 05 c4 93 1d f0 74 	imul   $0x74,0xf01d93c4,%eax$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	05 20 90 1d f0       	add    $0xf01d9020,%eax$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	3d 20 90 1d f0       	cmp    $0xf01d9020,%eax$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	76 62                	jbe    f010025f <i386_init+0x131>$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	bb 20 90 1d f0       	mov    $0xf01d9020,%ebx$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	e8 3d 6a 00 00       	call   f0106c44 <cpunum>$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	05 20 90 1d f0       	add    $0xf01d9020,%eax$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	74 39                	je     f010024c <i386_init+0x11e>$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	89 d8                	mov    %ebx,%eax$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	2d 20 90 1d f0       	sub    $0xf01d9020,%eax$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	8d 80 00 20 1e f0    	lea    -0xfe1e000(%eax),%eax$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	a3 84 8e 1d f0       	mov    %eax,0xf01d8e84$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	00 $/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	e8 52 6b 00 00       	call   f0106d96 <lapic_startap>$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	75 f8                	jne    f0100244 <i386_init+0x116>$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	83 c3 74             	add    $0x74,%ebx$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	6b 05 c4 93 1d f0 74 	imul   $0x74,0xf01d93c4,%eax$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	05 20 90 1d f0       	add    $0xf01d9020,%eax$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	39 c3                	cmp    %eax,%ebx$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	72 a3                	jb     f0100202 <i386_init+0xd4>$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	00 $/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	c7 44 24 04 6b 4c 00 	movl   $0x4c6b,0x4(%esp)$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	00 $/;"	l
f0100274	obj/kern/kernel.asm	/^f0100274:	c7 04 24 d8 16 16 f0 	movl   $0xf01616d8,(%esp)$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	e8 f0 37 00 00       	call   f0103a70 <env_create>$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	83 fb 08             	cmp    $0x8,%ebx$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	75 dc                	jne    f0100264 <i386_init+0x136>$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
f010028f	obj/kern/kernel.asm	/^f010028f:	00 $/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	c7 44 24 04 d4 63 01 	movl   $0x163d4,0x4(%esp)$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	00 $/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	c7 04 24 65 19 1c f0 	movl   $0xf01c1965,(%esp)$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	e8 cc 37 00 00       	call   f0103a70 <env_create>$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	e8 0b 4c 00 00       	call   f0104eb4 <sched_yield>$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9 <_warn>:$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	55                   	push   %ebp$/;"	l
f01002aa	obj/kern/kernel.asm	/^f01002aa:	89 e5                	mov    %esp,%ebp$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	53                   	push   %ebx$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01002b6	obj/kern/kernel.asm	/^f01002b6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01002bd	obj/kern/kernel.asm	/^f01002bd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	c7 04 24 e8 73 10 f0 	movl   $0xf01073e8,(%esp)$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	e8 cd 3d 00 00       	call   f010409a <cprintf>$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	e8 8b 3d 00 00       	call   f0104067 <vcprintf>$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	c7 04 24 3e 84 10 f0 	movl   $0xf010843e,(%esp)$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	e8 b2 3d 00 00       	call   f010409a <cprintf>$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	83 c4 14             	add    $0x14,%esp$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	5b                   	pop    %ebx$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	5d                   	pop    %ebp$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	c3                   	ret    $/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0 <delay>:$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	55                   	push   %ebp$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	ec                   	in     (%dx),%al$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	ec                   	in     (%dx),%al$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	ec                   	in     (%dx),%al$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	ec                   	in     (%dx),%al$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	5d                   	pop    %ebp$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	c3                   	ret    $/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe <serial_proc_data>:$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	55                   	push   %ebp$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	ec                   	in     (%dx),%al$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	89 c2                	mov    %eax,%edx$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	74 09                	je     f010031c <serial_proc_data+0x1e>$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	ec                   	in     (%dx),%al$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	5d                   	pop    %ebp$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	c3                   	ret    $/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e <cons_intr>:$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	55                   	push   %ebp$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100321	obj/kern/kernel.asm	/^f0100321:	53                   	push   %ebx$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	89 c3                	mov    %eax,%ebx$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	eb 25                	jmp    f010034e <cons_intr+0x30>$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	85 c0                	test   %eax,%eax$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	74 21                	je     f010034e <cons_intr+0x30>$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	8b 15 24 82 1d f0    	mov    0xf01d8224,%edx$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	88 82 20 80 1d f0    	mov    %al,-0xfe27fe0(%edx)$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f010033c	obj/kern/kernel.asm	/^f010033c:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	a3 24 82 1d f0       	mov    %eax,0xf01d8224$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	ff d3                	call   *%ebx$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	75 d4                	jne    f0100329 <cons_intr+0xb>$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	5b                   	pop    %ebx$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	5d                   	pop    %ebp$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	c3                   	ret    $/;"	l
f010035b	obj/kern/kernel.asm	/^f010035b <cons_putc>:$/;"	l
f010035b	obj/kern/kernel.asm	/^f010035b:	55                   	push   %ebp$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	89 e5                	mov    %esp,%ebp$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	57                   	push   %edi$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	56                   	push   %esi$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	53                   	push   %ebx$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100367	obj/kern/kernel.asm	/^f0100367:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	ec                   	in     (%dx),%al$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	a8 20                	test   $0x20,%al$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	75 1b                	jne    f010038c <cons_putc+0x31>$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	e8 70 ff ff ff       	call   f01002f0 <delay>$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	89 f2                	mov    %esi,%edx$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	ec                   	in     (%dx),%al$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	a8 20                	test   $0x20,%al$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	75 05                	jne    f010038c <cons_putc+0x31>$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	75 ef                	jne    f010037b <cons_putc+0x20>$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	0f b6 7d e4          	movzbl -0x1c(%ebp),%edi$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	89 f8                	mov    %edi,%eax$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	ee                   	out    %al,(%dx)$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	b2 79                	mov    $0x79,%dl$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	ec                   	in     (%dx),%al$/;"	l
f010039b	obj/kern/kernel.asm	/^f010039b:	84 c0                	test   %al,%al$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	78 21                	js     f01003c0 <cons_putc+0x65>$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003a4	obj/kern/kernel.asm	/^f01003a4:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	e8 42 ff ff ff       	call   f01002f0 <delay>$/;"	l
f01003ae	obj/kern/kernel.asm	/^f01003ae:	89 f2                	mov    %esi,%edx$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	ec                   	in     (%dx),%al$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	84 c0                	test   %al,%al$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	78 0b                	js     f01003c0 <cons_putc+0x65>$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8:	81 fb 00 32 00 00    	cmp    $0x3200,%ebx$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	75 e9                	jne    f01003a9 <cons_putc+0x4e>$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	89 f8                	mov    %edi,%eax$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	ee                   	out    %al,(%dx)$/;"	l
f01003c8	obj/kern/kernel.asm	/^f01003c8:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	ee                   	out    %al,(%dx)$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	ee                   	out    %al,(%dx)$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	8b 15 7c 33 12 f0    	mov    0xf012337c,%edx$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	c1 e2 08             	shl    $0x8,%edx$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	a1 64 8a 1d f0       	mov    0xf01d8a64,%eax$/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	09 d0                	or     %edx,%eax$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	89 c1                	mov    %eax,%ecx$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	81 e1 00 ff ff ff    	and    $0xffffff00,%ecx$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	89 c2                	mov    %eax,%edx$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	80 ce 07             	or     $0x7,%dh$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	85 c9                	test   %ecx,%ecx$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	74 76                	je     f010047c <cons_putc+0x121>$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	7f 0b                	jg     f0100416 <cons_putc+0xbb>$/;"	l
f010040b	obj/kern/kernel.asm	/^f010040b:	83 fa 08             	cmp    $0x8,%edx$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	0f 85 9c 00 00 00    	jne    f01004b0 <cons_putc+0x155>$/;"	l
f0100414	obj/kern/kernel.asm	/^f0100414:	eb 12                	jmp    f0100428 <cons_putc+0xcd>$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	83 fa 0a             	cmp    $0xa,%edx$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	74 3b                	je     f0100456 <cons_putc+0xfb>$/;"	l
f010041b	obj/kern/kernel.asm	/^f010041b:	83 fa 0d             	cmp    $0xd,%edx$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	66 90                	xchg   %ax,%ax$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	0f 85 8a 00 00 00    	jne    f01004b0 <cons_putc+0x155>$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	eb 36                	jmp    f010045e <cons_putc+0x103>$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	0f b7 15 00 80 1d f0 	movzwl 0xf01d8000,%edx$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	66 85 d2             	test   %dx,%dx$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	0f 84 e3 00 00 00    	je     f010051b <cons_putc+0x1c0>$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	66 89 15 00 80 1d f0 	mov    %dx,0xf01d8000$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	b0 00                	mov    $0x0,%al$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	83 c8 20             	or     $0x20,%eax$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	8b 0d 04 80 1d f0    	mov    0xf01d8004,%ecx$/;"	l
f0100450	obj/kern/kernel.asm	/^f0100450:	66 89 04 51          	mov    %ax,(%ecx,%edx,2)$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	eb 78                	jmp    f01004ce <cons_putc+0x173>$/;"	l
f0100456	obj/kern/kernel.asm	/^f0100456:	66 83 05 00 80 1d f0 	addw   $0x50,0xf01d8000$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	50 $/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	0f b7 05 00 80 1d f0 	movzwl 0xf01d8000,%eax$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	66 a3 00 80 1d f0    	mov    %ax,0xf01d8000$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	eb 52                	jmp    f01004ce <cons_putc+0x173>$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	e8 d5 fe ff ff       	call   f010035b <cons_putc>$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	e8 cb fe ff ff       	call   f010035b <cons_putc>$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	e8 c1 fe ff ff       	call   f010035b <cons_putc>$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	e8 b7 fe ff ff       	call   f010035b <cons_putc>$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	e8 ad fe ff ff       	call   f010035b <cons_putc>$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	eb 1e                	jmp    f01004ce <cons_putc+0x173>$/;"	l
f01004b0	obj/kern/kernel.asm	/^f01004b0:	0f b7 15 00 80 1d f0 	movzwl 0xf01d8000,%edx$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	0f b7 da             	movzwl %dx,%ebx$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	8b 0d 04 80 1d f0    	mov    0xf01d8004,%ecx$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	66 89 04 59          	mov    %ax,(%ecx,%ebx,2)$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	83 c2 01             	add    $0x1,%edx$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	66 89 15 00 80 1d f0 	mov    %dx,0xf01d8000$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	66 81 3d 00 80 1d f0 	cmpw   $0x7cf,0xf01d8000$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	cf 07 $/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	76 42                	jbe    f010051b <cons_putc+0x1c0>$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	a1 04 80 1d f0       	mov    0xf01d8004,%eax$/;"	l
f01004de	obj/kern/kernel.asm	/^f01004de:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	00 $/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	e8 18 61 00 00       	call   f0106610 <memmove>$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	8b 15 04 80 1d f0    	mov    0xf01d8004,%edx$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	83 c0 01             	add    $0x1,%eax$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	75 f0                	jne    f0100503 <cons_putc+0x1a8>$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	66 83 2d 00 80 1d f0 	subw   $0x50,0xf01d8000$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	50 $/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	8b 0d 08 80 1d f0    	mov    0xf01d8008,%ecx$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100526	obj/kern/kernel.asm	/^f0100526:	89 ca                	mov    %ecx,%edx$/;"	l
f0100528	obj/kern/kernel.asm	/^f0100528:	ee                   	out    %al,(%dx)$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	0f b7 35 00 80 1d f0 	movzwl 0xf01d8000,%esi$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	89 f0                	mov    %esi,%eax$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100539	obj/kern/kernel.asm	/^f0100539:	89 da                	mov    %ebx,%edx$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	ee                   	out    %al,(%dx)$/;"	l
f010053c	obj/kern/kernel.asm	/^f010053c:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	89 ca                	mov    %ecx,%edx$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	ee                   	out    %al,(%dx)$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	89 f0                	mov    %esi,%eax$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	89 da                	mov    %ebx,%edx$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	ee                   	out    %al,(%dx)$/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	5b                   	pop    %ebx$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	5e                   	pop    %esi$/;"	l
f010054e	obj/kern/kernel.asm	/^f010054e:	5f                   	pop    %edi$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	5d                   	pop    %ebp$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	c3                   	ret    $/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551 <kbd_proc_data>:$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	55                   	push   %ebp$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	89 e5                	mov    %esp,%ebp$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	53                   	push   %ebx$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100558	obj/kern/kernel.asm	/^f0100558:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f010055d	obj/kern/kernel.asm	/^f010055d:	ec                   	in     (%dx),%al$/;"	l
f010055e	obj/kern/kernel.asm	/^f010055e:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	a8 01                	test   $0x1,%al$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	0f 84 de 00 00 00    	je     f0100649 <kbd_proc_data+0xf8>$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	b2 60                	mov    $0x60,%dl$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	ec                   	in     (%dx),%al$/;"	l
f010056e	obj/kern/kernel.asm	/^f010056e:	89 c2                	mov    %eax,%edx$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	75 11                	jne    f0100585 <kbd_proc_data+0x34>$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	83 0d 28 82 1d f0 40 	orl    $0x40,0xf01d8228$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	e9 c4 00 00 00       	jmp    f0100649 <kbd_proc_data+0xf8>$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	84 c0                	test   %al,%al$/;"	l
f0100587	obj/kern/kernel.asm	/^f0100587:	79 37                	jns    f01005c0 <kbd_proc_data+0x6f>$/;"	l
f0100589	obj/kern/kernel.asm	/^f0100589:	8b 0d 28 82 1d f0    	mov    0xf01d8228,%ecx$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100591	obj/kern/kernel.asm	/^f0100591:	83 e3 40             	and    $0x40,%ebx$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	85 db                	test   %ebx,%ebx$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f010059c	obj/kern/kernel.asm	/^f010059c:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	0f b6 82 40 74 10 f0 	movzbl -0xfef8bc0(%edx),%eax$/;"	l
f01005a6	obj/kern/kernel.asm	/^f01005a6:	83 c8 40             	or     $0x40,%eax$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	f7 d0                	not    %eax$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	21 c1                	and    %eax,%ecx$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	89 0d 28 82 1d f0    	mov    %ecx,0xf01d8228$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	e9 89 00 00 00       	jmp    f0100649 <kbd_proc_data+0xf8>$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	8b 0d 28 82 1d f0    	mov    0xf01d8228,%ecx$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	74 0e                	je     f01005d9 <kbd_proc_data+0x88>$/;"	l
f01005cb	obj/kern/kernel.asm	/^f01005cb:	89 c2                	mov    %eax,%edx$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	89 0d 28 82 1d f0    	mov    %ecx,0xf01d8228$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	0f b6 82 40 74 10 f0 	movzbl -0xfef8bc0(%edx),%eax$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	0b 05 28 82 1d f0    	or     0xf01d8228,%eax$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	0f b6 8a 40 75 10 f0 	movzbl -0xfef8ac0(%edx),%ecx$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	31 c8                	xor    %ecx,%eax$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	a3 28 82 1d f0       	mov    %eax,0xf01d8228$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	89 c1                	mov    %eax,%ecx$/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01005fc	obj/kern/kernel.asm	/^f01005fc:	8b 0c 8d 40 76 10 f0 	mov    -0xfef89c0(,%ecx,4),%ecx$/;"	l
f0100603	obj/kern/kernel.asm	/^f0100603:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	a8 08                	test   $0x8,%al$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	74 19                	je     f0100624 <kbd_proc_data+0xd3>$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	77 05                	ja     f0100618 <kbd_proc_data+0xc7>$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	eb 0c                	jmp    f0100624 <kbd_proc_data+0xd3>$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	8d 4b bf             	lea    -0x41(%ebx),%ecx$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	8d 53 20             	lea    0x20(%ebx),%edx$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	0f 46 da             	cmovbe %edx,%ebx$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	f7 d0                	not    %eax$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	a8 06                	test   $0x6,%al$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	75 1f                	jne    f0100649 <kbd_proc_data+0xf8>$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	75 17                	jne    f0100649 <kbd_proc_data+0xf8>$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	c7 04 24 02 74 10 f0 	movl   $0xf0107402,(%esp)$/;"	l
f0100639	obj/kern/kernel.asm	/^f0100639:	e8 5c 3a 00 00       	call   f010409a <cprintf>$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	ee                   	out    %al,(%dx)$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	89 d8                	mov    %ebx,%eax$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	5b                   	pop    %ebx$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	5d                   	pop    %ebp$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	c3                   	ret    $/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651 <serial_intr>:$/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	55                   	push   %ebp$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	89 e5                	mov    %esp,%ebp$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	83 3d 0c 80 1d f0 00 	cmpl   $0x0,0xf01d800c$/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	74 0a                	je     f010066a <serial_intr+0x19>$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	b8 fe 02 10 f0       	mov    $0xf01002fe,%eax$/;"	l
f0100665	obj/kern/kernel.asm	/^f0100665:	e8 b4 fc ff ff       	call   f010031e <cons_intr>$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	c9                   	leave  $/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	c3                   	ret    $/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c <kbd_intr>:$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	55                   	push   %ebp$/;"	l
f010066d	obj/kern/kernel.asm	/^f010066d:	89 e5                	mov    %esp,%ebp$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	b8 51 05 10 f0       	mov    $0xf0100551,%eax$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	e8 a2 fc ff ff       	call   f010031e <cons_intr>$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	c9                   	leave  $/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	c3                   	ret    $/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e <cons_getc>:$/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	55                   	push   %ebp$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	e8 c8 ff ff ff       	call   f0100651 <serial_intr>$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	e8 de ff ff ff       	call   f010066c <kbd_intr>$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	8b 15 20 82 1d f0    	mov    0xf01d8220,%edx$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	3b 15 24 82 1d f0    	cmp    0xf01d8224,%edx$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	74 1e                	je     f01006bf <cons_getc+0x41>$/;"	l
f01006a1	obj/kern/kernel.asm	/^f01006a1:	0f b6 82 20 80 1d f0 	movzbl -0xfe27fe0(%edx),%eax$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	83 c2 01             	add    $0x1,%edx$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	0f 44 d1             	cmove  %ecx,%edx$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	89 15 20 82 1d f0    	mov    %edx,0xf01d8220$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	c9                   	leave  $/;"	l
f01006c0	obj/kern/kernel.asm	/^f01006c0:	c3                   	ret    $/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1 <cons_init>:$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	55                   	push   %ebp$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	57                   	push   %edi$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	56                   	push   %esi$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	53                   	push   %ebx$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	5a a5 $/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	74 11                	je     f01006f8 <cons_init+0x37>$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	c7 05 08 80 1d f0 b4 	movl   $0x3b4,0xf01d8008$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	03 00 00 $/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	eb 16                	jmp    f010070e <cons_init+0x4d>$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	c7 05 08 80 1d f0 d4 	movl   $0x3d4,0xf01d8008$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	03 00 00 $/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	8b 0d 08 80 1d f0    	mov    0xf01d8008,%ecx$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	89 ca                	mov    %ecx,%edx$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	ee                   	out    %al,(%dx)$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	89 da                	mov    %ebx,%edx$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	ec                   	in     (%dx),%al$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	0f b6 f8             	movzbl %al,%edi$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	89 ca                	mov    %ecx,%edx$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	ee                   	out    %al,(%dx)$/;"	l
f0100730	obj/kern/kernel.asm	/^f0100730:	89 da                	mov    %ebx,%edx$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	ec                   	in     (%dx),%al$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	89 35 04 80 1d f0    	mov    %esi,0xf01d8004$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	09 df                	or     %ebx,%edi$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	66 89 3d 00 80 1d f0 	mov    %di,0xf01d8000$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	e8 22 ff ff ff       	call   f010066c <kbd_intr>$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	0f b7 05 70 33 12 f0 	movzwl 0xf0123370,%eax$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	e8 f6 37 00 00       	call   f0103f54 <irq_setmask_8259A>$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	89 da                	mov    %ebx,%edx$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	ee                   	out    %al,(%dx)$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	ee                   	out    %al,(%dx)$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	89 ca                	mov    %ecx,%edx$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	ee                   	out    %al,(%dx)$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	ee                   	out    %al,(%dx)$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	ee                   	out    %al,(%dx)$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	ee                   	out    %al,(%dx)$/;"	l
f0100798	obj/kern/kernel.asm	/^f0100798:	b2 f9                	mov    $0xf9,%dl$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	ee                   	out    %al,(%dx)$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	b2 fd                	mov    $0xfd,%dl$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	ec                   	in     (%dx),%al$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	3c ff                	cmp    $0xff,%al$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	0f 95 c0             	setne  %al$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	89 c6                	mov    %eax,%esi$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	a3 0c 80 1d f0       	mov    %eax,0xf01d800c$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	89 da                	mov    %ebx,%edx$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	ec                   	in     (%dx),%al$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	89 ca                	mov    %ecx,%edx$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	ec                   	in     (%dx),%al$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	85 f6                	test   %esi,%esi$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	75 0c                	jne    f01007c8 <cons_init+0x107>$/;"	l
f01007bc	obj/kern/kernel.asm	/^f01007bc:	c7 04 24 0e 74 10 f0 	movl   $0xf010740e,(%esp)$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	e8 d2 38 00 00       	call   f010409a <cprintf>$/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	5b                   	pop    %ebx$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	5e                   	pop    %esi$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	5f                   	pop    %edi$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	5d                   	pop    %ebp$/;"	l
f01007cf	obj/kern/kernel.asm	/^f01007cf:	c3                   	ret    $/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0 <cputchar>:$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	55                   	push   %ebp$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007d9	obj/kern/kernel.asm	/^f01007d9:	e8 7d fb ff ff       	call   f010035b <cons_putc>$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	c9                   	leave  $/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	c3                   	ret    $/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0 <getchar>:$/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0:	55                   	push   %ebp$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	e8 93 fe ff ff       	call   f010067e <cons_getc>$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	85 c0                	test   %eax,%eax$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	74 f7                	je     f01007e6 <getchar+0x6>$/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef:	c9                   	leave  $/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	c3                   	ret    $/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1 <iscons>:$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	55                   	push   %ebp$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	89 e5                	mov    %esp,%ebp$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	5d                   	pop    %ebp$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	c3                   	ret    $/;"	l
f01007fb	obj/kern/kernel.asm	/^f01007fb:	00 00                	add    %al,(%eax)$/;"	l
f01007fd	obj/kern/kernel.asm	/^f01007fd:	00 00                	add    %al,(%eax)$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800 <mon_kerninfo>:$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	55                   	push   %ebp$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	89 e5                	mov    %esp,%ebp$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	c7 04 24 50 76 10 f0 	movl   $0xf0107650,(%esp)$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	e8 88 38 00 00       	call   f010409a <cprintf>$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	00 $/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	f0 $/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	c7 04 24 f8 77 10 f0 	movl   $0xf01077f8,(%esp)$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	e8 6c 38 00 00       	call   f010409a <cprintf>$/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	c7 44 24 08 25 73 10 	movl   $0x107325,0x8(%esp)$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	00 $/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	c7 44 24 04 25 73 10 	movl   $0xf0107325,0x4(%esp)$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	f0 $/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	c7 04 24 1c 78 10 f0 	movl   $0xf010781c,(%esp)$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	e8 50 38 00 00       	call   f010409a <cprintf>$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	c7 44 24 08 39 7d 1d 	movl   $0x1d7d39,0x8(%esp)$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	00 $/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	c7 44 24 04 39 7d 1d 	movl   $0xf01d7d39,0x4(%esp)$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	f0 $/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	c7 04 24 40 78 10 f0 	movl   $0xf0107840,(%esp)$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	e8 34 38 00 00       	call   f010409a <cprintf>$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	c7 44 24 08 04 a0 21 	movl   $0x21a004,0x8(%esp)$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	00 $/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	c7 44 24 04 04 a0 21 	movl   $0xf021a004,0x4(%esp)$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	f0 $/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	c7 04 24 64 78 10 f0 	movl   $0xf0107864,(%esp)$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	e8 18 38 00 00       	call   f010409a <cprintf>$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	b8 0c 00 10 f0       	mov    $0xf010000c,%eax$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	f7 d8                	neg    %eax$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	8d 90 02 a8 21 f0    	lea    -0xfde57fe(%eax),%edx$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	05 03 a4 21 f0       	add    $0xf021a403,%eax$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	85 c0                	test   %eax,%eax$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	c7 04 24 88 78 10 f0 	movl   $0xf0107888,(%esp)$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	e8 ee 37 00 00       	call   f010409a <cprintf>$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	c9                   	leave  $/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	c3                   	ret    $/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3 <mon_help>:$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	55                   	push   %ebp$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	89 e5                	mov    %esp,%ebp$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	53                   	push   %ebx$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	8b 83 44 7a 10 f0    	mov    -0xfef85bc(%ebx),%eax$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	8b 83 40 7a 10 f0    	mov    -0xfef85c0(%ebx),%eax$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	c7 04 24 69 76 10 f0 	movl   $0xf0107669,(%esp)$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	e8 bb 37 00 00       	call   f010409a <cprintf>$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	83 fb 54             	cmp    $0x54,%ebx$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	75 d8                	jne    f01008bf <mon_help+0xc>$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	83 c4 14             	add    $0x14,%esp$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	5b                   	pop    %ebx$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	5d                   	pop    %ebp$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	c3                   	ret    $/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2 <mon_si>:$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	55                   	push   %ebp$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	81 48 38 00 01 00 00 	orl    $0x100,0x38(%eax)$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	e8 3d 63 00 00       	call   f0106c44 <cpunum>$/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	e8 35 35 00 00       	call   f0103e4d <env_run>$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918 <mon_dump>:$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	55                   	push   %ebp$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	89 e5                	mov    %esp,%ebp$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	57                   	push   %edi$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	56                   	push   %esi$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	53                   	push   %ebx$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	74 11                	je     f010093b <mon_dump+0x23>$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	c7 04 24 b4 78 10 f0 	movl   $0xf01078b4,(%esp)$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	e8 64 37 00 00       	call   f010409a <cprintf>$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	e9 63 01 00 00       	jmp    f0100a9e <mon_dump+0x186>$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	c7 44 24 04 02 87 10 	movl   $0xf0108702,0x4(%esp)$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	f0 $/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	e8 8a 5b 00 00       	call   f01064d8 <strcmp>$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	85 c0                	test   %eax,%eax$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	75 43                	jne    f0100995 <mon_dump+0x7d>$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	00 $/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	00 $/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	e8 ba 5d 00 00       	call   f0106727 <strtol>$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	89 c7                	mov    %eax,%edi$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	00 $/;"	l
f0100977	obj/kern/kernel.asm	/^f0100977:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	00 $/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	e8 9d 5d 00 00       	call   f0106727 <strtol>$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	e9 96 00 00 00       	jmp    f0100a2b <mon_dump+0x113>$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	c7 44 24 04 7b 77 10 	movl   $0xf010777b,0x4(%esp)$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	f0 $/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	e8 30 5b 00 00       	call   f01064d8 <strcmp>$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	85 c0                	test   %eax,%eax$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	75 71                	jne    f0100a1d <mon_dump+0x105>$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	00 $/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	00 $/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	e8 60 5d 00 00       	call   f0106727 <strtol>$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	89 c2                	mov    %eax,%edx$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	72 20                	jb     f01009f4 <mon_dump+0xdc>$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	f0 $/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	c7 44 24 04 cf 00 00 	movl   $0xcf,0x4(%esp)$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	00 $/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	c7 04 24 72 76 10 f0 	movl   $0xf0107672,(%esp)$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	e8 4c f6 ff ff       	call   f0100040 <_panic>$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	00 $/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	00 $/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	e8 12 5d 00 00       	call   f0106727 <strtol>$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	eb 0e                	jmp    f0100a2b <mon_dump+0x113>$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	e8 71 36 00 00       	call   f010409a <cprintf>$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	eb 73                	jmp    f0100a9e <mon_dump+0x186>$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	8d 47 03             	lea    0x3(%edi),%eax$/;"	l
f0100a2e	obj/kern/kernel.asm	/^f0100a2e:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	39 c7                	cmp    %eax,%edi$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	75 17                	jne    f0100a4c <mon_dump+0x134>$/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	83 c0 03             	add    $0x3,%eax$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	75 09                	jne    f0100a4c <mon_dump+0x134>$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	89 fe                	mov    %edi,%esi$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	3b 7d e4             	cmp    -0x1c(%ebp),%edi$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	72 10                	jb     f0100a5a <mon_dump+0x142>$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	eb 52                	jmp    f0100a9e <mon_dump+0x186>$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	c7 04 24 98 76 10 f0 	movl   $0xf0107698,(%esp)$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	e8 42 36 00 00       	call   f010409a <cprintf>$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	eb 44                	jmp    f0100a9e <mon_dump+0x186>$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	c7 04 24 aa 76 10 f0 	movl   $0xf01076aa,(%esp)$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	e8 30 36 00 00       	call   f010409a <cprintf>$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	8b 04 9e             	mov    (%esi,%ebx,4),%eax$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	c7 04 24 b3 76 10 f0 	movl   $0xf01076b3,(%esp)$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	e8 18 36 00 00       	call   f010409a <cprintf>$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	83 fb 04             	cmp    $0x4,%ebx$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	75 e5                	jne    f0100a6f <mon_dump+0x157>$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	c7 04 24 3e 84 10 f0 	movl   $0xf010843e,(%esp)$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	e8 04 36 00 00       	call   f010409a <cprintf>$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	83 c6 10             	add    $0x10,%esi$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	39 75 e4             	cmp    %esi,-0x1c(%ebp)$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	77 bc                	ja     f0100a5a <mon_dump+0x142>$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	5b                   	pop    %ebx$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	5e                   	pop    %esi$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	5f                   	pop    %edi$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	5d                   	pop    %ebp$/;"	l
f0100aaa	obj/kern/kernel.asm	/^f0100aaa:	c3                   	ret    $/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab <mon_setperm>:$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	55                   	push   %ebp$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	57                   	push   %edi$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	56                   	push   %esi$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	53                   	push   %ebx$/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	74 11                	je     f0100ace <mon_setperm+0x23>$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	c7 04 24 d8 78 10 f0 	movl   $0xf01078d8,(%esp)$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	e8 d1 35 00 00       	call   f010409a <cprintf>$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	e9 cd 00 00 00       	jmp    f0100b9b <mon_setperm+0xf0>$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	00 $/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	00 $/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	e8 3e 5c 00 00       	call   f0106727 <strtol>$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	89 c7                	mov    %eax,%edi$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	00 $/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	00 $/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	e8 21 5c 00 00       	call   f0106727 <strtol>$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	8b 73 0c             	mov    0xc(%ebx),%esi$/;"	l
f0100b0c	obj/kern/kernel.asm	/^f0100b0c:	8d 87 ff 0f 00 00    	lea    0xfff(%edi),%eax$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	39 c7                	cmp    %eax,%edi$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	75 12                	jne    f0100b2d <mon_setperm+0x82>$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	74 0c                	je     f0100b39 <mon_setperm+0x8e>$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	c7 04 24 98 76 10 f0 	movl   $0xf0107698,(%esp)$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	e8 61 35 00 00       	call   f010409a <cprintf>$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	3b 7d e4             	cmp    -0x1c(%ebp),%edi$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	73 5d                	jae    f0100b9b <mon_setperm+0xf0>$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	00 $/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0100b4f	obj/kern/kernel.asm	/^f0100b4f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	e8 dd 09 00 00       	call   f0101534 <pgdir_walk>$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	89 c3                	mov    %eax,%ebx$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	85 c0                	test   %eax,%eax$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	74 05                	je     f0100b62 <mon_setperm+0xb7>$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	75 0c                	jne    f0100b6e <mon_setperm+0xc3>$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	c7 04 24 bb 76 10 f0 	movl   $0xf01076bb,(%esp)$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	e8 2c 35 00 00       	call   f010409a <cprintf>$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	80 3e 75             	cmpb   $0x75,(%esi)$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	75 03                	jne    f0100b76 <mon_setperm+0xcb>$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	83 0b 04             	orl    $0x4,(%ebx)$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	80 3e 6b             	cmpb   $0x6b,(%esi)$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	75 03                	jne    f0100b7e <mon_setperm+0xd3>$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	83 23 fb             	andl   $0xfffffffb,(%ebx)$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	80 7e 01 77          	cmpb   $0x77,0x1(%esi)$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	75 03                	jne    f0100b87 <mon_setperm+0xdc>$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	83 0b 02             	orl    $0x2,(%ebx)$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	80 7e 01 72          	cmpb   $0x72,0x1(%esi)$/;"	l
f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	75 03                	jne    f0100b90 <mon_setperm+0xe5>$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	83 23 fd             	andl   $0xfffffffd,(%ebx)$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	39 7d e4             	cmp    %edi,-0x1c(%ebp)$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	77 a3                	ja     f0100b3e <mon_setperm+0x93>$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	5b                   	pop    %ebx$/;"	l
f0100ba4	obj/kern/kernel.asm	/^f0100ba4:	5e                   	pop    %esi$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	5f                   	pop    %edi$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	5d                   	pop    %ebp$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	c3                   	ret    $/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8 <mon_showmapping>:$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	55                   	push   %ebp$/;"	l
f0100ba9	obj/kern/kernel.asm	/^f0100ba9:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	74 11                	je     f0100bd1 <mon_showmapping+0x29>$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	c7 04 24 0c 79 10 f0 	movl   $0xf010790c,(%esp)$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	e8 ce 34 00 00       	call   f010409a <cprintf>$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	e9 22 01 00 00       	jmp    f0100cf3 <mon_showmapping+0x14b>$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	00 $/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	00 $/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	e8 3b 5b 00 00       	call   f0106727 <strtol>$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	89 c6                	mov    %eax,%esi$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	00 $/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	00 $/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	e8 1e 5b 00 00       	call   f0106727 <strtol>$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	8d 96 ff 0f 00 00    	lea    0xfff(%esi),%edx$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	39 d6                	cmp    %edx,%esi$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	75 1f                	jne    f0100c38 <mon_showmapping+0x90>$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	89 c7                	mov    %eax,%edi$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	39 d0                	cmp    %edx,%eax$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	75 0d                	jne    f0100c38 <mon_showmapping+0x90>$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	39 c6                	cmp    %eax,%esi$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	77 09                	ja     f0100c38 <mon_showmapping+0x90>$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	89 f3                	mov    %esi,%ebx$/;"	l
f0100c31	obj/kern/kernel.asm	/^f0100c31:	72 18                	jb     f0100c4b <mon_showmapping+0xa3>$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	e9 bb 00 00 00       	jmp    f0100cf3 <mon_showmapping+0x14b>$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	c7 04 24 98 76 10 f0 	movl   $0xf0107698,(%esp)$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	e8 56 34 00 00       	call   f010409a <cprintf>$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	e9 aa 00 00 00       	jmp    f0100cf3 <mon_showmapping+0x14b>$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	89 f3                	mov    %esi,%ebx$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	8d b3 00 10 00 00    	lea    0x1000(%ebx),%esi$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	c7 04 24 c7 76 10 f0 	movl   $0xf01076c7,(%esp)$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	e8 35 34 00 00       	call   f010409a <cprintf>$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	00 $/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	e8 b6 08 00 00       	call   f0101534 <pgdir_walk>$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	89 c3                	mov    %eax,%ebx$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	85 c0                	test   %eax,%eax$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	74 06                	je     f0100c8a <mon_showmapping+0xe2>$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	8b 00                	mov    (%eax),%eax$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	a8 01                	test   $0x1,%al$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	75 0e                	jne    f0100c98 <mon_showmapping+0xf0>$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	c7 04 24 bb 76 10 f0 	movl   $0xf01076bb,(%esp)$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	e8 04 34 00 00       	call   f010409a <cprintf>$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	eb 53                	jmp    f0100ceb <mon_showmapping+0x143>$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	c7 04 24 db 76 10 f0 	movl   $0xf01076db,(%esp)$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	e8 ed 33 00 00       	call   f010409a <cprintf>$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	f6 03 04             	testb  $0x4,(%ebx)$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	74 0e                	je     f0100cc0 <mon_showmapping+0x118>$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	c7 04 24 f0 76 10 f0 	movl   $0xf01076f0,(%esp)$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	e8 dc 33 00 00       	call   f010409a <cprintf>$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	eb 0c                	jmp    f0100ccc <mon_showmapping+0x124>$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	c7 04 24 f7 76 10 f0 	movl   $0xf01076f7,(%esp)$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	e8 ce 33 00 00       	call   f010409a <cprintf>$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	f6 03 02             	testb  $0x2,(%ebx)$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	74 0e                	je     f0100cdf <mon_showmapping+0x137>$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	c7 04 24 00 77 10 f0 	movl   $0xf0107700,(%esp)$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	e8 bd 33 00 00       	call   f010409a <cprintf>$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	eb 0c                	jmp    f0100ceb <mon_showmapping+0x143>$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	c7 04 24 0c 77 10 f0 	movl   $0xf010770c,(%esp)$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	e8 af 33 00 00       	call   f010409a <cprintf>$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	39 f7                	cmp    %esi,%edi$/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	0f 87 56 ff ff ff    	ja     f0100c49 <mon_showmapping+0xa1>$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100cf8	obj/kern/kernel.asm	/^f0100cf8:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	89 ec                	mov    %ebp,%esp$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	5d                   	pop    %ebp$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	c3                   	ret    $/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05 <mon_backtrace>:$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	55                   	push   %ebp$/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	57                   	push   %edi$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	56                   	push   %esi$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	53                   	push   %ebx$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	89 ee                	mov    %ebp,%esi$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	89 f1                	mov    %esi,%ecx$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	89 f3                	mov    %esi,%ebx$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	8b 7e 04             	mov    0x4(%esi),%edi$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	8b 54 81 08          	mov    0x8(%ecx,%eax,4),%edx$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	89 54 85 d4          	mov    %edx,-0x2c(%ebp,%eax,4)$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	75 f0                	jne    f0100d1c <mon_backtrace+0x17>$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	c7 04 24 17 77 10 f0 	movl   $0xf0107717,(%esp)$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	e8 62 33 00 00       	call   f010409a <cprintf>$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	85 f6                	test   %esi,%esi$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	0f 84 9c 00 00 00    	je     f0100ddc <mon_backtrace+0xd7>$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	89 fe                	mov    %edi,%esi$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	8d 7d bc             	lea    -0x44(%ebp),%edi$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100d5d	obj/kern/kernel.asm	/^f0100d5d:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	c7 04 24 3c 79 10 f0 	movl   $0xf010793c,(%esp)$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	e8 1e 33 00 00       	call   f010409a <cprintf>$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	e8 d6 4a 00 00       	call   f010585e <debuginfo_eip>$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	2b 75 cc             	sub    -0x34(%ebp),%esi$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0100da0	obj/kern/kernel.asm	/^f0100da0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100dab	obj/kern/kernel.asm	/^f0100dab:	c7 04 24 28 77 10 f0 	movl   $0xf0107728,(%esp)$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	e8 e3 32 00 00       	call   f010409a <cprintf>$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	89 d9                	mov    %ebx,%ecx$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	85 db                	test   %ebx,%ebx$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	74 1d                	je     f0100ddc <mon_backtrace+0xd7>$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	8b 73 04             	mov    0x4(%ebx),%esi$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	8b 54 81 08          	mov    0x8(%ecx,%eax,4),%edx$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	89 54 85 d4          	mov    %edx,-0x2c(%ebp,%eax,4)$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	75 f0                	jne    f0100dc7 <mon_backtrace+0xc2>$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	e9 69 ff ff ff       	jmp    f0100d45 <mon_backtrace+0x40>$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	5b                   	pop    %ebx$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	5e                   	pop    %esi$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	5f                   	pop    %edi$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	5d                   	pop    %ebp$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	c3                   	ret    $/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9 <monitor>:$/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9:	55                   	push   %ebp$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	57                   	push   %edi$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	56                   	push   %esi$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	53                   	push   %ebx$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	c7 04 24 70 79 10 f0 	movl   $0xf0107970,(%esp)$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	e8 9c 32 00 00       	call   f010409a <cprintf>$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	c7 04 24 94 79 10 f0 	movl   $0xf0107994,(%esp)$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	e8 90 32 00 00       	call   f010409a <cprintf>$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	74 0b                	je     f0100e1b <monitor+0x32>$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	e8 0b 3a 00 00       	call   f0104826 <print_trapframe>$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	c7 04 24 3c 77 10 f0 	movl   $0xf010773c,(%esp)$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	e8 e9 54 00 00       	call   f0106310 <readline>$/;"	l
f0100e27	obj/kern/kernel.asm	/^f0100e27:	89 c3                	mov    %eax,%ebx$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	85 c0                	test   %eax,%eax$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	74 ee                	je     f0100e1b <monitor+0x32>$/;"	l
f0100e2d	obj/kern/kernel.asm	/^f0100e2d:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	eb 06                	jmp    f0100e41 <monitor+0x58>$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100e3e	obj/kern/kernel.asm	/^f0100e3e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	84 c0                	test   %al,%al$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	74 6a                	je     f0100eb2 <monitor+0xc9>$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	0f be c0             	movsbl %al,%eax$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	c7 04 24 40 77 10 f0 	movl   $0xf0107740,(%esp)$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	e8 f7 56 00 00       	call   f0106552 <strchr>$/;"	l
f0100e5b	obj/kern/kernel.asm	/^f0100e5b:	85 c0                	test   %eax,%eax$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	75 dc                	jne    f0100e3b <monitor+0x52>$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	74 4e                	je     f0100eb2 <monitor+0xc9>$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	75 16                	jne    f0100e7f <monitor+0x96>$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	00 $/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	c7 04 24 45 77 10 f0 	movl   $0xf0107745,(%esp)$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	e8 1d 32 00 00       	call   f010409a <cprintf>$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	eb 9c                	jmp    f0100e1b <monitor+0x32>$/;"	l
f0100e7f	obj/kern/kernel.asm	/^f0100e7f:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	84 c0                	test   %al,%al$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	75 0c                	jne    f0100e99 <monitor+0xb0>$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	eb b2                	jmp    f0100e41 <monitor+0x58>$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	84 c0                	test   %al,%al$/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	74 a8                	je     f0100e41 <monitor+0x58>$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	0f be c0             	movsbl %al,%eax$/;"	l
f0100e9c	obj/kern/kernel.asm	/^f0100e9c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	c7 04 24 40 77 10 f0 	movl   $0xf0107740,(%esp)$/;"	l
f0100ea7	obj/kern/kernel.asm	/^f0100ea7:	e8 a6 56 00 00       	call   f0106552 <strchr>$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	85 c0                	test   %eax,%eax$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	74 df                	je     f0100e8f <monitor+0xa6>$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	eb 8f                	jmp    f0100e41 <monitor+0x58>$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	00 $/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	85 f6                	test   %esi,%esi$/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	0f 84 59 ff ff ff    	je     f0100e1b <monitor+0x32>$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	bb 40 7a 10 f0       	mov    $0xf0107a40,%ebx$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ed2	obj/kern/kernel.asm	/^f0100ed2:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	e8 fb 55 00 00       	call   f01064d8 <strcmp>$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	85 c0                	test   %eax,%eax$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	75 23                	jne    f0100f04 <monitor+0x11b>$/;"	l
f0100ee1	obj/kern/kernel.asm	/^f0100ee1:	6b ff 0c             	imul   $0xc,%edi,%edi$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	ff 97 48 7a 10 f0    	call   *-0xfef85b8(%edi)$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	85 c0                	test   %eax,%eax$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	78 28                	js     f0100f27 <monitor+0x13e>$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	e9 17 ff ff ff       	jmp    f0100e1b <monitor+0x32>$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	83 ff 07             	cmp    $0x7,%edi$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	75 bd                	jne    f0100ecc <monitor+0xe3>$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	c7 04 24 62 77 10 f0 	movl   $0xf0107762,(%esp)$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	e8 78 31 00 00       	call   f010409a <cprintf>$/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22:	e9 f4 fe ff ff       	jmp    f0100e1b <monitor+0x32>$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	5b                   	pop    %ebx$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	5e                   	pop    %esi$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	5f                   	pop    %edi$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	5d                   	pop    %ebp$/;"	l
f0100f2e	obj/kern/kernel.asm	/^f0100f2e:	c3                   	ret    $/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f <read_eip>:$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	55                   	push   %ebp$/;"	l
f0100f30	obj/kern/kernel.asm	/^f0100f30:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
f0100f35	obj/kern/kernel.asm	/^f0100f35:	5d                   	pop    %ebp$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	c3                   	ret    $/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40 <boot_alloc>:$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	55                   	push   %ebp$/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	89 c2                	mov    %eax,%edx$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	83 3d 34 82 1d f0 00 	cmpl   $0x0,0xf01d8234$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	75 0f                	jne    f0100f5d <boot_alloc+0x1d>$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	b8 03 b0 21 f0       	mov    $0xf021b003,%eax$/;"	l
f0100f53	obj/kern/kernel.asm	/^f0100f53:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	a3 34 82 1d f0       	mov    %eax,0xf01d8234$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	a1 34 82 1d f0       	mov    0xf01d8234,%eax$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	8d 14 10             	lea    (%eax,%edx,1),%edx$/;"	l
f0100f6f	obj/kern/kernel.asm	/^f0100f6f:	89 15 34 82 1d f0    	mov    %edx,0xf01d8234$/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	5d                   	pop    %ebp$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	c3                   	ret    $/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77 <nvram_read>:$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	55                   	push   %ebp$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f0100f80	obj/kern/kernel.asm	/^f0100f80:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	89 c3                	mov    %eax,%ebx$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f88	obj/kern/kernel.asm	/^f0100f88:	e8 9f 2f 00 00       	call   f0103f2c <mc146818_read>$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	89 c6                	mov    %eax,%esi$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	e8 92 2f 00 00       	call   f0103f2c <mc146818_read>$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	09 f0                	or     %esi,%eax$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	89 ec                	mov    %ebp,%esp$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	5d                   	pop    %ebp$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	c3                   	ret    $/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9 <check_va2pa>:$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	55                   	push   %ebp$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fac	obj/kern/kernel.asm	/^f0100fac:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	89 d1                	mov    %edx,%ecx$/;"	l
f0100fb1	obj/kern/kernel.asm	/^f0100fb1:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	8b 0c 88             	mov    (%eax,%ecx,4),%ecx$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	f6 c1 01             	test   $0x1,%cl$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	74 57                	je     f0101018 <check_va2pa+0x6f>$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	89 c8                	mov    %ecx,%eax$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	3b 05 88 8e 1d f0    	cmp    0xf01d8e88,%eax$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	72 20                	jb     f0100ff4 <check_va2pa+0x4b>$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	f0 $/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	c7 44 24 04 7f 03 00 	movl   $0x37f,0x4(%esp)$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	00 $/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	e8 4c f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	8b 84 91 00 00 00 f0 	mov    -0x10000000(%ecx,%edx,4),%eax$/;"	l
f0101004	obj/kern/kernel.asm	/^f0101004:	89 c2                	mov    %eax,%edx$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	83 e2 01             	and    $0x1,%edx$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	85 d2                	test   %edx,%edx$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	c9                   	leave  $/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	c3                   	ret    $/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a <check_page_free_list>:$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	55                   	push   %ebp$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	89 e5                	mov    %esp,%ebp$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	57                   	push   %edi$/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	56                   	push   %esi$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	53                   	push   %ebx$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	19 f6                	sbb    %esi,%esi$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	8b 1d 30 82 1d f0    	mov    0xf01d8230,%ebx$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	85 db                	test   %ebx,%ebx$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	75 1c                	jne    f0101057 <check_page_free_list+0x3d>$/;"	l
f010103b	obj/kern/kernel.asm	/^f010103b:	c7 44 24 08 94 7a 10 	movl   $0xf0107a94,0x8(%esp)$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	f0 $/;"	l
f0101043	obj/kern/kernel.asm	/^f0101043:	c7 44 24 04 b1 02 00 	movl   $0x2b1,0x4(%esp)$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	00 $/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	e8 e9 ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	85 c0                	test   %eax,%eax$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	74 50                	je     f01010ab <check_page_free_list+0x91>$/;"	l
f010105b	obj/kern/kernel.asm	/^f010105b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	89 d8                	mov    %ebx,%eax$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	2b 05 90 8e 1d f0    	sub    0xf01d8e90,%eax$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	39 c6                	cmp    %eax,%esi$/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	0f 96 c0             	setbe  %al$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	8b 54 85 d8          	mov    -0x28(%ebp,%eax,4),%edx$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	89 1a                	mov    %ebx,(%edx)$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	89 5c 85 d8          	mov    %ebx,-0x28(%ebp,%eax,4)$/;"	l
f0101087	obj/kern/kernel.asm	/^f0101087:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	85 db                	test   %ebx,%ebx$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	75 da                	jne    f0101067 <check_page_free_list+0x4d>$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101090	obj/kern/kernel.asm	/^f0101090:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	89 10                	mov    %edx,(%eax)$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	89 1d 30 82 1d f0    	mov    %ebx,0xf01d8230$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	85 db                	test   %ebx,%ebx$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	74 67                	je     f0101112 <check_page_free_list+0xf8>$/;"	l
f01010ab	obj/kern/kernel.asm	/^f01010ab:	89 d8                	mov    %ebx,%eax$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	2b 05 90 8e 1d f0    	sub    0xf01d8e90,%eax$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	89 c2                	mov    %eax,%edx$/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	39 d6                	cmp    %edx,%esi$/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	76 4a                	jbe    f010110c <check_page_free_list+0xf2>$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	89 c2                	mov    %eax,%edx$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	72 20                	jb     f01010ef <check_page_free_list+0xd5>$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01010d3	obj/kern/kernel.asm	/^f01010d3:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	f0 $/;"	l
f01010db	obj/kern/kernel.asm	/^f01010db:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	00 $/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	e8 51 ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	00 $/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	00 $/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	e8 a5 54 00 00       	call   f01065b1 <memset>$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	85 db                	test   %ebx,%ebx$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	75 99                	jne    f01010ab <check_page_free_list+0x91>$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	e8 24 fe ff ff       	call   f0100f40 <boot_alloc>$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	8b 15 30 82 1d f0    	mov    0xf01d8230,%edx$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	85 d2                	test   %edx,%edx$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	0f 84 2f 02 00 00    	je     f010135c <check_page_free_list+0x342>$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	8b 1d 90 8e 1d f0    	mov    0xf01d8e90,%ebx$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	39 da                	cmp    %ebx,%edx$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	72 51                	jb     f0101188 <check_page_free_list+0x16e>$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	a1 88 8e 1d f0       	mov    0xf01d8e88,%eax$/;"	l
f010113c	obj/kern/kernel.asm	/^f010113c:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	8d 04 c3             	lea    (%ebx,%eax,8),%eax$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	39 c2                	cmp    %eax,%edx$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	73 68                	jae    f01011b1 <check_page_free_list+0x197>$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	89 d0                	mov    %edx,%eax$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	29 d8                	sub    %ebx,%eax$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	a8 07                	test   $0x7,%al$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	0f 85 86 00 00 00    	jne    f01011de <check_page_free_list+0x1c4>$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	85 c0                	test   %eax,%eax$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	0f 84 a6 00 00 00    	je     f010120c <check_page_free_list+0x1f2>$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	0f 84 c6 00 00 00    	je     f0101237 <check_page_free_list+0x21d>$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	89 5d b4             	mov    %ebx,-0x4c(%ebp)$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	e9 d8 00 00 00       	jmp    f010125b <check_page_free_list+0x241>$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	73 24                	jae    f01011ac <check_page_free_list+0x192>$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	c7 44 24 0c ab 81 10 	movl   $0xf01081ab,0xc(%esp)$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	f0 $/;"	l
f0101190	obj/kern/kernel.asm	/^f0101190:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	f0 $/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	c7 44 24 04 cb 02 00 	movl   $0x2cb,0x4(%esp)$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	00 $/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	e8 94 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	72 24                	jb     f01011d5 <check_page_free_list+0x1bb>$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	c7 44 24 0c cc 81 10 	movl   $0xf01081cc,0xc(%esp)$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	f0 $/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	f0 $/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	c7 44 24 04 cc 02 00 	movl   $0x2cc,0x4(%esp)$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	00 $/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	e8 6b ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	89 d0                	mov    %edx,%eax$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	a8 07                	test   $0x7,%al$/;"	l
f01011dc	obj/kern/kernel.asm	/^f01011dc:	74 24                	je     f0101202 <check_page_free_list+0x1e8>$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	c7 44 24 0c b8 7a 10 	movl   $0xf0107ab8,0xc(%esp)$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	f0 $/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	f0 $/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	c7 44 24 04 cd 02 00 	movl   $0x2cd,0x4(%esp)$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	00 $/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01011fd	obj/kern/kernel.asm	/^f01011fd:	e8 3e ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	85 c0                	test   %eax,%eax$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	75 24                	jne    f0101230 <check_page_free_list+0x216>$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	c7 44 24 0c e0 81 10 	movl   $0xf01081e0,0xc(%esp)$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	f0 $/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	f0 $/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	c7 44 24 04 d0 02 00 	movl   $0x2d0,0x4(%esp)$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	00 $/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	e8 10 ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	75 24                	jne    f010125b <check_page_free_list+0x241>$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	c7 44 24 0c f1 81 10 	movl   $0xf01081f1,0xc(%esp)$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	f0 $/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	f0 $/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	c7 44 24 04 d1 02 00 	movl   $0x2d1,0x4(%esp)$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	00 $/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	e8 e5 ed ff ff       	call   f0100040 <_panic>$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	75 24                	jne    f0101286 <check_page_free_list+0x26c>$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	c7 44 24 0c ec 7a 10 	movl   $0xf0107aec,0xc(%esp)$/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	f0 $/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	f0 $/;"	l
f0101272	obj/kern/kernel.asm	/^f0101272:	c7 44 24 04 d2 02 00 	movl   $0x2d2,0x4(%esp)$/;"	l
f0101279	obj/kern/kernel.asm	/^f0101279:	00 $/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	e8 ba ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	75 24                	jne    f01012b1 <check_page_free_list+0x297>$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	c7 44 24 0c 0a 82 10 	movl   $0xf010820a,0xc(%esp)$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	f0 $/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	f0 $/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	c7 44 24 04 d3 02 00 	movl   $0x2d3,0x4(%esp)$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	00 $/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	e8 8f ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	89 c1                	mov    %eax,%ecx$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	76 59                	jbe    f0101313 <check_page_free_list+0x2f9>$/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	89 c3                	mov    %eax,%ebx$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	39 5d c8             	cmp    %ebx,-0x38(%ebp)$/;"	l
f01012c2	obj/kern/kernel.asm	/^f01012c2:	77 20                	ja     f01012e4 <check_page_free_list+0x2ca>$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	f0 $/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	00 $/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	e8 5c ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	39 5d c4             	cmp    %ebx,-0x3c(%ebp)$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	76 24                	jbe    f0101313 <check_page_free_list+0x2f9>$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	c7 44 24 0c 10 7b 10 	movl   $0xf0107b10,0xc(%esp)$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	f0 $/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	f0 $/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	c7 44 24 04 d4 02 00 	movl   $0x2d4,0x4(%esp)$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	00 $/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	e8 2d ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	75 24                	jne    f010133e <check_page_free_list+0x324>$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	c7 44 24 0c 24 82 10 	movl   $0xf0108224,0xc(%esp)$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	f0 $/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	f0 $/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	c7 44 24 04 d6 02 00 	movl   $0x2d6,0x4(%esp)$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	00 $/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	e8 02 ed ff ff       	call   f0100040 <_panic>$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	81 f9 ff ff 0f 00    	cmp    $0xfffff,%ecx$/;"	l
f0101344	obj/kern/kernel.asm	/^f0101344:	77 05                	ja     f010134b <check_page_free_list+0x331>$/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	83 c7 01             	add    $0x1,%edi$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	eb 03                	jmp    f010134e <check_page_free_list+0x334>$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	83 c6 01             	add    $0x1,%esi$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	8b 12                	mov    (%edx),%edx$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	85 d2                	test   %edx,%edx$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	0f 85 2b fe ff ff    	jne    f0101183 <check_page_free_list+0x169>$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	85 ff                	test   %edi,%edi$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	7f 24                	jg     f0101380 <check_page_free_list+0x366>$/;"	l
f010135c	obj/kern/kernel.asm	/^f010135c:	c7 44 24 0c 41 82 10 	movl   $0xf0108241,0xc(%esp)$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	f0 $/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	f0 $/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	c7 44 24 04 de 02 00 	movl   $0x2de,0x4(%esp)$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	00 $/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	e8 c0 ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	85 f6                	test   %esi,%esi$/;"	l
f0101382	obj/kern/kernel.asm	/^f0101382:	7f 24                	jg     f01013a8 <check_page_free_list+0x38e>$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	c7 44 24 0c 53 82 10 	movl   $0xf0108253,0xc(%esp)$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	f0 $/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	f0 $/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	c7 44 24 04 df 02 00 	movl   $0x2df,0x4(%esp)$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	00 $/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	e8 98 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	5b                   	pop    %ebx$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	5e                   	pop    %esi$/;"	l
f01013ad	obj/kern/kernel.asm	/^f01013ad:	5f                   	pop    %edi$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	5d                   	pop    %ebp$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	c3                   	ret    $/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0 <page_init>:$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	55                   	push   %ebp$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	56                   	push   %esi$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	53                   	push   %ebx$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	e8 7e fb ff ff       	call   f0100f40 <boot_alloc>$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	77 20                	ja     f01013e9 <page_init+0x39>$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	f0 $/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	c7 44 24 04 57 01 00 	movl   $0x157,0x4(%esp)$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	00 $/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	e8 57 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	05 ff 0f 00 10       	add    $0x10000fff,%eax$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01013f3	obj/kern/kernel.asm	/^f01013f3:	8d b0 ff 0f 00 00    	lea    0xfff(%eax),%esi$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	85 c0                	test   %eax,%eax$/;"	l
f01013fb	obj/kern/kernel.asm	/^f01013fb:	0f 49 f0             	cmovns %eax,%esi$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	c1 fe 0c             	sar    $0xc,%esi$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	c7 05 30 82 1d f0 00 	movl   $0x0,0xf01d8230$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	00 00 00 $/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	83 3d 88 8e 1d f0 00 	cmpl   $0x0,0xf01d8e88$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	75 48                	jne    f010145c <page_init+0xac>$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	eb 5e                	jmp    f0101474 <page_init+0xc4>$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	89 d1                	mov    %edx,%ecx$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	03 0d 90 8e 1d f0    	add    0xf01d8e90,%ecx$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	85 c0                	test   %eax,%eax$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	74 1a                	je     f0101449 <page_init+0x99>$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	74 15                	je     f0101449 <page_init+0x99>$/;"	l
f0101434	obj/kern/kernel.asm	/^f0101434:	3d 9f 00 00 00       	cmp    $0x9f,%eax$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	76 04                	jbe    f010143f <page_init+0x8f>$/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	39 c6                	cmp    %eax,%esi$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	77 0a                	ja     f0101449 <page_init+0x99>$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	89 d3                	mov    %edx,%ebx$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	03 1d 90 8e 1d f0    	add    0xf01d8e90,%ebx$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	83 c0 01             	add    $0x1,%eax$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	39 05 88 8e 1d f0    	cmp    %eax,0xf01d8e88$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	77 c2                	ja     f0101416 <page_init+0x66>$/;"	l
f0101454	obj/kern/kernel.asm	/^f0101454:	89 1d 30 82 1d f0    	mov    %ebx,0xf01d8230$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	eb 18                	jmp    f0101474 <page_init+0xc4>$/;"	l
f010145c	obj/kern/kernel.asm	/^f010145c:	a1 90 8e 1d f0       	mov    0xf01d8e90,%eax$/;"	l
f0101461	obj/kern/kernel.asm	/^f0101461:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	8b 1d 30 82 1d f0    	mov    0xf01d8230,%ebx$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	eb d5                	jmp    f0101449 <page_init+0x99>$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	5b                   	pop    %ebx$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	5e                   	pop    %esi$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	5d                   	pop    %ebp$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	c3                   	ret    $/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b <page_alloc>:$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	55                   	push   %ebp$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	89 e5                	mov    %esp,%ebp$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	a1 30 82 1d f0       	mov    0xf01d8230,%eax$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	85 c0                	test   %eax,%eax$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	74 6b                	je     f01014f5 <page_alloc+0x7a>$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	74 56                	je     f01014e6 <page_alloc+0x6b>$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	2b 05 90 8e 1d f0    	sub    0xf01d8e90,%eax$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	89 c2                	mov    %eax,%edx$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	72 20                	jb     f01014c9 <page_alloc+0x4e>$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	f0 $/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	00 $/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	e8 77 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014c9	obj/kern/kernel.asm	/^f01014c9:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	00 $/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	00 $/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	e8 cb 50 00 00       	call   f01065b1 <memset>$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	a1 30 82 1d f0       	mov    0xf01d8230,%eax$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	8b 10                	mov    (%eax),%edx$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	89 15 30 82 1d f0    	mov    %edx,0xf01d8230$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	eb 05                	jmp    f01014fa <page_alloc+0x7f>$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	c9                   	leave  $/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	c3                   	ret    $/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc <page_free>:$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	55                   	push   %ebp$/;"	l
f01014fd	obj/kern/kernel.asm	/^f01014fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01014ff	obj/kern/kernel.asm	/^f01014ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	8b 15 30 82 1d f0    	mov    0xf01d8230,%edx$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	89 10                	mov    %edx,(%eax)$/;"	l
f010150a	obj/kern/kernel.asm	/^f010150a:	a3 30 82 1d f0       	mov    %eax,0xf01d8230$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	5d                   	pop    %ebp$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	c3                   	ret    $/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511 <page_decref>:$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	55                   	push   %ebp$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	89 e5                	mov    %esp,%ebp$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	0f b7 50 04          	movzwl 0x4(%eax),%edx$/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	66 85 d2             	test   %dx,%dx$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	75 08                	jne    f0101532 <page_decref+0x21>$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	e8 ca ff ff ff       	call   f01014fc <page_free>$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	c9                   	leave  $/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	c3                   	ret    $/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534 <pgdir_walk>:$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	55                   	push   %ebp$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	89 e5                	mov    %esp,%ebp$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	89 f3                	mov    %esi,%ebx$/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	a8 01                	test   $0x1,%al$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	74 47                	je     f010159e <pgdir_walk+0x6a>$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	89 c2                	mov    %eax,%edx$/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	72 20                	jb     f0101589 <pgdir_walk+0x55>$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	f0 $/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	c7 44 24 04 b7 01 00 	movl   $0x1b7,0x4(%esp)$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	00 $/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	e8 b7 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	e9 39 01 00 00       	jmp    f01016d7 <pgdir_walk+0x1a3>$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	0f 84 2a 01 00 00    	je     f01016d7 <pgdir_walk+0x1a3>$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	e8 c2 fe ff ff       	call   f010147b <page_alloc>$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	89 c7                	mov    %eax,%edi$/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	85 c0                	test   %eax,%eax$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	0f 84 0f 01 00 00    	je     f01016d2 <pgdir_walk+0x19e>$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	2b 05 90 8e 1d f0    	sub    0xf01d8e90,%eax$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	89 c2                	mov    %eax,%edx$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	72 20                	jb     f01015fc <pgdir_walk+0xc8>$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	f0 $/;"	l
f01015e8	obj/kern/kernel.asm	/^f01015e8:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	00 $/;"	l
f01015f0	obj/kern/kernel.asm	/^f01015f0:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	e8 44 ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	00 $/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	00 $/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	e8 98 4f 00 00       	call   f01065b1 <memset>$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	66 83 47 04 01       	addw   $0x1,0x4(%edi)$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	2b 3d 90 8e 1d f0    	sub    0xf01d8e90,%edi$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	c1 ff 03             	sar    $0x3,%edi$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	89 f8                	mov    %edi,%eax$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	89 c2                	mov    %eax,%edx$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	72 20                	jb     f0101659 <pgdir_walk+0x125>$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0101644	obj/kern/kernel.asm	/^f0101644:	f0 $/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	00 $/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f0101654	obj/kern/kernel.asm	/^f0101654:	e8 e7 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	8d 90 00 00 00 f0    	lea    -0x10000000(%eax),%edx$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665:	77 20                	ja     f0101687 <pgdir_walk+0x153>$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	f0 $/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	c7 44 24 04 c6 01 00 	movl   $0x1c6,0x4(%esp)$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	00 $/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	e8 b9 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	83 c8 07             	or     $0x7,%eax$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	89 03                	mov    %eax,(%ebx)$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	89 c2                	mov    %eax,%edx$/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	72 20                	jb     f01016be <pgdir_walk+0x18a>$/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	f0 $/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	c7 44 24 04 c7 01 00 	movl   $0x1c7,0x4(%esp)$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	00 $/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	e8 82 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	89 f2                	mov    %esi,%edx$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	81 e2 fc 0f 00 00    	and    $0xffc,%edx$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	8d 84 10 00 00 00 f0 	lea    -0x10000000(%eax,%edx,1),%eax$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	eb 05                	jmp    f01016d7 <pgdir_walk+0x1a3>$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01016da	obj/kern/kernel.asm	/^f01016da:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	89 ec                	mov    %ebp,%esp$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	5d                   	pop    %ebp$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	c3                   	ret    $/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4 <boot_map_region>:$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	55                   	push   %ebp$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01016e7	obj/kern/kernel.asm	/^f01016e7:	57                   	push   %edi$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	56                   	push   %esi$/;"	l
f01016e9	obj/kern/kernel.asm	/^f01016e9:	53                   	push   %ebx$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01016ed	obj/kern/kernel.asm	/^f01016ed:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	89 d3                	mov    %edx,%ebx$/;"	l
f01016f2	obj/kern/kernel.asm	/^f01016f2:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	85 c9                	test   %ecx,%ecx$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	74 43                	je     f010173f <boot_map_region+0x5b>$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	00 $/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101716	obj/kern/kernel.asm	/^f0101716:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101719	obj/kern/kernel.asm	/^f0101719:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010171c	obj/kern/kernel.asm	/^f010171c:	e8 13 fe ff ff       	call   f0101534 <pgdir_walk>$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	09 fa                	or     %edi,%edx$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	89 10                	mov    %edx,(%eax)$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f010173a	obj/kern/kernel.asm	/^f010173a:	39 75 e4             	cmp    %esi,-0x1c(%ebp)$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	77 cb                	ja     f010170a <boot_map_region+0x26>$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101742	obj/kern/kernel.asm	/^f0101742:	5b                   	pop    %ebx$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	5e                   	pop    %esi$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	5f                   	pop    %edi$/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	5d                   	pop    %ebp$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	c3                   	ret    $/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747 <page_lookup>:$/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	55                   	push   %ebp$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	89 e5                	mov    %esp,%ebp$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	53                   	push   %ebx$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101758	obj/kern/kernel.asm	/^f0101758:	00 $/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	e8 c9 fd ff ff       	call   f0101534 <pgdir_walk>$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	85 db                	test   %ebx,%ebx$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	74 02                	je     f0101771 <page_lookup+0x2a>$/;"	l
f010176f	obj/kern/kernel.asm	/^f010176f:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	85 c0                	test   %eax,%eax$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	74 3e                	je     f01017b8 <page_lookup+0x71>$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	8b 10                	mov    (%eax),%edx$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	f6 c2 01             	test   $0x1,%dl$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	74 32                	je     f01017b3 <page_lookup+0x6c>$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	72 1c                	jb     f01017a8 <page_lookup+0x61>$/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	c7 44 24 08 58 7b 10 	movl   $0xf0107b58,0x8(%esp)$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	f0 $/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	00 $/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	e8 98 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	03 15 90 8e 1d f0    	add    0xf01d8e90,%edx$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	eb 05                	jmp    f01017b8 <page_lookup+0x71>$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	89 d0                	mov    %edx,%eax$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	83 c4 14             	add    $0x14,%esp$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	5b                   	pop    %ebx$/;"	l
f01017be	obj/kern/kernel.asm	/^f01017be:	5d                   	pop    %ebp$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	c3                   	ret    $/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0 <tlb_invalidate>:$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	55                   	push   %ebp$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	e8 79 54 00 00       	call   f0106c44 <cpunum>$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	83 b8 28 90 1d f0 00 	cmpl   $0x0,-0xfe26fd8(%eax)$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	74 16                	je     f01017ed <tlb_invalidate+0x2d>$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	e8 68 54 00 00       	call   f0106c44 <cpunum>$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	75 06                	jne    f01017f3 <tlb_invalidate+0x33>$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	0f 01 38             	invlpg (%eax)$/;"	l
f01017f3	obj/kern/kernel.asm	/^f01017f3:	c9                   	leave  $/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	c3                   	ret    $/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5 <page_remove>:$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	55                   	push   %ebp$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	e8 26 ff ff ff       	call   f0101747 <page_lookup>$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	85 c0                	test   %eax,%eax$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	74 1d                	je     f0101842 <page_remove+0x4d>$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	e8 e4 fc ff ff       	call   f0101511 <page_decref>$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	e8 7e ff ff ff       	call   f01017c0 <tlb_invalidate>$/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	89 ec                	mov    %ebp,%esp$/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	5d                   	pop    %ebp$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	c3                   	ret    $/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c <page_insert>:$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	55                   	push   %ebp$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	89 e5                	mov    %esp,%ebp$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010185e	obj/kern/kernel.asm	/^f010185e:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	00 $/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	e8 bc fc ff ff       	call   f0101534 <pgdir_walk>$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	89 c3                	mov    %eax,%ebx$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	85 db                	test   %ebx,%ebx$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	74 64                	je     f01018e7 <page_insert+0x9b>$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	a8 01                	test   $0x1,%al$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	74 3c                	je     f01018c5 <page_insert+0x79>$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010188e	obj/kern/kernel.asm	/^f010188e:	89 f2                	mov    %esi,%edx$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f0101896	obj/kern/kernel.asm	/^f0101896:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	39 d0                	cmp    %edx,%eax$/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	75 16                	jne    f01018b6 <page_insert+0x6a>$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	e8 11 ff ff ff       	call   f01017c0 <tlb_invalidate>$/;"	l
f01018af	obj/kern/kernel.asm	/^f01018af:	66 83 6e 04 01       	subw   $0x1,0x4(%esi)$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	eb 0f                	jmp    f01018c5 <page_insert+0x79>$/;"	l
f01018b6	obj/kern/kernel.asm	/^f01018b6:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	e8 30 ff ff ff       	call   f01017f5 <page_remove>$/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	83 c8 01             	or     $0x1,%eax$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	89 f2                	mov    %esi,%edx$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	09 d0                	or     %edx,%eax$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	89 03                	mov    %eax,(%ebx)$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	89 ec                	mov    %ebp,%esp$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	5d                   	pop    %ebp$/;"	l
f01018f3	obj/kern/kernel.asm	/^f01018f3:	c3                   	ret    $/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4 <mem_init>:$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	55                   	push   %ebp$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	57                   	push   %edi$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	56                   	push   %esi$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	53                   	push   %ebx$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	e8 70 f6 ff ff       	call   f0100f77 <nvram_read>$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	85 c0                	test   %eax,%eax$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101918	obj/kern/kernel.asm	/^f0101918:	a3 38 82 1d f0       	mov    %eax,0xf01d8238$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	e8 50 f6 ff ff       	call   f0100f77 <nvram_read>$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	85 c0                	test   %eax,%eax$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101935	obj/kern/kernel.asm	/^f0101935:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	85 c0                	test   %eax,%eax$/;"	l
f010193a	obj/kern/kernel.asm	/^f010193a:	74 0e                	je     f010194a <mem_init+0x56>$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101942	obj/kern/kernel.asm	/^f0101942:	89 15 88 8e 1d f0    	mov    %edx,0xf01d8e88$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	eb 0c                	jmp    f0101956 <mem_init+0x62>$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	8b 15 38 82 1d f0    	mov    0xf01d8238,%edx$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	89 15 88 8e 1d f0    	mov    %edx,0xf01d8e88$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	a1 38 82 1d f0       	mov    0xf01d8238,%eax$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	a1 88 8e 1d f0       	mov    0xf01d8e88,%eax$/;"	l
f0101974	obj/kern/kernel.asm	/^f0101974:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010197e	obj/kern/kernel.asm	/^f010197e:	c7 04 24 78 7b 10 f0 	movl   $0xf0107b78,(%esp)$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	e8 10 27 00 00       	call   f010409a <cprintf>$/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	e8 ac f5 ff ff       	call   f0100f40 <boot_alloc>$/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	a3 8c 8e 1d f0       	mov    %eax,0xf01d8e8c$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01019a0	obj/kern/kernel.asm	/^f01019a0:	00 $/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8:	00 $/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	e8 00 4c 00 00       	call   f01065b1 <memset>$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	77 20                	ja     f01019dd <mem_init+0xe9>$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f01019c8	obj/kern/kernel.asm	/^f01019c8:	f0 $/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	c7 44 24 04 8f 00 00 	movl   $0x8f,0x4(%esp)$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	00 $/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01019d8	obj/kern/kernel.asm	/^f01019d8:	e8 63 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01019e3	obj/kern/kernel.asm	/^f01019e3:	83 ca 05             	or     $0x5,%edx$/;"	l
f01019e6	obj/kern/kernel.asm	/^f01019e6:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	a1 88 8e 1d f0       	mov    0xf01d8e88,%eax$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	e8 47 f5 ff ff       	call   f0100f40 <boot_alloc>$/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	a3 90 8e 1d f0       	mov    %eax,0xf01d8e90$/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	b8 00 10 02 00       	mov    $0x21000,%eax$/;"	l
f0101a03	obj/kern/kernel.asm	/^f0101a03:	e8 38 f5 ff ff       	call   f0100f40 <boot_alloc>$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	a3 3c 82 1d f0       	mov    %eax,0xf01d823c$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	e8 9e f9 ff ff       	call   f01013b0 <page_init>$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	e8 fe f5 ff ff       	call   f010101a <check_page_free_list>$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	83 3d 90 8e 1d f0 00 	cmpl   $0x0,0xf01d8e90$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	75 1c                	jne    f0101a41 <mem_init+0x14d>$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	c7 44 24 08 64 82 10 	movl   $0xf0108264,0x8(%esp)$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	f0 $/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	c7 44 24 04 f0 02 00 	movl   $0x2f0,0x4(%esp)$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	00 $/;"	l
f0101a35	obj/kern/kernel.asm	/^f0101a35:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	e8 ff e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	a1 30 82 1d f0       	mov    0xf01d8230,%eax$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	85 c0                	test   %eax,%eax$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	74 09                	je     f0101a58 <mem_init+0x164>$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	8b 00                	mov    (%eax),%eax$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	85 c0                	test   %eax,%eax$/;"	l
f0101a56	obj/kern/kernel.asm	/^f0101a56:	75 f7                	jne    f0101a4f <mem_init+0x15b>$/;"	l
f0101a58	obj/kern/kernel.asm	/^f0101a58:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	e8 17 fa ff ff       	call   f010147b <page_alloc>$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	89 c6                	mov    %eax,%esi$/;"	l
f0101a66	obj/kern/kernel.asm	/^f0101a66:	85 c0                	test   %eax,%eax$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	75 24                	jne    f0101a8e <mem_init+0x19a>$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	c7 44 24 0c 7f 82 10 	movl   $0xf010827f,0xc(%esp)$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	f0 $/;"	l
f0101a72	obj/kern/kernel.asm	/^f0101a72:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	f0 $/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	c7 44 24 04 f8 02 00 	movl   $0x2f8,0x4(%esp)$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	00 $/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	e8 b2 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a95	obj/kern/kernel.asm	/^f0101a95:	e8 e1 f9 ff ff       	call   f010147b <page_alloc>$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	89 c7                	mov    %eax,%edi$/;"	l
f0101a9c	obj/kern/kernel.asm	/^f0101a9c:	85 c0                	test   %eax,%eax$/;"	l
f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	75 24                	jne    f0101ac4 <mem_init+0x1d0>$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	c7 44 24 0c 95 82 10 	movl   $0xf0108295,0xc(%esp)$/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	f0 $/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	f0 $/;"	l
f0101ab0	obj/kern/kernel.asm	/^f0101ab0:	c7 44 24 04 f9 02 00 	movl   $0x2f9,0x4(%esp)$/;"	l
f0101ab7	obj/kern/kernel.asm	/^f0101ab7:	00 $/;"	l
f0101ab8	obj/kern/kernel.asm	/^f0101ab8:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101abf	obj/kern/kernel.asm	/^f0101abf:	e8 7c e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ac4	obj/kern/kernel.asm	/^f0101ac4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	e8 ab f9 ff ff       	call   f010147b <page_alloc>$/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	85 c0                	test   %eax,%eax$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	75 24                	jne    f0101afb <mem_init+0x207>$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	c7 44 24 0c ab 82 10 	movl   $0xf01082ab,0xc(%esp)$/;"	l
f0101ade	obj/kern/kernel.asm	/^f0101ade:	f0 $/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101ae6	obj/kern/kernel.asm	/^f0101ae6:	f0 $/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	c7 44 24 04 fa 02 00 	movl   $0x2fa,0x4(%esp)$/;"	l
f0101aee	obj/kern/kernel.asm	/^f0101aee:	00 $/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101af6	obj/kern/kernel.asm	/^f0101af6:	e8 45 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	39 fe                	cmp    %edi,%esi$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	75 24                	jne    f0101b23 <mem_init+0x22f>$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	c7 44 24 0c c1 82 10 	movl   $0xf01082c1,0xc(%esp)$/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	f0 $/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	f0 $/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	c7 44 24 04 fd 02 00 	movl   $0x2fd,0x4(%esp)$/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	00 $/;"	l
f0101b17	obj/kern/kernel.asm	/^f0101b17:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101b1e	obj/kern/kernel.asm	/^f0101b1e:	e8 1d e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0101b26	obj/kern/kernel.asm	/^f0101b26:	74 05                	je     f0101b2d <mem_init+0x239>$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	75 24                	jne    f0101b51 <mem_init+0x25d>$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	c7 44 24 0c b4 7b 10 	movl   $0xf0107bb4,0xc(%esp)$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	f0 $/;"	l
f0101b35	obj/kern/kernel.asm	/^f0101b35:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	f0 $/;"	l
f0101b3d	obj/kern/kernel.asm	/^f0101b3d:	c7 44 24 04 fe 02 00 	movl   $0x2fe,0x4(%esp)$/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	00 $/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	e8 ef e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	8b 15 90 8e 1d f0    	mov    0xf01d8e90,%edx$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	a1 88 8e 1d f0       	mov    0xf01d8e88,%eax$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	89 f1                	mov    %esi,%ecx$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	29 d1                	sub    %edx,%ecx$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	72 24                	jb     f0101b91 <mem_init+0x29d>$/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	c7 44 24 0c d3 82 10 	movl   $0xf01082d3,0xc(%esp)$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	f0 $/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	f0 $/;"	l
f0101b7d	obj/kern/kernel.asm	/^f0101b7d:	c7 44 24 04 ff 02 00 	movl   $0x2ff,0x4(%esp)$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	00 $/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	e8 af e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	89 f9                	mov    %edi,%ecx$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	29 d1                	sub    %edx,%ecx$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	77 24                	ja     f0101bc3 <mem_init+0x2cf>$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	c7 44 24 0c f0 82 10 	movl   $0xf01082f0,0xc(%esp)$/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	f0 $/;"	l
f0101ba7	obj/kern/kernel.asm	/^f0101ba7:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	f0 $/;"	l
f0101baf	obj/kern/kernel.asm	/^f0101baf:	c7 44 24 04 00 03 00 	movl   $0x300,0x4(%esp)$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	00 $/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	e8 7d e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bc3	obj/kern/kernel.asm	/^f0101bc3:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	29 d1                	sub    %edx,%ecx$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	89 ca                	mov    %ecx,%edx$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101bcd	obj/kern/kernel.asm	/^f0101bcd:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	39 d0                	cmp    %edx,%eax$/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	77 24                	ja     f0101bf8 <mem_init+0x304>$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	c7 44 24 0c 0d 83 10 	movl   $0xf010830d,0xc(%esp)$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	f0 $/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	f0 $/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	c7 44 24 04 01 03 00 	movl   $0x301,0x4(%esp)$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	00 $/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	e8 48 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	a1 30 82 1d f0       	mov    0xf01d8230,%eax$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00:	c7 05 30 82 1d f0 00 	movl   $0x0,0xf01d8230$/;"	l
f0101c07	obj/kern/kernel.asm	/^f0101c07:	00 00 00 $/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	e8 65 f8 ff ff       	call   f010147b <page_alloc>$/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16:	85 c0                	test   %eax,%eax$/;"	l
f0101c18	obj/kern/kernel.asm	/^f0101c18:	74 24                	je     f0101c3e <mem_init+0x34a>$/;"	l
f0101c1a	obj/kern/kernel.asm	/^f0101c1a:	c7 44 24 0c 2a 83 10 	movl   $0xf010832a,0xc(%esp)$/;"	l
f0101c21	obj/kern/kernel.asm	/^f0101c21:	f0 $/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	f0 $/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	c7 44 24 04 08 03 00 	movl   $0x308,0x4(%esp)$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	00 $/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	e8 02 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c3e	obj/kern/kernel.asm	/^f0101c3e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	e8 b6 f8 ff ff       	call   f01014fc <page_free>$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	e8 ae f8 ff ff       	call   f01014fc <page_free>$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	e8 a3 f8 ff ff       	call   f01014fc <page_free>$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	e8 16 f8 ff ff       	call   f010147b <page_alloc>$/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	89 c6                	mov    %eax,%esi$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	85 c0                	test   %eax,%eax$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	75 24                	jne    f0101c8f <mem_init+0x39b>$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	c7 44 24 0c 7f 82 10 	movl   $0xf010827f,0xc(%esp)$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	f0 $/;"	l
f0101c73	obj/kern/kernel.asm	/^f0101c73:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101c7a	obj/kern/kernel.asm	/^f0101c7a:	f0 $/;"	l
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	c7 44 24 04 0f 03 00 	movl   $0x30f,0x4(%esp)$/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	00 $/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101c8a	obj/kern/kernel.asm	/^f0101c8a:	e8 b1 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c8f	obj/kern/kernel.asm	/^f0101c8f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c96	obj/kern/kernel.asm	/^f0101c96:	e8 e0 f7 ff ff       	call   f010147b <page_alloc>$/;"	l
f0101c9b	obj/kern/kernel.asm	/^f0101c9b:	89 c7                	mov    %eax,%edi$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	85 c0                	test   %eax,%eax$/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	75 24                	jne    f0101cc5 <mem_init+0x3d1>$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	c7 44 24 0c 95 82 10 	movl   $0xf0108295,0xc(%esp)$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	f0 $/;"	l
f0101ca9	obj/kern/kernel.asm	/^f0101ca9:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	f0 $/;"	l
f0101cb1	obj/kern/kernel.asm	/^f0101cb1:	c7 44 24 04 10 03 00 	movl   $0x310,0x4(%esp)$/;"	l
f0101cb8	obj/kern/kernel.asm	/^f0101cb8:	00 $/;"	l
f0101cb9	obj/kern/kernel.asm	/^f0101cb9:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101cc0	obj/kern/kernel.asm	/^f0101cc0:	e8 7b e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101ccc	obj/kern/kernel.asm	/^f0101ccc:	e8 aa f7 ff ff       	call   f010147b <page_alloc>$/;"	l
f0101cd1	obj/kern/kernel.asm	/^f0101cd1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101cd4	obj/kern/kernel.asm	/^f0101cd4:	85 c0                	test   %eax,%eax$/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	75 24                	jne    f0101cfc <mem_init+0x408>$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	c7 44 24 0c ab 82 10 	movl   $0xf01082ab,0xc(%esp)$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	f0 $/;"	l
f0101ce0	obj/kern/kernel.asm	/^f0101ce0:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101ce7	obj/kern/kernel.asm	/^f0101ce7:	f0 $/;"	l
f0101ce8	obj/kern/kernel.asm	/^f0101ce8:	c7 44 24 04 11 03 00 	movl   $0x311,0x4(%esp)$/;"	l
f0101cef	obj/kern/kernel.asm	/^f0101cef:	00 $/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101cf7	obj/kern/kernel.asm	/^f0101cf7:	e8 44 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cfc	obj/kern/kernel.asm	/^f0101cfc:	39 fe                	cmp    %edi,%esi$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	75 24                	jne    f0101d24 <mem_init+0x430>$/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	c7 44 24 0c c1 82 10 	movl   $0xf01082c1,0xc(%esp)$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	f0 $/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	f0 $/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	c7 44 24 04 13 03 00 	movl   $0x313,0x4(%esp)$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	00 $/;"	l
f0101d18	obj/kern/kernel.asm	/^f0101d18:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	e8 1c e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	74 05                	je     f0101d2e <mem_init+0x43a>$/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	75 24                	jne    f0101d52 <mem_init+0x45e>$/;"	l
f0101d2e	obj/kern/kernel.asm	/^f0101d2e:	c7 44 24 0c b4 7b 10 	movl   $0xf0107bb4,0xc(%esp)$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	f0 $/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	f0 $/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	c7 44 24 04 14 03 00 	movl   $0x314,0x4(%esp)$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	00 $/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	e8 ee e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	e8 1d f7 ff ff       	call   f010147b <page_alloc>$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	85 c0                	test   %eax,%eax$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	74 24                	je     f0101d86 <mem_init+0x492>$/;"	l
f0101d62	obj/kern/kernel.asm	/^f0101d62:	c7 44 24 0c 2a 83 10 	movl   $0xf010832a,0xc(%esp)$/;"	l
f0101d69	obj/kern/kernel.asm	/^f0101d69:	f0 $/;"	l
f0101d6a	obj/kern/kernel.asm	/^f0101d6a:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	f0 $/;"	l
f0101d72	obj/kern/kernel.asm	/^f0101d72:	c7 44 24 04 15 03 00 	movl   $0x315,0x4(%esp)$/;"	l
f0101d79	obj/kern/kernel.asm	/^f0101d79:	00 $/;"	l
f0101d7a	obj/kern/kernel.asm	/^f0101d7a:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101d81	obj/kern/kernel.asm	/^f0101d81:	e8 ba e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d86	obj/kern/kernel.asm	/^f0101d86:	89 f0                	mov    %esi,%eax$/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	2b 05 90 8e 1d f0    	sub    0xf01d8e90,%eax$/;"	l
f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101d91	obj/kern/kernel.asm	/^f0101d91:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	89 c2                	mov    %eax,%edx$/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f0101d9f	obj/kern/kernel.asm	/^f0101d9f:	72 20                	jb     f0101dc1 <mem_init+0x4cd>$/;"	l
f0101da1	obj/kern/kernel.asm	/^f0101da1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	f0 $/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	00 $/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f0101dbc	obj/kern/kernel.asm	/^f0101dbc:	e8 7f e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dc1	obj/kern/kernel.asm	/^f0101dc1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101dc8	obj/kern/kernel.asm	/^f0101dc8:	00 $/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	00 $/;"	l
f0101dd1	obj/kern/kernel.asm	/^f0101dd1:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	e8 d3 47 00 00       	call   f01065b1 <memset>$/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101de1	obj/kern/kernel.asm	/^f0101de1:	e8 16 f7 ff ff       	call   f01014fc <page_free>$/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	e8 89 f6 ff ff       	call   f010147b <page_alloc>$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	85 c0                	test   %eax,%eax$/;"	l
f0101df4	obj/kern/kernel.asm	/^f0101df4:	75 24                	jne    f0101e1a <mem_init+0x526>$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	c7 44 24 0c 39 83 10 	movl   $0xf0108339,0xc(%esp)$/;"	l
f0101dfd	obj/kern/kernel.asm	/^f0101dfd:	f0 $/;"	l
f0101dfe	obj/kern/kernel.asm	/^f0101dfe:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	f0 $/;"	l
f0101e06	obj/kern/kernel.asm	/^f0101e06:	c7 44 24 04 1a 03 00 	movl   $0x31a,0x4(%esp)$/;"	l
f0101e0d	obj/kern/kernel.asm	/^f0101e0d:	00 $/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	e8 26 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	39 c6                	cmp    %eax,%esi$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	74 24                	je     f0101e42 <mem_init+0x54e>$/;"	l
f0101e1e	obj/kern/kernel.asm	/^f0101e1e:	c7 44 24 0c 57 83 10 	movl   $0xf0108357,0xc(%esp)$/;"	l
f0101e25	obj/kern/kernel.asm	/^f0101e25:	f0 $/;"	l
f0101e26	obj/kern/kernel.asm	/^f0101e26:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	f0 $/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	c7 44 24 04 1b 03 00 	movl   $0x31b,0x4(%esp)$/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	00 $/;"	l
f0101e36	obj/kern/kernel.asm	/^f0101e36:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101e3d	obj/kern/kernel.asm	/^f0101e3d:	e8 fe e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e42	obj/kern/kernel.asm	/^f0101e42:	89 f2                	mov    %esi,%edx$/;"	l
f0101e44	obj/kern/kernel.asm	/^f0101e44:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f0101e4a	obj/kern/kernel.asm	/^f0101e4a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101e4d	obj/kern/kernel.asm	/^f0101e4d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101e50	obj/kern/kernel.asm	/^f0101e50:	89 d0                	mov    %edx,%eax$/;"	l
f0101e52	obj/kern/kernel.asm	/^f0101e52:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101e55	obj/kern/kernel.asm	/^f0101e55:	3b 05 88 8e 1d f0    	cmp    0xf01d8e88,%eax$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	72 20                	jb     f0101e7d <mem_init+0x589>$/;"	l
f0101e5d	obj/kern/kernel.asm	/^f0101e5d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101e61	obj/kern/kernel.asm	/^f0101e61:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	f0 $/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	00 $/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	e8 c3 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	80 ba 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%edx)$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	75 11                	jne    f0101e97 <mem_init+0x5a3>$/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	8d 82 01 00 00 f0    	lea    -0xfffffff(%edx),%eax$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0101e92	obj/kern/kernel.asm	/^f0101e92:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	74 24                	je     f0101ebb <mem_init+0x5c7>$/;"	l
f0101e97	obj/kern/kernel.asm	/^f0101e97:	c7 44 24 0c 67 83 10 	movl   $0xf0108367,0xc(%esp)$/;"	l
f0101e9e	obj/kern/kernel.asm	/^f0101e9e:	f0 $/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101ea6	obj/kern/kernel.asm	/^f0101ea6:	f0 $/;"	l
f0101ea7	obj/kern/kernel.asm	/^f0101ea7:	c7 44 24 04 1e 03 00 	movl   $0x31e,0x4(%esp)$/;"	l
f0101eae	obj/kern/kernel.asm	/^f0101eae:	00 $/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101eb6	obj/kern/kernel.asm	/^f0101eb6:	e8 85 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101ebe	obj/kern/kernel.asm	/^f0101ebe:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	75 d0                	jne    f0101e92 <mem_init+0x59e>$/;"	l
f0101ec2	obj/kern/kernel.asm	/^f0101ec2:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0101ec5	obj/kern/kernel.asm	/^f0101ec5:	89 0d 30 82 1d f0    	mov    %ecx,0xf01d8230$/;"	l
f0101ecb	obj/kern/kernel.asm	/^f0101ecb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101ece	obj/kern/kernel.asm	/^f0101ece:	e8 29 f6 ff ff       	call   f01014fc <page_free>$/;"	l
f0101ed3	obj/kern/kernel.asm	/^f0101ed3:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	e8 21 f6 ff ff       	call   f01014fc <page_free>$/;"	l
f0101edb	obj/kern/kernel.asm	/^f0101edb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ee1	obj/kern/kernel.asm	/^f0101ee1:	e8 16 f6 ff ff       	call   f01014fc <page_free>$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	a1 30 82 1d f0       	mov    0xf01d8230,%eax$/;"	l
f0101eeb	obj/kern/kernel.asm	/^f0101eeb:	85 c0                	test   %eax,%eax$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	74 09                	je     f0101ef8 <mem_init+0x604>$/;"	l
f0101eef	obj/kern/kernel.asm	/^f0101eef:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101ef2	obj/kern/kernel.asm	/^f0101ef2:	8b 00                	mov    (%eax),%eax$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	85 c0                	test   %eax,%eax$/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	75 f7                	jne    f0101eef <mem_init+0x5fb>$/;"	l
f0101ef8	obj/kern/kernel.asm	/^f0101ef8:	85 db                	test   %ebx,%ebx$/;"	l
f0101efa	obj/kern/kernel.asm	/^f0101efa:	74 24                	je     f0101f20 <mem_init+0x62c>$/;"	l
f0101efc	obj/kern/kernel.asm	/^f0101efc:	c7 44 24 0c 71 83 10 	movl   $0xf0108371,0xc(%esp)$/;"	l
f0101f03	obj/kern/kernel.asm	/^f0101f03:	f0 $/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101f0b	obj/kern/kernel.asm	/^f0101f0b:	f0 $/;"	l
f0101f0c	obj/kern/kernel.asm	/^f0101f0c:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f0101f13	obj/kern/kernel.asm	/^f0101f13:	00 $/;"	l
f0101f14	obj/kern/kernel.asm	/^f0101f14:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101f1b	obj/kern/kernel.asm	/^f0101f1b:	e8 20 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f20	obj/kern/kernel.asm	/^f0101f20:	c7 04 24 d4 7b 10 f0 	movl   $0xf0107bd4,(%esp)$/;"	l
f0101f27	obj/kern/kernel.asm	/^f0101f27:	e8 6e 21 00 00       	call   f010409a <cprintf>$/;"	l
f0101f2c	obj/kern/kernel.asm	/^f0101f2c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f33	obj/kern/kernel.asm	/^f0101f33:	e8 43 f5 ff ff       	call   f010147b <page_alloc>$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	89 c3                	mov    %eax,%ebx$/;"	l
f0101f3a	obj/kern/kernel.asm	/^f0101f3a:	85 c0                	test   %eax,%eax$/;"	l
f0101f3c	obj/kern/kernel.asm	/^f0101f3c:	75 24                	jne    f0101f62 <mem_init+0x66e>$/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	c7 44 24 0c 7f 82 10 	movl   $0xf010827f,0xc(%esp)$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	f0 $/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	f0 $/;"	l
f0101f4e	obj/kern/kernel.asm	/^f0101f4e:	c7 44 24 04 93 03 00 	movl   $0x393,0x4(%esp)$/;"	l
f0101f55	obj/kern/kernel.asm	/^f0101f55:	00 $/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	e8 de e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f69	obj/kern/kernel.asm	/^f0101f69:	e8 0d f5 ff ff       	call   f010147b <page_alloc>$/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	89 c7                	mov    %eax,%edi$/;"	l
f0101f70	obj/kern/kernel.asm	/^f0101f70:	85 c0                	test   %eax,%eax$/;"	l
f0101f72	obj/kern/kernel.asm	/^f0101f72:	75 24                	jne    f0101f98 <mem_init+0x6a4>$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	c7 44 24 0c 95 82 10 	movl   $0xf0108295,0xc(%esp)$/;"	l
f0101f7b	obj/kern/kernel.asm	/^f0101f7b:	f0 $/;"	l
f0101f7c	obj/kern/kernel.asm	/^f0101f7c:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101f83	obj/kern/kernel.asm	/^f0101f83:	f0 $/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	c7 44 24 04 94 03 00 	movl   $0x394,0x4(%esp)$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	00 $/;"	l
f0101f8c	obj/kern/kernel.asm	/^f0101f8c:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101f93	obj/kern/kernel.asm	/^f0101f93:	e8 a8 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f9f	obj/kern/kernel.asm	/^f0101f9f:	e8 d7 f4 ff ff       	call   f010147b <page_alloc>$/;"	l
f0101fa4	obj/kern/kernel.asm	/^f0101fa4:	89 c6                	mov    %eax,%esi$/;"	l
f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	85 c0                	test   %eax,%eax$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	75 24                	jne    f0101fce <mem_init+0x6da>$/;"	l
f0101faa	obj/kern/kernel.asm	/^f0101faa:	c7 44 24 0c ab 82 10 	movl   $0xf01082ab,0xc(%esp)$/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	f0 $/;"	l
f0101fb2	obj/kern/kernel.asm	/^f0101fb2:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101fb9	obj/kern/kernel.asm	/^f0101fb9:	f0 $/;"	l
f0101fba	obj/kern/kernel.asm	/^f0101fba:	c7 44 24 04 95 03 00 	movl   $0x395,0x4(%esp)$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	00 $/;"	l
f0101fc2	obj/kern/kernel.asm	/^f0101fc2:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101fc9	obj/kern/kernel.asm	/^f0101fc9:	e8 72 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fce	obj/kern/kernel.asm	/^f0101fce:	39 fb                	cmp    %edi,%ebx$/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	75 24                	jne    f0101ff6 <mem_init+0x702>$/;"	l
f0101fd2	obj/kern/kernel.asm	/^f0101fd2:	c7 44 24 0c c1 82 10 	movl   $0xf01082c1,0xc(%esp)$/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	f0 $/;"	l
f0101fda	obj/kern/kernel.asm	/^f0101fda:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	f0 $/;"	l
f0101fe2	obj/kern/kernel.asm	/^f0101fe2:	c7 44 24 04 98 03 00 	movl   $0x398,0x4(%esp)$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	00 $/;"	l
f0101fea	obj/kern/kernel.asm	/^f0101fea:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1:	e8 4a e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ff6	obj/kern/kernel.asm	/^f0101ff6:	39 c7                	cmp    %eax,%edi$/;"	l
f0101ff8	obj/kern/kernel.asm	/^f0101ff8:	74 04                	je     f0101ffe <mem_init+0x70a>$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	75 24                	jne    f0102022 <mem_init+0x72e>$/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	c7 44 24 0c b4 7b 10 	movl   $0xf0107bb4,0xc(%esp)$/;"	l
f0102005	obj/kern/kernel.asm	/^f0102005:	f0 $/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010200d	obj/kern/kernel.asm	/^f010200d:	f0 $/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	c7 44 24 04 99 03 00 	movl   $0x399,0x4(%esp)$/;"	l
f0102015	obj/kern/kernel.asm	/^f0102015:	00 $/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010201d	obj/kern/kernel.asm	/^f010201d:	e8 1e e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	8b 15 30 82 1d f0    	mov    0xf01d8230,%edx$/;"	l
f0102028	obj/kern/kernel.asm	/^f0102028:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	c7 05 30 82 1d f0 00 	movl   $0x0,0xf01d8230$/;"	l
f0102032	obj/kern/kernel.asm	/^f0102032:	00 00 00 $/;"	l
f0102035	obj/kern/kernel.asm	/^f0102035:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010203c	obj/kern/kernel.asm	/^f010203c:	e8 3a f4 ff ff       	call   f010147b <page_alloc>$/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	85 c0                	test   %eax,%eax$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	74 24                	je     f0102069 <mem_init+0x775>$/;"	l
f0102045	obj/kern/kernel.asm	/^f0102045:	c7 44 24 0c 2a 83 10 	movl   $0xf010832a,0xc(%esp)$/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	f0 $/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	f0 $/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	c7 44 24 04 a0 03 00 	movl   $0x3a0,0x4(%esp)$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	00 $/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	e8 d7 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102070	obj/kern/kernel.asm	/^f0102070:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102077	obj/kern/kernel.asm	/^f0102077:	00 $/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f010207d	obj/kern/kernel.asm	/^f010207d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	e8 c2 f6 ff ff       	call   f0101747 <page_lookup>$/;"	l
f0102085	obj/kern/kernel.asm	/^f0102085:	85 c0                	test   %eax,%eax$/;"	l
f0102087	obj/kern/kernel.asm	/^f0102087:	74 24                	je     f01020ad <mem_init+0x7b9>$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	c7 44 24 0c f4 7b 10 	movl   $0xf0107bf4,0xc(%esp)$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	f0 $/;"	l
f0102091	obj/kern/kernel.asm	/^f0102091:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102098	obj/kern/kernel.asm	/^f0102098:	f0 $/;"	l
f0102099	obj/kern/kernel.asm	/^f0102099:	c7 44 24 04 a3 03 00 	movl   $0x3a3,0x4(%esp)$/;"	l
f01020a0	obj/kern/kernel.asm	/^f01020a0:	00 $/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01020a8	obj/kern/kernel.asm	/^f01020a8:	e8 93 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01020b4	obj/kern/kernel.asm	/^f01020b4:	00 $/;"	l
f01020b5	obj/kern/kernel.asm	/^f01020b5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01020bc	obj/kern/kernel.asm	/^f01020bc:	00 $/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01020c6	obj/kern/kernel.asm	/^f01020c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	e8 7e f7 ff ff       	call   f010184c <page_insert>$/;"	l
f01020ce	obj/kern/kernel.asm	/^f01020ce:	85 c0                	test   %eax,%eax$/;"	l
f01020d0	obj/kern/kernel.asm	/^f01020d0:	78 24                	js     f01020f6 <mem_init+0x802>$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	c7 44 24 0c 2c 7c 10 	movl   $0xf0107c2c,0xc(%esp)$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	f0 $/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01020e1	obj/kern/kernel.asm	/^f01020e1:	f0 $/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	c7 44 24 04 a6 03 00 	movl   $0x3a6,0x4(%esp)$/;"	l
f01020e9	obj/kern/kernel.asm	/^f01020e9:	00 $/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	e8 4a df ff ff       	call   f0100040 <_panic>$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01020f9	obj/kern/kernel.asm	/^f01020f9:	e8 fe f3 ff ff       	call   f01014fc <page_free>$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102105	obj/kern/kernel.asm	/^f0102105:	00 $/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010210d	obj/kern/kernel.asm	/^f010210d:	00 $/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010211a	obj/kern/kernel.asm	/^f010211a:	e8 2d f7 ff ff       	call   f010184c <page_insert>$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	85 c0                	test   %eax,%eax$/;"	l
f0102121	obj/kern/kernel.asm	/^f0102121:	74 24                	je     f0102147 <mem_init+0x853>$/;"	l
f0102123	obj/kern/kernel.asm	/^f0102123:	c7 44 24 0c 5c 7c 10 	movl   $0xf0107c5c,0xc(%esp)$/;"	l
f010212a	obj/kern/kernel.asm	/^f010212a:	f0 $/;"	l
f010212b	obj/kern/kernel.asm	/^f010212b:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102132	obj/kern/kernel.asm	/^f0102132:	f0 $/;"	l
f0102133	obj/kern/kernel.asm	/^f0102133:	c7 44 24 04 aa 03 00 	movl   $0x3aa,0x4(%esp)$/;"	l
f010213a	obj/kern/kernel.asm	/^f010213a:	00 $/;"	l
f010213b	obj/kern/kernel.asm	/^f010213b:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	e8 f9 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f010214c	obj/kern/kernel.asm	/^f010214c:	8b 08                	mov    (%eax),%ecx$/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102154	obj/kern/kernel.asm	/^f0102154:	89 da                	mov    %ebx,%edx$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102162	obj/kern/kernel.asm	/^f0102162:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102164	obj/kern/kernel.asm	/^f0102164:	74 24                	je     f010218a <mem_init+0x896>$/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	c7 44 24 0c 8c 7c 10 	movl   $0xf0107c8c,0xc(%esp)$/;"	l
f010216d	obj/kern/kernel.asm	/^f010216d:	f0 $/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102175	obj/kern/kernel.asm	/^f0102175:	f0 $/;"	l
f0102176	obj/kern/kernel.asm	/^f0102176:	c7 44 24 04 ab 03 00 	movl   $0x3ab,0x4(%esp)$/;"	l
f010217d	obj/kern/kernel.asm	/^f010217d:	00 $/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102185	obj/kern/kernel.asm	/^f0102185:	e8 b6 de ff ff       	call   f0100040 <_panic>$/;"	l
f010218a	obj/kern/kernel.asm	/^f010218a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010218f	obj/kern/kernel.asm	/^f010218f:	e8 15 ee ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f0102194	obj/kern/kernel.asm	/^f0102194:	89 fa                	mov    %edi,%edx$/;"	l
f0102196	obj/kern/kernel.asm	/^f0102196:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f010219c	obj/kern/kernel.asm	/^f010219c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	39 d0                	cmp    %edx,%eax$/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	74 24                	je     f01021ca <mem_init+0x8d6>$/;"	l
f01021a6	obj/kern/kernel.asm	/^f01021a6:	c7 44 24 0c b4 7c 10 	movl   $0xf0107cb4,0xc(%esp)$/;"	l
f01021ad	obj/kern/kernel.asm	/^f01021ad:	f0 $/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	f0 $/;"	l
f01021b6	obj/kern/kernel.asm	/^f01021b6:	c7 44 24 04 ac 03 00 	movl   $0x3ac,0x4(%esp)$/;"	l
f01021bd	obj/kern/kernel.asm	/^f01021bd:	00 $/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01021c5	obj/kern/kernel.asm	/^f01021c5:	e8 76 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021ca	obj/kern/kernel.asm	/^f01021ca:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	74 24                	je     f01021f5 <mem_init+0x901>$/;"	l
f01021d1	obj/kern/kernel.asm	/^f01021d1:	c7 44 24 0c 7c 83 10 	movl   $0xf010837c,0xc(%esp)$/;"	l
f01021d8	obj/kern/kernel.asm	/^f01021d8:	f0 $/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01021e0	obj/kern/kernel.asm	/^f01021e0:	f0 $/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	c7 44 24 04 ad 03 00 	movl   $0x3ad,0x4(%esp)$/;"	l
f01021e8	obj/kern/kernel.asm	/^f01021e8:	00 $/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	e8 4b de ff ff       	call   f0100040 <_panic>$/;"	l
f01021f5	obj/kern/kernel.asm	/^f01021f5:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	74 24                	je     f0102220 <mem_init+0x92c>$/;"	l
f01021fc	obj/kern/kernel.asm	/^f01021fc:	c7 44 24 0c 8d 83 10 	movl   $0xf010838d,0xc(%esp)$/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	f0 $/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010220b	obj/kern/kernel.asm	/^f010220b:	f0 $/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	c7 44 24 04 ae 03 00 	movl   $0x3ae,0x4(%esp)$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	00 $/;"	l
f0102214	obj/kern/kernel.asm	/^f0102214:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010221b	obj/kern/kernel.asm	/^f010221b:	e8 20 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	00 $/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	00 $/;"	l
f0102230	obj/kern/kernel.asm	/^f0102230:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	e8 0b f6 ff ff       	call   f010184c <page_insert>$/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	85 c0                	test   %eax,%eax$/;"	l
f0102243	obj/kern/kernel.asm	/^f0102243:	74 24                	je     f0102269 <mem_init+0x975>$/;"	l
f0102245	obj/kern/kernel.asm	/^f0102245:	c7 44 24 0c e4 7c 10 	movl   $0xf0107ce4,0xc(%esp)$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	f0 $/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102254	obj/kern/kernel.asm	/^f0102254:	f0 $/;"	l
f0102255	obj/kern/kernel.asm	/^f0102255:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f010225c	obj/kern/kernel.asm	/^f010225c:	00 $/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102264	obj/kern/kernel.asm	/^f0102264:	e8 d7 dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102273	obj/kern/kernel.asm	/^f0102273:	e8 31 ed ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f0102278	obj/kern/kernel.asm	/^f0102278:	89 f2                	mov    %esi,%edx$/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f0102280	obj/kern/kernel.asm	/^f0102280:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	39 d0                	cmp    %edx,%eax$/;"	l
f0102288	obj/kern/kernel.asm	/^f0102288:	74 24                	je     f01022ae <mem_init+0x9ba>$/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	c7 44 24 0c 20 7d 10 	movl   $0xf0107d20,0xc(%esp)$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	f0 $/;"	l
f0102292	obj/kern/kernel.asm	/^f0102292:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102299	obj/kern/kernel.asm	/^f0102299:	f0 $/;"	l
f010229a	obj/kern/kernel.asm	/^f010229a:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)$/;"	l
f01022a1	obj/kern/kernel.asm	/^f01022a1:	00 $/;"	l
f01022a2	obj/kern/kernel.asm	/^f01022a2:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	e8 92 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01022b3	obj/kern/kernel.asm	/^f01022b3:	74 24                	je     f01022d9 <mem_init+0x9e5>$/;"	l
f01022b5	obj/kern/kernel.asm	/^f01022b5:	c7 44 24 0c 9e 83 10 	movl   $0xf010839e,0xc(%esp)$/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	f0 $/;"	l
f01022bd	obj/kern/kernel.asm	/^f01022bd:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	f0 $/;"	l
f01022c5	obj/kern/kernel.asm	/^f01022c5:	c7 44 24 04 b3 03 00 	movl   $0x3b3,0x4(%esp)$/;"	l
f01022cc	obj/kern/kernel.asm	/^f01022cc:	00 $/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	e8 67 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	e8 96 f1 ff ff       	call   f010147b <page_alloc>$/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	85 c0                	test   %eax,%eax$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	74 24                	je     f010230d <mem_init+0xa19>$/;"	l
f01022e9	obj/kern/kernel.asm	/^f01022e9:	c7 44 24 0c 2a 83 10 	movl   $0xf010832a,0xc(%esp)$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	f0 $/;"	l
f01022f1	obj/kern/kernel.asm	/^f01022f1:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	f0 $/;"	l
f01022f9	obj/kern/kernel.asm	/^f01022f9:	c7 44 24 04 b6 03 00 	movl   $0x3b6,0x4(%esp)$/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	00 $/;"	l
f0102301	obj/kern/kernel.asm	/^f0102301:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102308	obj/kern/kernel.asm	/^f0102308:	e8 33 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010230d	obj/kern/kernel.asm	/^f010230d:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102314	obj/kern/kernel.asm	/^f0102314:	00 $/;"	l
f0102315	obj/kern/kernel.asm	/^f0102315:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010231c	obj/kern/kernel.asm	/^f010231c:	00 $/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102321	obj/kern/kernel.asm	/^f0102321:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102326	obj/kern/kernel.asm	/^f0102326:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	e8 1e f5 ff ff       	call   f010184c <page_insert>$/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	85 c0                	test   %eax,%eax$/;"	l
f0102330	obj/kern/kernel.asm	/^f0102330:	74 24                	je     f0102356 <mem_init+0xa62>$/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	c7 44 24 0c e4 7c 10 	movl   $0xf0107ce4,0xc(%esp)$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	f0 $/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	f0 $/;"	l
f0102342	obj/kern/kernel.asm	/^f0102342:	c7 44 24 04 b9 03 00 	movl   $0x3b9,0x4(%esp)$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	00 $/;"	l
f010234a	obj/kern/kernel.asm	/^f010234a:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102351	obj/kern/kernel.asm	/^f0102351:	e8 ea dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	e8 44 ec ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	89 f2                	mov    %esi,%edx$/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102373	obj/kern/kernel.asm	/^f0102373:	39 d0                	cmp    %edx,%eax$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	74 24                	je     f010239b <mem_init+0xaa7>$/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	c7 44 24 0c 20 7d 10 	movl   $0xf0107d20,0xc(%esp)$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	f0 $/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	f0 $/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	c7 44 24 04 ba 03 00 	movl   $0x3ba,0x4(%esp)$/;"	l
f010238e	obj/kern/kernel.asm	/^f010238e:	00 $/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102396	obj/kern/kernel.asm	/^f0102396:	e8 a5 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010239b	obj/kern/kernel.asm	/^f010239b:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	74 24                	je     f01023c6 <mem_init+0xad2>$/;"	l
f01023a2	obj/kern/kernel.asm	/^f01023a2:	c7 44 24 0c 9e 83 10 	movl   $0xf010839e,0xc(%esp)$/;"	l
f01023a9	obj/kern/kernel.asm	/^f01023a9:	f0 $/;"	l
f01023aa	obj/kern/kernel.asm	/^f01023aa:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	f0 $/;"	l
f01023b2	obj/kern/kernel.asm	/^f01023b2:	c7 44 24 04 bb 03 00 	movl   $0x3bb,0x4(%esp)$/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	00 $/;"	l
f01023ba	obj/kern/kernel.asm	/^f01023ba:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	e8 7a dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	e8 a9 f0 ff ff       	call   f010147b <page_alloc>$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	85 c0                	test   %eax,%eax$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	74 24                	je     f01023fa <mem_init+0xb06>$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	c7 44 24 0c 2a 83 10 	movl   $0xf010832a,0xc(%esp)$/;"	l
f01023dd	obj/kern/kernel.asm	/^f01023dd:	f0 $/;"	l
f01023de	obj/kern/kernel.asm	/^f01023de:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	f0 $/;"	l
f01023e6	obj/kern/kernel.asm	/^f01023e6:	c7 44 24 04 bf 03 00 	movl   $0x3bf,0x4(%esp)$/;"	l
f01023ed	obj/kern/kernel.asm	/^f01023ed:	00 $/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	e8 46 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023fa	obj/kern/kernel.asm	/^f01023fa:	8b 15 8c 8e 1d f0    	mov    0xf01d8e8c,%edx$/;"	l
f0102400	obj/kern/kernel.asm	/^f0102400:	8b 02                	mov    (%edx),%eax$/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102407	obj/kern/kernel.asm	/^f0102407:	89 c1                	mov    %eax,%ecx$/;"	l
f0102409	obj/kern/kernel.asm	/^f0102409:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010240c	obj/kern/kernel.asm	/^f010240c:	3b 0d 88 8e 1d f0    	cmp    0xf01d8e88,%ecx$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	72 20                	jb     f0102434 <mem_init+0xb40>$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102418	obj/kern/kernel.asm	/^f0102418:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f010241f	obj/kern/kernel.asm	/^f010241f:	f0 $/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	c7 44 24 04 c2 03 00 	movl   $0x3c2,0x4(%esp)$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	00 $/;"	l
f0102428	obj/kern/kernel.asm	/^f0102428:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010242f	obj/kern/kernel.asm	/^f010242f:	e8 0c dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102434	obj/kern/kernel.asm	/^f0102434:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102439	obj/kern/kernel.asm	/^f0102439:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010243c	obj/kern/kernel.asm	/^f010243c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102443	obj/kern/kernel.asm	/^f0102443:	00 $/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	00 $/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	e8 e0 f0 ff ff       	call   f0101534 <pgdir_walk>$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0102457	obj/kern/kernel.asm	/^f0102457:	83 c2 04             	add    $0x4,%edx$/;"	l
f010245a	obj/kern/kernel.asm	/^f010245a:	39 d0                	cmp    %edx,%eax$/;"	l
f010245c	obj/kern/kernel.asm	/^f010245c:	74 24                	je     f0102482 <mem_init+0xb8e>$/;"	l
f010245e	obj/kern/kernel.asm	/^f010245e:	c7 44 24 0c 50 7d 10 	movl   $0xf0107d50,0xc(%esp)$/;"	l
f0102465	obj/kern/kernel.asm	/^f0102465:	f0 $/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	f0 $/;"	l
f010246e	obj/kern/kernel.asm	/^f010246e:	c7 44 24 04 c3 03 00 	movl   $0x3c3,0x4(%esp)$/;"	l
f0102475	obj/kern/kernel.asm	/^f0102475:	00 $/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	e8 be db ff ff       	call   f0100040 <_panic>$/;"	l
f0102482	obj/kern/kernel.asm	/^f0102482:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0102489	obj/kern/kernel.asm	/^f0102489:	00 $/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102491	obj/kern/kernel.asm	/^f0102491:	00 $/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102496	obj/kern/kernel.asm	/^f0102496:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f010249b	obj/kern/kernel.asm	/^f010249b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	e8 a9 f3 ff ff       	call   f010184c <page_insert>$/;"	l
f01024a3	obj/kern/kernel.asm	/^f01024a3:	85 c0                	test   %eax,%eax$/;"	l
f01024a5	obj/kern/kernel.asm	/^f01024a5:	74 24                	je     f01024cb <mem_init+0xbd7>$/;"	l
f01024a7	obj/kern/kernel.asm	/^f01024a7:	c7 44 24 0c 90 7d 10 	movl   $0xf0107d90,0xc(%esp)$/;"	l
f01024ae	obj/kern/kernel.asm	/^f01024ae:	f0 $/;"	l
f01024af	obj/kern/kernel.asm	/^f01024af:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01024b6	obj/kern/kernel.asm	/^f01024b6:	f0 $/;"	l
f01024b7	obj/kern/kernel.asm	/^f01024b7:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
f01024be	obj/kern/kernel.asm	/^f01024be:	00 $/;"	l
f01024bf	obj/kern/kernel.asm	/^f01024bf:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01024c6	obj/kern/kernel.asm	/^f01024c6:	e8 75 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024cb	obj/kern/kernel.asm	/^f01024cb:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	e8 cf ea ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f01024da	obj/kern/kernel.asm	/^f01024da:	89 f2                	mov    %esi,%edx$/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f01024e2	obj/kern/kernel.asm	/^f01024e2:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01024e5	obj/kern/kernel.asm	/^f01024e5:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	39 d0                	cmp    %edx,%eax$/;"	l
f01024ea	obj/kern/kernel.asm	/^f01024ea:	74 24                	je     f0102510 <mem_init+0xc1c>$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	c7 44 24 0c 20 7d 10 	movl   $0xf0107d20,0xc(%esp)$/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	f0 $/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01024fb	obj/kern/kernel.asm	/^f01024fb:	f0 $/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	c7 44 24 04 c7 03 00 	movl   $0x3c7,0x4(%esp)$/;"	l
f0102503	obj/kern/kernel.asm	/^f0102503:	00 $/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010250b	obj/kern/kernel.asm	/^f010250b:	e8 30 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102510	obj/kern/kernel.asm	/^f0102510:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	74 24                	je     f010253b <mem_init+0xc47>$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	c7 44 24 0c 9e 83 10 	movl   $0xf010839e,0xc(%esp)$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	f0 $/;"	l
f010251f	obj/kern/kernel.asm	/^f010251f:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102526	obj/kern/kernel.asm	/^f0102526:	f0 $/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	c7 44 24 04 c8 03 00 	movl   $0x3c8,0x4(%esp)$/;"	l
f010252e	obj/kern/kernel.asm	/^f010252e:	00 $/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102536	obj/kern/kernel.asm	/^f0102536:	e8 05 db ff ff       	call   f0100040 <_panic>$/;"	l
f010253b	obj/kern/kernel.asm	/^f010253b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102542	obj/kern/kernel.asm	/^f0102542:	00 $/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010254a	obj/kern/kernel.asm	/^f010254a:	00 $/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	e8 dc ef ff ff       	call   f0101534 <pgdir_walk>$/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010255b	obj/kern/kernel.asm	/^f010255b:	75 24                	jne    f0102581 <mem_init+0xc8d>$/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	c7 44 24 0c d0 7d 10 	movl   $0xf0107dd0,0xc(%esp)$/;"	l
f0102564	obj/kern/kernel.asm	/^f0102564:	f0 $/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010256c	obj/kern/kernel.asm	/^f010256c:	f0 $/;"	l
f010256d	obj/kern/kernel.asm	/^f010256d:	c7 44 24 04 c9 03 00 	movl   $0x3c9,0x4(%esp)$/;"	l
f0102574	obj/kern/kernel.asm	/^f0102574:	00 $/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010257c	obj/kern/kernel.asm	/^f010257c:	e8 bf da ff ff       	call   f0100040 <_panic>$/;"	l
f0102581	obj/kern/kernel.asm	/^f0102581:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102586	obj/kern/kernel.asm	/^f0102586:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102589	obj/kern/kernel.asm	/^f0102589:	75 24                	jne    f01025af <mem_init+0xcbb>$/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	c7 44 24 0c af 83 10 	movl   $0xf01083af,0xc(%esp)$/;"	l
f0102592	obj/kern/kernel.asm	/^f0102592:	f0 $/;"	l
f0102593	obj/kern/kernel.asm	/^f0102593:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010259a	obj/kern/kernel.asm	/^f010259a:	f0 $/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	c7 44 24 04 ca 03 00 	movl   $0x3ca,0x4(%esp)$/;"	l
f01025a2	obj/kern/kernel.asm	/^f01025a2:	00 $/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01025aa	obj/kern/kernel.asm	/^f01025aa:	e8 91 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01025b6	obj/kern/kernel.asm	/^f01025b6:	00 $/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f01025be	obj/kern/kernel.asm	/^f01025be:	00 $/;"	l
f01025bf	obj/kern/kernel.asm	/^f01025bf:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01025c6	obj/kern/kernel.asm	/^f01025c6:	e8 81 f2 ff ff       	call   f010184c <page_insert>$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	85 c0                	test   %eax,%eax$/;"	l
f01025cd	obj/kern/kernel.asm	/^f01025cd:	78 24                	js     f01025f3 <mem_init+0xcff>$/;"	l
f01025cf	obj/kern/kernel.asm	/^f01025cf:	c7 44 24 0c 04 7e 10 	movl   $0xf0107e04,0xc(%esp)$/;"	l
f01025d6	obj/kern/kernel.asm	/^f01025d6:	f0 $/;"	l
f01025d7	obj/kern/kernel.asm	/^f01025d7:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01025de	obj/kern/kernel.asm	/^f01025de:	f0 $/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f01025e6	obj/kern/kernel.asm	/^f01025e6:	00 $/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	e8 4d da ff ff       	call   f0100040 <_panic>$/;"	l
f01025f3	obj/kern/kernel.asm	/^f01025f3:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01025fa	obj/kern/kernel.asm	/^f01025fa:	00 $/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102602	obj/kern/kernel.asm	/^f0102602:	00 $/;"	l
f0102603	obj/kern/kernel.asm	/^f0102603:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102607	obj/kern/kernel.asm	/^f0102607:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	e8 38 f2 ff ff       	call   f010184c <page_insert>$/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	85 c0                	test   %eax,%eax$/;"	l
f0102616	obj/kern/kernel.asm	/^f0102616:	74 24                	je     f010263c <mem_init+0xd48>$/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	c7 44 24 0c 3c 7e 10 	movl   $0xf0107e3c,0xc(%esp)$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	f0 $/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102627	obj/kern/kernel.asm	/^f0102627:	f0 $/;"	l
f0102628	obj/kern/kernel.asm	/^f0102628:	c7 44 24 04 d0 03 00 	movl   $0x3d0,0x4(%esp)$/;"	l
f010262f	obj/kern/kernel.asm	/^f010262f:	00 $/;"	l
f0102630	obj/kern/kernel.asm	/^f0102630:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102637	obj/kern/kernel.asm	/^f0102637:	e8 04 da ff ff       	call   f0100040 <_panic>$/;"	l
f010263c	obj/kern/kernel.asm	/^f010263c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	00 $/;"	l
f0102644	obj/kern/kernel.asm	/^f0102644:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010264b	obj/kern/kernel.asm	/^f010264b:	00 $/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102651	obj/kern/kernel.asm	/^f0102651:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102654	obj/kern/kernel.asm	/^f0102654:	e8 db ee ff ff       	call   f0101534 <pgdir_walk>$/;"	l
f0102659	obj/kern/kernel.asm	/^f0102659:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	74 24                	je     f0102682 <mem_init+0xd8e>$/;"	l
f010265e	obj/kern/kernel.asm	/^f010265e:	c7 44 24 0c 78 7e 10 	movl   $0xf0107e78,0xc(%esp)$/;"	l
f0102665	obj/kern/kernel.asm	/^f0102665:	f0 $/;"	l
f0102666	obj/kern/kernel.asm	/^f0102666:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010266d	obj/kern/kernel.asm	/^f010266d:	f0 $/;"	l
f010266e	obj/kern/kernel.asm	/^f010266e:	c7 44 24 04 d1 03 00 	movl   $0x3d1,0x4(%esp)$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	00 $/;"	l
f0102676	obj/kern/kernel.asm	/^f0102676:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010267d	obj/kern/kernel.asm	/^f010267d:	e8 be d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102682	obj/kern/kernel.asm	/^f0102682:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102687	obj/kern/kernel.asm	/^f0102687:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f010268c	obj/kern/kernel.asm	/^f010268c:	e8 18 e9 ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f0102691	obj/kern/kernel.asm	/^f0102691:	89 fa                	mov    %edi,%edx$/;"	l
f0102693	obj/kern/kernel.asm	/^f0102693:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f0102699	obj/kern/kernel.asm	/^f0102699:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010269c	obj/kern/kernel.asm	/^f010269c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010269f	obj/kern/kernel.asm	/^f010269f:	39 d0                	cmp    %edx,%eax$/;"	l
f01026a1	obj/kern/kernel.asm	/^f01026a1:	74 24                	je     f01026c7 <mem_init+0xdd3>$/;"	l
f01026a3	obj/kern/kernel.asm	/^f01026a3:	c7 44 24 0c b0 7e 10 	movl   $0xf0107eb0,0xc(%esp)$/;"	l
f01026aa	obj/kern/kernel.asm	/^f01026aa:	f0 $/;"	l
f01026ab	obj/kern/kernel.asm	/^f01026ab:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01026b2	obj/kern/kernel.asm	/^f01026b2:	f0 $/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	c7 44 24 04 d4 03 00 	movl   $0x3d4,0x4(%esp)$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	00 $/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01026c2	obj/kern/kernel.asm	/^f01026c2:	e8 79 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01026cc	obj/kern/kernel.asm	/^f01026cc:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01026d1	obj/kern/kernel.asm	/^f01026d1:	e8 d3 e8 ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f01026d6	obj/kern/kernel.asm	/^f01026d6:	89 fa                	mov    %edi,%edx$/;"	l
f01026d8	obj/kern/kernel.asm	/^f01026d8:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01026e1	obj/kern/kernel.asm	/^f01026e1:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	39 d0                	cmp    %edx,%eax$/;"	l
f01026e6	obj/kern/kernel.asm	/^f01026e6:	74 24                	je     f010270c <mem_init+0xe18>$/;"	l
f01026e8	obj/kern/kernel.asm	/^f01026e8:	c7 44 24 0c dc 7e 10 	movl   $0xf0107edc,0xc(%esp)$/;"	l
f01026ef	obj/kern/kernel.asm	/^f01026ef:	f0 $/;"	l
f01026f0	obj/kern/kernel.asm	/^f01026f0:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	f0 $/;"	l
f01026f8	obj/kern/kernel.asm	/^f01026f8:	c7 44 24 04 d5 03 00 	movl   $0x3d5,0x4(%esp)$/;"	l
f01026ff	obj/kern/kernel.asm	/^f01026ff:	00 $/;"	l
f0102700	obj/kern/kernel.asm	/^f0102700:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	e8 34 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010270c	obj/kern/kernel.asm	/^f010270c:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)$/;"	l
f0102711	obj/kern/kernel.asm	/^f0102711:	74 24                	je     f0102737 <mem_init+0xe43>$/;"	l
f0102713	obj/kern/kernel.asm	/^f0102713:	c7 44 24 0c c5 83 10 	movl   $0xf01083c5,0xc(%esp)$/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	f0 $/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102722	obj/kern/kernel.asm	/^f0102722:	f0 $/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	00 $/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102732	obj/kern/kernel.asm	/^f0102732:	e8 09 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102737	obj/kern/kernel.asm	/^f0102737:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f010273c	obj/kern/kernel.asm	/^f010273c:	74 24                	je     f0102762 <mem_init+0xe6e>$/;"	l
f010273e	obj/kern/kernel.asm	/^f010273e:	c7 44 24 0c d6 83 10 	movl   $0xf01083d6,0xc(%esp)$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	f0 $/;"	l
f0102746	obj/kern/kernel.asm	/^f0102746:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	f0 $/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	c7 44 24 04 d8 03 00 	movl   $0x3d8,0x4(%esp)$/;"	l
f0102755	obj/kern/kernel.asm	/^f0102755:	00 $/;"	l
f0102756	obj/kern/kernel.asm	/^f0102756:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	e8 de d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102762	obj/kern/kernel.asm	/^f0102762:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102769	obj/kern/kernel.asm	/^f0102769:	e8 0d ed ff ff       	call   f010147b <page_alloc>$/;"	l
f010276e	obj/kern/kernel.asm	/^f010276e:	85 c0                	test   %eax,%eax$/;"	l
f0102770	obj/kern/kernel.asm	/^f0102770:	74 04                	je     f0102776 <mem_init+0xe82>$/;"	l
f0102772	obj/kern/kernel.asm	/^f0102772:	39 c6                	cmp    %eax,%esi$/;"	l
f0102774	obj/kern/kernel.asm	/^f0102774:	74 24                	je     f010279a <mem_init+0xea6>$/;"	l
f0102776	obj/kern/kernel.asm	/^f0102776:	c7 44 24 0c 0c 7f 10 	movl   $0xf0107f0c,0xc(%esp)$/;"	l
f010277d	obj/kern/kernel.asm	/^f010277d:	f0 $/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102785	obj/kern/kernel.asm	/^f0102785:	f0 $/;"	l
f0102786	obj/kern/kernel.asm	/^f0102786:	c7 44 24 04 db 03 00 	movl   $0x3db,0x4(%esp)$/;"	l
f010278d	obj/kern/kernel.asm	/^f010278d:	00 $/;"	l
f010278e	obj/kern/kernel.asm	/^f010278e:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795:	e8 a6 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	00 $/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01027a7	obj/kern/kernel.asm	/^f01027a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	e8 46 f0 ff ff       	call   f01017f5 <page_remove>$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01027b9	obj/kern/kernel.asm	/^f01027b9:	e8 eb e7 ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f01027be	obj/kern/kernel.asm	/^f01027be:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01027c1	obj/kern/kernel.asm	/^f01027c1:	74 24                	je     f01027e7 <mem_init+0xef3>$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	c7 44 24 0c 30 7f 10 	movl   $0xf0107f30,0xc(%esp)$/;"	l
f01027ca	obj/kern/kernel.asm	/^f01027ca:	f0 $/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	f0 $/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	c7 44 24 04 df 03 00 	movl   $0x3df,0x4(%esp)$/;"	l
f01027da	obj/kern/kernel.asm	/^f01027da:	00 $/;"	l
f01027db	obj/kern/kernel.asm	/^f01027db:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	e8 59 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027e7	obj/kern/kernel.asm	/^f01027e7:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01027ec	obj/kern/kernel.asm	/^f01027ec:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01027f1	obj/kern/kernel.asm	/^f01027f1:	e8 b3 e7 ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	89 fa                	mov    %edi,%edx$/;"	l
f01027f8	obj/kern/kernel.asm	/^f01027f8:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102804	obj/kern/kernel.asm	/^f0102804:	39 d0                	cmp    %edx,%eax$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	74 24                	je     f010282c <mem_init+0xf38>$/;"	l
f0102808	obj/kern/kernel.asm	/^f0102808:	c7 44 24 0c dc 7e 10 	movl   $0xf0107edc,0xc(%esp)$/;"	l
f010280f	obj/kern/kernel.asm	/^f010280f:	f0 $/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	f0 $/;"	l
f0102818	obj/kern/kernel.asm	/^f0102818:	c7 44 24 04 e0 03 00 	movl   $0x3e0,0x4(%esp)$/;"	l
f010281f	obj/kern/kernel.asm	/^f010281f:	00 $/;"	l
f0102820	obj/kern/kernel.asm	/^f0102820:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	e8 14 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010282c	obj/kern/kernel.asm	/^f010282c:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102831	obj/kern/kernel.asm	/^f0102831:	74 24                	je     f0102857 <mem_init+0xf63>$/;"	l
f0102833	obj/kern/kernel.asm	/^f0102833:	c7 44 24 0c 7c 83 10 	movl   $0xf010837c,0xc(%esp)$/;"	l
f010283a	obj/kern/kernel.asm	/^f010283a:	f0 $/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102842	obj/kern/kernel.asm	/^f0102842:	f0 $/;"	l
f0102843	obj/kern/kernel.asm	/^f0102843:	c7 44 24 04 e1 03 00 	movl   $0x3e1,0x4(%esp)$/;"	l
f010284a	obj/kern/kernel.asm	/^f010284a:	00 $/;"	l
f010284b	obj/kern/kernel.asm	/^f010284b:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102852	obj/kern/kernel.asm	/^f0102852:	e8 e9 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102857	obj/kern/kernel.asm	/^f0102857:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f010285c	obj/kern/kernel.asm	/^f010285c:	74 24                	je     f0102882 <mem_init+0xf8e>$/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	c7 44 24 0c d6 83 10 	movl   $0xf01083d6,0xc(%esp)$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	f0 $/;"	l
f0102866	obj/kern/kernel.asm	/^f0102866:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010286d	obj/kern/kernel.asm	/^f010286d:	f0 $/;"	l
f010286e	obj/kern/kernel.asm	/^f010286e:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f0102875	obj/kern/kernel.asm	/^f0102875:	00 $/;"	l
f0102876	obj/kern/kernel.asm	/^f0102876:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	e8 be d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102882	obj/kern/kernel.asm	/^f0102882:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102889	obj/kern/kernel.asm	/^f0102889:	00 $/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102892	obj/kern/kernel.asm	/^f0102892:	e8 5e ef ff ff       	call   f01017f5 <page_remove>$/;"	l
f0102897	obj/kern/kernel.asm	/^f0102897:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010289c	obj/kern/kernel.asm	/^f010289c:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01028a1	obj/kern/kernel.asm	/^f01028a1:	e8 03 e7 ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	74 24                	je     f01028cf <mem_init+0xfdb>$/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	c7 44 24 0c 30 7f 10 	movl   $0xf0107f30,0xc(%esp)$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	f0 $/;"	l
f01028b3	obj/kern/kernel.asm	/^f01028b3:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	f0 $/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	c7 44 24 04 e6 03 00 	movl   $0x3e6,0x4(%esp)$/;"	l
f01028c2	obj/kern/kernel.asm	/^f01028c2:	00 $/;"	l
f01028c3	obj/kern/kernel.asm	/^f01028c3:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01028ca	obj/kern/kernel.asm	/^f01028ca:	e8 71 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028cf	obj/kern/kernel.asm	/^f01028cf:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01028d4	obj/kern/kernel.asm	/^f01028d4:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	e8 cb e6 ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01028e1	obj/kern/kernel.asm	/^f01028e1:	74 24                	je     f0102907 <mem_init+0x1013>$/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	c7 44 24 0c 54 7f 10 	movl   $0xf0107f54,0xc(%esp)$/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	f0 $/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	f0 $/;"	l
f01028f3	obj/kern/kernel.asm	/^f01028f3:	c7 44 24 04 e7 03 00 	movl   $0x3e7,0x4(%esp)$/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	00 $/;"	l
f01028fb	obj/kern/kernel.asm	/^f01028fb:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102902	obj/kern/kernel.asm	/^f0102902:	e8 39 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102907	obj/kern/kernel.asm	/^f0102907:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f010290c	obj/kern/kernel.asm	/^f010290c:	74 24                	je     f0102932 <mem_init+0x103e>$/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	c7 44 24 0c e7 83 10 	movl   $0xf01083e7,0xc(%esp)$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	f0 $/;"	l
f0102916	obj/kern/kernel.asm	/^f0102916:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010291d	obj/kern/kernel.asm	/^f010291d:	f0 $/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	c7 44 24 04 e8 03 00 	movl   $0x3e8,0x4(%esp)$/;"	l
f0102925	obj/kern/kernel.asm	/^f0102925:	00 $/;"	l
f0102926	obj/kern/kernel.asm	/^f0102926:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010292d	obj/kern/kernel.asm	/^f010292d:	e8 0e d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	74 24                	je     f010295d <mem_init+0x1069>$/;"	l
f0102939	obj/kern/kernel.asm	/^f0102939:	c7 44 24 0c d6 83 10 	movl   $0xf01083d6,0xc(%esp)$/;"	l
f0102940	obj/kern/kernel.asm	/^f0102940:	f0 $/;"	l
f0102941	obj/kern/kernel.asm	/^f0102941:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102948	obj/kern/kernel.asm	/^f0102948:	f0 $/;"	l
f0102949	obj/kern/kernel.asm	/^f0102949:	c7 44 24 04 e9 03 00 	movl   $0x3e9,0x4(%esp)$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	00 $/;"	l
f0102951	obj/kern/kernel.asm	/^f0102951:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102958	obj/kern/kernel.asm	/^f0102958:	e8 e3 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	e8 12 eb ff ff       	call   f010147b <page_alloc>$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	85 c0                	test   %eax,%eax$/;"	l
f010296b	obj/kern/kernel.asm	/^f010296b:	74 04                	je     f0102971 <mem_init+0x107d>$/;"	l
f010296d	obj/kern/kernel.asm	/^f010296d:	39 c7                	cmp    %eax,%edi$/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	74 24                	je     f0102995 <mem_init+0x10a1>$/;"	l
f0102971	obj/kern/kernel.asm	/^f0102971:	c7 44 24 0c 7c 7f 10 	movl   $0xf0107f7c,0xc(%esp)$/;"	l
f0102978	obj/kern/kernel.asm	/^f0102978:	f0 $/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102980	obj/kern/kernel.asm	/^f0102980:	f0 $/;"	l
f0102981	obj/kern/kernel.asm	/^f0102981:	c7 44 24 04 ec 03 00 	movl   $0x3ec,0x4(%esp)$/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	00 $/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	e8 ab d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102995	obj/kern/kernel.asm	/^f0102995:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010299c	obj/kern/kernel.asm	/^f010299c:	e8 da ea ff ff       	call   f010147b <page_alloc>$/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	85 c0                	test   %eax,%eax$/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	74 24                	je     f01029c9 <mem_init+0x10d5>$/;"	l
f01029a5	obj/kern/kernel.asm	/^f01029a5:	c7 44 24 0c 2a 83 10 	movl   $0xf010832a,0xc(%esp)$/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	f0 $/;"	l
f01029ad	obj/kern/kernel.asm	/^f01029ad:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01029b4	obj/kern/kernel.asm	/^f01029b4:	f0 $/;"	l
f01029b5	obj/kern/kernel.asm	/^f01029b5:	c7 44 24 04 ef 03 00 	movl   $0x3ef,0x4(%esp)$/;"	l
f01029bc	obj/kern/kernel.asm	/^f01029bc:	00 $/;"	l
f01029bd	obj/kern/kernel.asm	/^f01029bd:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01029c4	obj/kern/kernel.asm	/^f01029c4:	e8 77 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029c9	obj/kern/kernel.asm	/^f01029c9:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	8b 08                	mov    (%eax),%ecx$/;"	l
f01029d0	obj/kern/kernel.asm	/^f01029d0:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	89 da                	mov    %ebx,%edx$/;"	l
f01029d8	obj/kern/kernel.asm	/^f01029d8:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01029e4	obj/kern/kernel.asm	/^f01029e4:	39 d1                	cmp    %edx,%ecx$/;"	l
f01029e6	obj/kern/kernel.asm	/^f01029e6:	74 24                	je     f0102a0c <mem_init+0x1118>$/;"	l
f01029e8	obj/kern/kernel.asm	/^f01029e8:	c7 44 24 0c 8c 7c 10 	movl   $0xf0107c8c,0xc(%esp)$/;"	l
f01029ef	obj/kern/kernel.asm	/^f01029ef:	f0 $/;"	l
f01029f0	obj/kern/kernel.asm	/^f01029f0:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01029f7	obj/kern/kernel.asm	/^f01029f7:	f0 $/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	c7 44 24 04 f2 03 00 	movl   $0x3f2,0x4(%esp)$/;"	l
f01029ff	obj/kern/kernel.asm	/^f01029ff:	00 $/;"	l
f0102a00	obj/kern/kernel.asm	/^f0102a00:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102a07	obj/kern/kernel.asm	/^f0102a07:	e8 34 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102a12	obj/kern/kernel.asm	/^f0102a12:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102a17	obj/kern/kernel.asm	/^f0102a17:	74 24                	je     f0102a3d <mem_init+0x1149>$/;"	l
f0102a19	obj/kern/kernel.asm	/^f0102a19:	c7 44 24 0c 8d 83 10 	movl   $0xf010838d,0xc(%esp)$/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	f0 $/;"	l
f0102a21	obj/kern/kernel.asm	/^f0102a21:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102a28	obj/kern/kernel.asm	/^f0102a28:	f0 $/;"	l
f0102a29	obj/kern/kernel.asm	/^f0102a29:	c7 44 24 04 f4 03 00 	movl   $0x3f4,0x4(%esp)$/;"	l
f0102a30	obj/kern/kernel.asm	/^f0102a30:	00 $/;"	l
f0102a31	obj/kern/kernel.asm	/^f0102a31:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102a38	obj/kern/kernel.asm	/^f0102a38:	e8 03 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a3d	obj/kern/kernel.asm	/^f0102a3d:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102a43	obj/kern/kernel.asm	/^f0102a43:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	e8 b1 ea ff ff       	call   f01014fc <page_free>$/;"	l
f0102a4b	obj/kern/kernel.asm	/^f0102a4b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102a52	obj/kern/kernel.asm	/^f0102a52:	00 $/;"	l
f0102a53	obj/kern/kernel.asm	/^f0102a53:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	00 $/;"	l
f0102a5b	obj/kern/kernel.asm	/^f0102a5b:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102a60	obj/kern/kernel.asm	/^f0102a60:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	e8 cc ea ff ff       	call   f0101534 <pgdir_walk>$/;"	l
f0102a68	obj/kern/kernel.asm	/^f0102a68:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102a6b	obj/kern/kernel.asm	/^f0102a6b:	8b 0d 8c 8e 1d f0    	mov    0xf01d8e8c,%ecx$/;"	l
f0102a71	obj/kern/kernel.asm	/^f0102a71:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
f0102a74	obj/kern/kernel.asm	/^f0102a74:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f0102a86	obj/kern/kernel.asm	/^f0102a86:	72 23                	jb     f0102aab <mem_init+0x11b7>$/;"	l
f0102a88	obj/kern/kernel.asm	/^f0102a88:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0102a8b	obj/kern/kernel.asm	/^f0102a8b:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0102a96	obj/kern/kernel.asm	/^f0102a96:	f0 $/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	c7 44 24 04 fb 03 00 	movl   $0x3fb,0x4(%esp)$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	00 $/;"	l
f0102a9f	obj/kern/kernel.asm	/^f0102a9f:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102aa6	obj/kern/kernel.asm	/^f0102aa6:	e8 95 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102aab	obj/kern/kernel.asm	/^f0102aab:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0102aae	obj/kern/kernel.asm	/^f0102aae:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	39 d0                	cmp    %edx,%eax$/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	74 24                	je     f0102adc <mem_init+0x11e8>$/;"	l
f0102ab8	obj/kern/kernel.asm	/^f0102ab8:	c7 44 24 0c f8 83 10 	movl   $0xf01083f8,0xc(%esp)$/;"	l
f0102abf	obj/kern/kernel.asm	/^f0102abf:	f0 $/;"	l
f0102ac0	obj/kern/kernel.asm	/^f0102ac0:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	f0 $/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	c7 44 24 04 fc 03 00 	movl   $0x3fc,0x4(%esp)$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	00 $/;"	l
f0102ad0	obj/kern/kernel.asm	/^f0102ad0:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102ad7	obj/kern/kernel.asm	/^f0102ad7:	e8 64 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102adc	obj/kern/kernel.asm	/^f0102adc:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
f0102ae3	obj/kern/kernel.asm	/^f0102ae3:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102ae9	obj/kern/kernel.asm	/^f0102ae9:	89 d8                	mov    %ebx,%eax$/;"	l
f0102aeb	obj/kern/kernel.asm	/^f0102aeb:	2b 05 90 8e 1d f0    	sub    0xf01d8e90,%eax$/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102af4	obj/kern/kernel.asm	/^f0102af4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102af7	obj/kern/kernel.asm	/^f0102af7:	89 c2                	mov    %eax,%edx$/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f0102b02	obj/kern/kernel.asm	/^f0102b02:	72 20                	jb     f0102b24 <mem_init+0x1230>$/;"	l
f0102b04	obj/kern/kernel.asm	/^f0102b04:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0102b0f	obj/kern/kernel.asm	/^f0102b0f:	f0 $/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102b17	obj/kern/kernel.asm	/^f0102b17:	00 $/;"	l
f0102b18	obj/kern/kernel.asm	/^f0102b18:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f0102b1f	obj/kern/kernel.asm	/^f0102b1f:	e8 1c d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b24	obj/kern/kernel.asm	/^f0102b24:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	00 $/;"	l
f0102b2c	obj/kern/kernel.asm	/^f0102b2c:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102b33	obj/kern/kernel.asm	/^f0102b33:	00 $/;"	l
f0102b34	obj/kern/kernel.asm	/^f0102b34:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102b39	obj/kern/kernel.asm	/^f0102b39:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b3c	obj/kern/kernel.asm	/^f0102b3c:	e8 70 3a 00 00       	call   f01065b1 <memset>$/;"	l
f0102b41	obj/kern/kernel.asm	/^f0102b41:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	e8 b3 e9 ff ff       	call   f01014fc <page_free>$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102b50	obj/kern/kernel.asm	/^f0102b50:	00 $/;"	l
f0102b51	obj/kern/kernel.asm	/^f0102b51:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	00 $/;"	l
f0102b59	obj/kern/kernel.asm	/^f0102b59:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	e8 ce e9 ff ff       	call   f0101534 <pgdir_walk>$/;"	l
f0102b66	obj/kern/kernel.asm	/^f0102b66:	89 da                	mov    %ebx,%edx$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f0102b6e	obj/kern/kernel.asm	/^f0102b6e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102b71	obj/kern/kernel.asm	/^f0102b71:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	89 d0                	mov    %edx,%eax$/;"	l
f0102b76	obj/kern/kernel.asm	/^f0102b76:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	3b 05 88 8e 1d f0    	cmp    0xf01d8e88,%eax$/;"	l
f0102b7f	obj/kern/kernel.asm	/^f0102b7f:	72 20                	jb     f0102ba1 <mem_init+0x12ad>$/;"	l
f0102b81	obj/kern/kernel.asm	/^f0102b81:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	f0 $/;"	l
f0102b8d	obj/kern/kernel.asm	/^f0102b8d:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	00 $/;"	l
f0102b95	obj/kern/kernel.asm	/^f0102b95:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f0102b9c	obj/kern/kernel.asm	/^f0102b9c:	e8 9f d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102ba7	obj/kern/kernel.asm	/^f0102ba7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102baa	obj/kern/kernel.asm	/^f0102baa:	f6 82 00 00 00 f0 01 	testb  $0x1,-0x10000000(%edx)$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	75 11                	jne    f0102bc4 <mem_init+0x12d0>$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	8d 82 04 00 00 f0    	lea    -0xffffffc(%edx),%eax$/;"	l
f0102bb9	obj/kern/kernel.asm	/^f0102bb9:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102bbf	obj/kern/kernel.asm	/^f0102bbf:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102bc2	obj/kern/kernel.asm	/^f0102bc2:	74 24                	je     f0102be8 <mem_init+0x12f4>$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	c7 44 24 0c 10 84 10 	movl   $0xf0108410,0xc(%esp)$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	f0 $/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102bd3	obj/kern/kernel.asm	/^f0102bd3:	f0 $/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)$/;"	l
f0102bdb	obj/kern/kernel.asm	/^f0102bdb:	00 $/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102be3	obj/kern/kernel.asm	/^f0102be3:	e8 58 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102be8	obj/kern/kernel.asm	/^f0102be8:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102beb	obj/kern/kernel.asm	/^f0102beb:	39 d0                	cmp    %edx,%eax$/;"	l
f0102bed	obj/kern/kernel.asm	/^f0102bed:	75 d0                	jne    f0102bbf <mem_init+0x12cb>$/;"	l
f0102bef	obj/kern/kernel.asm	/^f0102bef:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102bf4	obj/kern/kernel.asm	/^f0102bf4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102bfa	obj/kern/kernel.asm	/^f0102bfa:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102c00	obj/kern/kernel.asm	/^f0102c00:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102c03	obj/kern/kernel.asm	/^f0102c03:	a3 30 82 1d f0       	mov    %eax,0xf01d8230$/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	e8 ec e8 ff ff       	call   f01014fc <page_free>$/;"	l
f0102c10	obj/kern/kernel.asm	/^f0102c10:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	e8 e4 e8 ff ff       	call   f01014fc <page_free>$/;"	l
f0102c18	obj/kern/kernel.asm	/^f0102c18:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	e8 dc e8 ff ff       	call   f01014fc <page_free>$/;"	l
f0102c20	obj/kern/kernel.asm	/^f0102c20:	c7 04 24 27 84 10 f0 	movl   $0xf0108427,(%esp)$/;"	l
f0102c27	obj/kern/kernel.asm	/^f0102c27:	e8 6e 14 00 00       	call   f010409a <cprintf>$/;"	l
f0102c2c	obj/kern/kernel.asm	/^f0102c2c:	a1 90 8e 1d f0       	mov    0xf01d8e90,%eax$/;"	l
f0102c31	obj/kern/kernel.asm	/^f0102c31:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102c36	obj/kern/kernel.asm	/^f0102c36:	77 20                	ja     f0102c58 <mem_init+0x1364>$/;"	l
f0102c38	obj/kern/kernel.asm	/^f0102c38:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	f0 $/;"	l
f0102c44	obj/kern/kernel.asm	/^f0102c44:	c7 44 24 04 b7 00 00 	movl   $0xb7,0x4(%esp)$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	00 $/;"	l
f0102c4c	obj/kern/kernel.asm	/^f0102c4c:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	e8 e8 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c58	obj/kern/kernel.asm	/^f0102c58:	8b 15 88 8e 1d f0    	mov    0xf01d8e88,%edx$/;"	l
f0102c5e	obj/kern/kernel.asm	/^f0102c5e:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102c65	obj/kern/kernel.asm	/^f0102c65:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f0102c72	obj/kern/kernel.asm	/^f0102c72:	00 $/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c7b	obj/kern/kernel.asm	/^f0102c7b:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	e8 5a ea ff ff       	call   f01016e4 <boot_map_region>$/;"	l
f0102c8a	obj/kern/kernel.asm	/^f0102c8a:	a1 3c 82 1d f0       	mov    0xf01d823c,%eax$/;"	l
f0102c8f	obj/kern/kernel.asm	/^f0102c8f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102c94	obj/kern/kernel.asm	/^f0102c94:	77 20                	ja     f0102cb6 <mem_init+0x13c2>$/;"	l
f0102c96	obj/kern/kernel.asm	/^f0102c96:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	f0 $/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	c7 44 24 04 c4 00 00 	movl   $0xc4,0x4(%esp)$/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	00 $/;"	l
f0102caa	obj/kern/kernel.asm	/^f0102caa:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	e8 8a d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cb6	obj/kern/kernel.asm	/^f0102cb6:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f0102cbd	obj/kern/kernel.asm	/^f0102cbd:	00 $/;"	l
f0102cbe	obj/kern/kernel.asm	/^f0102cbe:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102cc3	obj/kern/kernel.asm	/^f0102cc3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102cc6	obj/kern/kernel.asm	/^f0102cc6:	b9 00 10 02 00       	mov    $0x21000,%ecx$/;"	l
f0102ccb	obj/kern/kernel.asm	/^f0102ccb:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102cd0	obj/kern/kernel.asm	/^f0102cd0:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102cd5	obj/kern/kernel.asm	/^f0102cd5:	e8 0a ea ff ff       	call   f01016e4 <boot_map_region>$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	b8 00 90 11 f0       	mov    $0xf0119000,%eax$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	77 20                	ja     f0102d06 <mem_init+0x1412>$/;"	l
f0102ce6	obj/kern/kernel.asm	/^f0102ce6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102cea	obj/kern/kernel.asm	/^f0102cea:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0102cf1	obj/kern/kernel.asm	/^f0102cf1:	f0 $/;"	l
f0102cf2	obj/kern/kernel.asm	/^f0102cf2:	c7 44 24 04 d5 00 00 	movl   $0xd5,0x4(%esp)$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	00 $/;"	l
f0102cfa	obj/kern/kernel.asm	/^f0102cfa:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102d01	obj/kern/kernel.asm	/^f0102d01:	e8 3a d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d06	obj/kern/kernel.asm	/^f0102d06:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102d0d	obj/kern/kernel.asm	/^f0102d0d:	00 $/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	c7 04 24 00 90 11 00 	movl   $0x119000,(%esp)$/;"	l
f0102d15	obj/kern/kernel.asm	/^f0102d15:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102d1a	obj/kern/kernel.asm	/^f0102d1a:	ba 00 80 bf ef       	mov    $0xefbf8000,%edx$/;"	l
f0102d1f	obj/kern/kernel.asm	/^f0102d1f:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	e8 bb e9 ff ff       	call   f01016e4 <boot_map_region>$/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102d30	obj/kern/kernel.asm	/^f0102d30:	00 $/;"	l
f0102d31	obj/kern/kernel.asm	/^f0102d31:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102d38	obj/kern/kernel.asm	/^f0102d38:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102d3d	obj/kern/kernel.asm	/^f0102d3d:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102d42	obj/kern/kernel.asm	/^f0102d42:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102d47	obj/kern/kernel.asm	/^f0102d47:	e8 98 e9 ff ff       	call   f01016e4 <boot_map_region>$/;"	l
f0102d4c	obj/kern/kernel.asm	/^f0102d4c:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102d53	obj/kern/kernel.asm	/^f0102d53:	00 $/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	c7 04 24 00 00 00 fe 	movl   $0xfe000000,(%esp)$/;"	l
f0102d5b	obj/kern/kernel.asm	/^f0102d5b:	b9 00 00 00 02       	mov    $0x2000000,%ecx$/;"	l
f0102d60	obj/kern/kernel.asm	/^f0102d60:	ba 00 00 00 fe       	mov    $0xfe000000,%edx$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102d6a	obj/kern/kernel.asm	/^f0102d6a:	e8 75 e9 ff ff       	call   f01016e4 <boot_map_region>$/;"	l
f0102d6f	obj/kern/kernel.asm	/^f0102d6f:	b8 00 a0 1d f0       	mov    $0xf01da000,%eax$/;"	l
f0102d74	obj/kern/kernel.asm	/^f0102d74:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d79	obj/kern/kernel.asm	/^f0102d79:	0f 87 12 08 00 00    	ja     f0103591 <mem_init+0x1c9d>$/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	eb 0c                	jmp    f0102d8d <mem_init+0x1499>$/;"	l
f0102d81	obj/kern/kernel.asm	/^f0102d81:	89 d8                	mov    %ebx,%eax$/;"	l
f0102d83	obj/kern/kernel.asm	/^f0102d83:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102d89	obj/kern/kernel.asm	/^f0102d89:	77 27                	ja     f0102db2 <mem_init+0x14be>$/;"	l
f0102d8b	obj/kern/kernel.asm	/^f0102d8b:	eb 05                	jmp    f0102d92 <mem_init+0x149e>$/;"	l
f0102d8d	obj/kern/kernel.asm	/^f0102d8d:	b8 00 a0 1d f0       	mov    $0xf01da000,%eax$/;"	l
f0102d92	obj/kern/kernel.asm	/^f0102d92:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0102d9d	obj/kern/kernel.asm	/^f0102d9d:	f0 $/;"	l
f0102d9e	obj/kern/kernel.asm	/^f0102d9e:	c7 44 24 04 29 01 00 	movl   $0x129,0x4(%esp)$/;"	l
f0102da5	obj/kern/kernel.asm	/^f0102da5:	00 $/;"	l
f0102da6	obj/kern/kernel.asm	/^f0102da6:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102dad	obj/kern/kernel.asm	/^f0102dad:	e8 8e d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102db2	obj/kern/kernel.asm	/^f0102db2:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102db9	obj/kern/kernel.asm	/^f0102db9:	00 $/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102dc0	obj/kern/kernel.asm	/^f0102dc0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102dc3	obj/kern/kernel.asm	/^f0102dc3:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102dc8	obj/kern/kernel.asm	/^f0102dc8:	89 f2                	mov    %esi,%edx$/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	e8 10 e9 ff ff       	call   f01016e4 <boot_map_region>$/;"	l
f0102dd4	obj/kern/kernel.asm	/^f0102dd4:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102dda	obj/kern/kernel.asm	/^f0102dda:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102de0	obj/kern/kernel.asm	/^f0102de0:	81 fe 00 80 b7 ef    	cmp    $0xefb78000,%esi$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	75 99                	jne    f0102d81 <mem_init+0x148d>$/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	8b 35 8c 8e 1d f0    	mov    0xf01d8e8c,%esi$/;"	l
f0102dee	obj/kern/kernel.asm	/^f0102dee:	a1 88 8e 1d f0       	mov    0xf01d8e88,%eax$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	8d 3c c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%edi$/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0102e00	obj/kern/kernel.asm	/^f0102e00:	74 79                	je     f0102e7b <mem_init+0x1587>$/;"	l
f0102e02	obj/kern/kernel.asm	/^f0102e02:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102e0d	obj/kern/kernel.asm	/^f0102e0d:	89 f0                	mov    %esi,%eax$/;"	l
f0102e0f	obj/kern/kernel.asm	/^f0102e0f:	e8 95 e1 ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	8b 15 90 8e 1d f0    	mov    0xf01d8e90,%edx$/;"	l
f0102e1a	obj/kern/kernel.asm	/^f0102e1a:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	77 20                	ja     f0102e42 <mem_init+0x154e>$/;"	l
f0102e22	obj/kern/kernel.asm	/^f0102e22:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	f0 $/;"	l
f0102e2e	obj/kern/kernel.asm	/^f0102e2e:	c7 44 24 04 43 03 00 	movl   $0x343,0x4(%esp)$/;"	l
f0102e35	obj/kern/kernel.asm	/^f0102e35:	00 $/;"	l
f0102e36	obj/kern/kernel.asm	/^f0102e36:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102e3d	obj/kern/kernel.asm	/^f0102e3d:	e8 fe d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	8d 94 1a 00 00 00 10 	lea    0x10000000(%edx,%ebx,1),%edx$/;"	l
f0102e49	obj/kern/kernel.asm	/^f0102e49:	39 d0                	cmp    %edx,%eax$/;"	l
f0102e4b	obj/kern/kernel.asm	/^f0102e4b:	74 24                	je     f0102e71 <mem_init+0x157d>$/;"	l
f0102e4d	obj/kern/kernel.asm	/^f0102e4d:	c7 44 24 0c a0 7f 10 	movl   $0xf0107fa0,0xc(%esp)$/;"	l
f0102e54	obj/kern/kernel.asm	/^f0102e54:	f0 $/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	f0 $/;"	l
f0102e5d	obj/kern/kernel.asm	/^f0102e5d:	c7 44 24 04 43 03 00 	movl   $0x343,0x4(%esp)$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	00 $/;"	l
f0102e65	obj/kern/kernel.asm	/^f0102e65:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	e8 cf d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	39 df                	cmp    %ebx,%edi$/;"	l
f0102e79	obj/kern/kernel.asm	/^f0102e79:	77 8c                	ja     f0102e07 <mem_init+0x1513>$/;"	l
f0102e7b	obj/kern/kernel.asm	/^f0102e7b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102e80	obj/kern/kernel.asm	/^f0102e80:	8d 93 00 00 c0 ee    	lea    -0x11400000(%ebx),%edx$/;"	l
f0102e86	obj/kern/kernel.asm	/^f0102e86:	89 f0                	mov    %esi,%eax$/;"	l
f0102e88	obj/kern/kernel.asm	/^f0102e88:	e8 1c e1 ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	8b 15 3c 82 1d f0    	mov    0xf01d823c,%edx$/;"	l
f0102e93	obj/kern/kernel.asm	/^f0102e93:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0102e99	obj/kern/kernel.asm	/^f0102e99:	77 20                	ja     f0102ebb <mem_init+0x15c7>$/;"	l
f0102e9b	obj/kern/kernel.asm	/^f0102e9b:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0102ea6	obj/kern/kernel.asm	/^f0102ea6:	f0 $/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	c7 44 24 04 48 03 00 	movl   $0x348,0x4(%esp)$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	00 $/;"	l
f0102eaf	obj/kern/kernel.asm	/^f0102eaf:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102eb6	obj/kern/kernel.asm	/^f0102eb6:	e8 85 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	8d 94 1a 00 00 00 10 	lea    0x10000000(%edx,%ebx,1),%edx$/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	39 d0                	cmp    %edx,%eax$/;"	l
f0102ec4	obj/kern/kernel.asm	/^f0102ec4:	74 24                	je     f0102eea <mem_init+0x15f6>$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	c7 44 24 0c d4 7f 10 	movl   $0xf0107fd4,0xc(%esp)$/;"	l
f0102ecd	obj/kern/kernel.asm	/^f0102ecd:	f0 $/;"	l
f0102ece	obj/kern/kernel.asm	/^f0102ece:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102ed5	obj/kern/kernel.asm	/^f0102ed5:	f0 $/;"	l
f0102ed6	obj/kern/kernel.asm	/^f0102ed6:	c7 44 24 04 48 03 00 	movl   $0x348,0x4(%esp)$/;"	l
f0102edd	obj/kern/kernel.asm	/^f0102edd:	00 $/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102ee5	obj/kern/kernel.asm	/^f0102ee5:	e8 56 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102eea	obj/kern/kernel.asm	/^f0102eea:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ef0	obj/kern/kernel.asm	/^f0102ef0:	81 fb 00 10 02 00    	cmp    $0x21000,%ebx$/;"	l
f0102ef6	obj/kern/kernel.asm	/^f0102ef6:	75 88                	jne    f0102e80 <mem_init+0x158c>$/;"	l
f0102ef8	obj/kern/kernel.asm	/^f0102ef8:	a1 88 8e 1d f0       	mov    0xf01d8e88,%eax$/;"	l
f0102efd	obj/kern/kernel.asm	/^f0102efd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102f00	obj/kern/kernel.asm	/^f0102f00:	85 c0                	test   %eax,%eax$/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	74 4c                	je     f0102f50 <mem_init+0x165c>$/;"	l
f0102f04	obj/kern/kernel.asm	/^f0102f04:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102f09	obj/kern/kernel.asm	/^f0102f09:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	89 f0                	mov    %esi,%eax$/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	e8 93 e0 ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	74 24                	je     f0102f3e <mem_init+0x164a>$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	c7 44 24 0c 08 80 10 	movl   $0xf0108008,0xc(%esp)$/;"	l
f0102f21	obj/kern/kernel.asm	/^f0102f21:	f0 $/;"	l
f0102f22	obj/kern/kernel.asm	/^f0102f22:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102f29	obj/kern/kernel.asm	/^f0102f29:	f0 $/;"	l
f0102f2a	obj/kern/kernel.asm	/^f0102f2a:	c7 44 24 04 4c 03 00 	movl   $0x34c,0x4(%esp)$/;"	l
f0102f31	obj/kern/kernel.asm	/^f0102f31:	00 $/;"	l
f0102f32	obj/kern/kernel.asm	/^f0102f32:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	e8 02 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	a1 88 8e 1d f0       	mov    0xf01d8e88,%eax$/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102f4c	obj/kern/kernel.asm	/^f0102f4c:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	72 b9                	jb     f0102f09 <mem_init+0x1615>$/;"	l
f0102f50	obj/kern/kernel.asm	/^f0102f50:	bb 00 00 00 fe       	mov    $0xfe000000,%ebx$/;"	l
f0102f55	obj/kern/kernel.asm	/^f0102f55:	89 da                	mov    %ebx,%edx$/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	89 f0                	mov    %esi,%eax$/;"	l
f0102f59	obj/kern/kernel.asm	/^f0102f59:	e8 4b e0 ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f0102f5e	obj/kern/kernel.asm	/^f0102f5e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	74 24                	je     f0102f86 <mem_init+0x1692>$/;"	l
f0102f62	obj/kern/kernel.asm	/^f0102f62:	c7 44 24 0c 40 84 10 	movl   $0xf0108440,0xc(%esp)$/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	f0 $/;"	l
f0102f6a	obj/kern/kernel.asm	/^f0102f6a:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0102f71	obj/kern/kernel.asm	/^f0102f71:	f0 $/;"	l
f0102f72	obj/kern/kernel.asm	/^f0102f72:	c7 44 24 04 50 03 00 	movl   $0x350,0x4(%esp)$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	00 $/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	e8 ba d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f86	obj/kern/kernel.asm	/^f0102f86:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f8c	obj/kern/kernel.asm	/^f0102f8c:	81 fb 00 f0 ff ff    	cmp    $0xfffff000,%ebx$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	75 c1                	jne    f0102f55 <mem_init+0x1661>$/;"	l
f0102f94	obj/kern/kernel.asm	/^f0102f94:	c7 45 d0 00 a0 1d f0 	movl   $0xf01da000,-0x30(%ebp)$/;"	l
f0102f9b	obj/kern/kernel.asm	/^f0102f9b:	bf 00 00 bf ef       	mov    $0xefbf0000,%edi$/;"	l
f0102fa0	obj/kern/kernel.asm	/^f0102fa0:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0102fa3	obj/kern/kernel.asm	/^f0102fa3:	89 da                	mov    %ebx,%edx$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0102fab	obj/kern/kernel.asm	/^f0102fab:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0102fae	obj/kern/kernel.asm	/^f0102fae:	8d 97 00 80 00 00    	lea    0x8000(%edi),%edx$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	89 f0                	mov    %esi,%eax$/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	e8 ee df ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f0102fbb	obj/kern/kernel.asm	/^f0102fbb:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f0102fc2	obj/kern/kernel.asm	/^f0102fc2:	77 20                	ja     f0102fe4 <mem_init+0x16f0>$/;"	l
f0102fc4	obj/kern/kernel.asm	/^f0102fc4:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102fc8	obj/kern/kernel.asm	/^f0102fc8:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	f0 $/;"	l
f0102fd0	obj/kern/kernel.asm	/^f0102fd0:	c7 44 24 04 58 03 00 	movl   $0x358,0x4(%esp)$/;"	l
f0102fd7	obj/kern/kernel.asm	/^f0102fd7:	00 $/;"	l
f0102fd8	obj/kern/kernel.asm	/^f0102fd8:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0102fdf	obj/kern/kernel.asm	/^f0102fdf:	e8 5c d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fe4	obj/kern/kernel.asm	/^f0102fe4:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	8d 8f 00 80 00 00    	lea    0x8000(%edi),%ecx$/;"	l
f0102fef	obj/kern/kernel.asm	/^f0102fef:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	89 7d c8             	mov    %edi,-0x38(%ebp)$/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	8b 7d cc             	mov    -0x34(%ebp),%edi$/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	8d 14 3b             	lea    (%ebx,%edi,1),%edx$/;"	l
f0102ffb	obj/kern/kernel.asm	/^f0102ffb:	39 c2                	cmp    %eax,%edx$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	74 24                	je     f0103023 <mem_init+0x172f>$/;"	l
f0102fff	obj/kern/kernel.asm	/^f0102fff:	c7 44 24 0c 30 80 10 	movl   $0xf0108030,0xc(%esp)$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	f0 $/;"	l
f0103007	obj/kern/kernel.asm	/^f0103007:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	f0 $/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	c7 44 24 04 58 03 00 	movl   $0x358,0x4(%esp)$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	00 $/;"	l
f0103017	obj/kern/kernel.asm	/^f0103017:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010301e	obj/kern/kernel.asm	/^f010301e:	e8 1d d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103029	obj/kern/kernel.asm	/^f0103029:	81 fb 00 80 00 00    	cmp    $0x8000,%ebx$/;"	l
f010302f	obj/kern/kernel.asm	/^f010302f:	0f 85 8e 05 00 00    	jne    f01035c3 <mem_init+0x1ccf>$/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	8b 7d c8             	mov    -0x38(%ebp),%edi$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	66 bb 00 00          	mov    $0x0,%bx$/;"	l
f010303c	obj/kern/kernel.asm	/^f010303c:	8d 14 1f             	lea    (%edi,%ebx,1),%edx$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	89 f0                	mov    %esi,%eax$/;"	l
f0103041	obj/kern/kernel.asm	/^f0103041:	e8 63 df ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f0103046	obj/kern/kernel.asm	/^f0103046:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	74 24                	je     f010306f <mem_init+0x177b>$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	c7 44 24 0c 78 80 10 	movl   $0xf0108078,0xc(%esp)$/;"	l
f0103052	obj/kern/kernel.asm	/^f0103052:	f0 $/;"	l
f0103053	obj/kern/kernel.asm	/^f0103053:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010305a	obj/kern/kernel.asm	/^f010305a:	f0 $/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	c7 44 24 04 5a 03 00 	movl   $0x35a,0x4(%esp)$/;"	l
f0103062	obj/kern/kernel.asm	/^f0103062:	00 $/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010306a	obj/kern/kernel.asm	/^f010306a:	e8 d1 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010306f	obj/kern/kernel.asm	/^f010306f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103075	obj/kern/kernel.asm	/^f0103075:	81 fb 00 80 00 00    	cmp    $0x8000,%ebx$/;"	l
f010307b	obj/kern/kernel.asm	/^f010307b:	75 bf                	jne    f010303c <mem_init+0x1748>$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	81 45 d0 00 80 00 00 	addl   $0x8000,-0x30(%ebp)$/;"	l
f0103084	obj/kern/kernel.asm	/^f0103084:	81 ef 00 00 01 00    	sub    $0x10000,%edi$/;"	l
f010308a	obj/kern/kernel.asm	/^f010308a:	81 ff 00 00 b7 ef    	cmp    $0xefb70000,%edi$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	0f 85 0a ff ff ff    	jne    f0102fa0 <mem_init+0x16ac>$/;"	l
f0103096	obj/kern/kernel.asm	/^f0103096:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010309b	obj/kern/kernel.asm	/^f010309b:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	83 fa 03             	cmp    $0x3,%edx$/;"	l
f01030a4	obj/kern/kernel.asm	/^f01030a4:	77 2e                	ja     f01030d4 <mem_init+0x17e0>$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	f6 04 86 01          	testb  $0x1,(%esi,%eax,4)$/;"	l
f01030aa	obj/kern/kernel.asm	/^f01030aa:	0f 85 aa 00 00 00    	jne    f010315a <mem_init+0x1866>$/;"	l
f01030b0	obj/kern/kernel.asm	/^f01030b0:	c7 44 24 0c 5b 84 10 	movl   $0xf010845b,0xc(%esp)$/;"	l
f01030b7	obj/kern/kernel.asm	/^f01030b7:	f0 $/;"	l
f01030b8	obj/kern/kernel.asm	/^f01030b8:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01030bf	obj/kern/kernel.asm	/^f01030bf:	f0 $/;"	l
f01030c0	obj/kern/kernel.asm	/^f01030c0:	c7 44 24 04 64 03 00 	movl   $0x364,0x4(%esp)$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	00 $/;"	l
f01030c8	obj/kern/kernel.asm	/^f01030c8:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	e8 6c cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	76 55                	jbe    f0103130 <mem_init+0x183c>$/;"	l
f01030db	obj/kern/kernel.asm	/^f01030db:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01030e1	obj/kern/kernel.asm	/^f01030e1:	75 24                	jne    f0103107 <mem_init+0x1813>$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	c7 44 24 0c 5b 84 10 	movl   $0xf010845b,0xc(%esp)$/;"	l
f01030ea	obj/kern/kernel.asm	/^f01030ea:	f0 $/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	f0 $/;"	l
f01030f3	obj/kern/kernel.asm	/^f01030f3:	c7 44 24 04 68 03 00 	movl   $0x368,0x4(%esp)$/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	00 $/;"	l
f01030fb	obj/kern/kernel.asm	/^f01030fb:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	e8 39 cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103107	obj/kern/kernel.asm	/^f0103107:	f6 c2 02             	test   $0x2,%dl$/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	75 4e                	jne    f010315a <mem_init+0x1866>$/;"	l
f010310c	obj/kern/kernel.asm	/^f010310c:	c7 44 24 0c 6c 84 10 	movl   $0xf010846c,0xc(%esp)$/;"	l
f0103113	obj/kern/kernel.asm	/^f0103113:	f0 $/;"	l
f0103114	obj/kern/kernel.asm	/^f0103114:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010311b	obj/kern/kernel.asm	/^f010311b:	f0 $/;"	l
f010311c	obj/kern/kernel.asm	/^f010311c:	c7 44 24 04 69 03 00 	movl   $0x369,0x4(%esp)$/;"	l
f0103123	obj/kern/kernel.asm	/^f0103123:	00 $/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	e8 10 cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103130	obj/kern/kernel.asm	/^f0103130:	83 3c 86 00          	cmpl   $0x0,(%esi,%eax,4)$/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	74 24                	je     f010315a <mem_init+0x1866>$/;"	l
f0103136	obj/kern/kernel.asm	/^f0103136:	c7 44 24 0c 7d 84 10 	movl   $0xf010847d,0xc(%esp)$/;"	l
f010313d	obj/kern/kernel.asm	/^f010313d:	f0 $/;"	l
f010313e	obj/kern/kernel.asm	/^f010313e:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	f0 $/;"	l
f0103146	obj/kern/kernel.asm	/^f0103146:	c7 44 24 04 6b 03 00 	movl   $0x36b,0x4(%esp)$/;"	l
f010314d	obj/kern/kernel.asm	/^f010314d:	00 $/;"	l
f010314e	obj/kern/kernel.asm	/^f010314e:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0103155	obj/kern/kernel.asm	/^f0103155:	e8 e6 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010315a	obj/kern/kernel.asm	/^f010315a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162:	0f 85 33 ff ff ff    	jne    f010309b <mem_init+0x17a7>$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	c7 04 24 9c 80 10 f0 	movl   $0xf010809c,(%esp)$/;"	l
f010316f	obj/kern/kernel.asm	/^f010316f:	e8 26 0f 00 00       	call   f010409a <cprintf>$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	77 20                	ja     f01031a0 <mem_init+0x18ac>$/;"	l
f0103180	obj/kern/kernel.asm	/^f0103180:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103184	obj/kern/kernel.asm	/^f0103184:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	f0 $/;"	l
f010318c	obj/kern/kernel.asm	/^f010318c:	c7 44 24 04 f3 00 00 	movl   $0xf3,0x4(%esp)$/;"	l
f0103193	obj/kern/kernel.asm	/^f0103193:	00 $/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	e8 a0 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01031a5	obj/kern/kernel.asm	/^f01031a5:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01031ad	obj/kern/kernel.asm	/^f01031ad:	e8 68 de ff ff       	call   f010101a <check_page_free_list>$/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	0f 20 e0             	mov    %cr4,%eax$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	83 c8 10             	or     $0x10,%eax$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	0f 22 e0             	mov    %eax,%cr4$/;"	l
f01031bb	obj/kern/kernel.asm	/^f01031bb:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f01031c6	obj/kern/kernel.asm	/^f01031c6:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01031c9	obj/kern/kernel.asm	/^f01031c9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	e8 a6 e2 ff ff       	call   f010147b <page_alloc>$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	89 c6                	mov    %eax,%esi$/;"	l
f01031d7	obj/kern/kernel.asm	/^f01031d7:	85 c0                	test   %eax,%eax$/;"	l
f01031d9	obj/kern/kernel.asm	/^f01031d9:	75 24                	jne    f01031ff <mem_init+0x190b>$/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	c7 44 24 0c 7f 82 10 	movl   $0xf010827f,0xc(%esp)$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	f0 $/;"	l
f01031e3	obj/kern/kernel.asm	/^f01031e3:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	f0 $/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	c7 44 24 04 21 04 00 	movl   $0x421,0x4(%esp)$/;"	l
f01031f2	obj/kern/kernel.asm	/^f01031f2:	00 $/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01031fa	obj/kern/kernel.asm	/^f01031fa:	e8 41 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103206	obj/kern/kernel.asm	/^f0103206:	e8 70 e2 ff ff       	call   f010147b <page_alloc>$/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	89 c7                	mov    %eax,%edi$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	85 c0                	test   %eax,%eax$/;"	l
f010320f	obj/kern/kernel.asm	/^f010320f:	75 24                	jne    f0103235 <mem_init+0x1941>$/;"	l
f0103211	obj/kern/kernel.asm	/^f0103211:	c7 44 24 0c 95 82 10 	movl   $0xf0108295,0xc(%esp)$/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	f0 $/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0103220	obj/kern/kernel.asm	/^f0103220:	f0 $/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	c7 44 24 04 22 04 00 	movl   $0x422,0x4(%esp)$/;"	l
f0103228	obj/kern/kernel.asm	/^f0103228:	00 $/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0103230	obj/kern/kernel.asm	/^f0103230:	e8 0b ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010323c	obj/kern/kernel.asm	/^f010323c:	e8 3a e2 ff ff       	call   f010147b <page_alloc>$/;"	l
f0103241	obj/kern/kernel.asm	/^f0103241:	89 c3                	mov    %eax,%ebx$/;"	l
f0103243	obj/kern/kernel.asm	/^f0103243:	85 c0                	test   %eax,%eax$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	75 24                	jne    f010326b <mem_init+0x1977>$/;"	l
f0103247	obj/kern/kernel.asm	/^f0103247:	c7 44 24 0c ab 82 10 	movl   $0xf01082ab,0xc(%esp)$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	f0 $/;"	l
f010324f	obj/kern/kernel.asm	/^f010324f:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	f0 $/;"	l
f0103257	obj/kern/kernel.asm	/^f0103257:	c7 44 24 04 23 04 00 	movl   $0x423,0x4(%esp)$/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	00 $/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0103266	obj/kern/kernel.asm	/^f0103266:	e8 d5 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010326b	obj/kern/kernel.asm	/^f010326b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010326e	obj/kern/kernel.asm	/^f010326e:	e8 89 e2 ff ff       	call   f01014fc <page_free>$/;"	l
f0103273	obj/kern/kernel.asm	/^f0103273:	89 f8                	mov    %edi,%eax$/;"	l
f0103275	obj/kern/kernel.asm	/^f0103275:	2b 05 90 8e 1d f0    	sub    0xf01d8e90,%eax$/;"	l
f010327b	obj/kern/kernel.asm	/^f010327b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010327e	obj/kern/kernel.asm	/^f010327e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103281	obj/kern/kernel.asm	/^f0103281:	89 c2                	mov    %eax,%edx$/;"	l
f0103283	obj/kern/kernel.asm	/^f0103283:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103286	obj/kern/kernel.asm	/^f0103286:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c:	72 20                	jb     f01032ae <mem_init+0x19ba>$/;"	l
f010328e	obj/kern/kernel.asm	/^f010328e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	f0 $/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	00 $/;"	l
f01032a2	obj/kern/kernel.asm	/^f01032a2:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f01032a9	obj/kern/kernel.asm	/^f01032a9:	e8 92 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032ae	obj/kern/kernel.asm	/^f01032ae:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01032b5	obj/kern/kernel.asm	/^f01032b5:	00 $/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	00 $/;"	l
f01032be	obj/kern/kernel.asm	/^f01032be:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01032c3	obj/kern/kernel.asm	/^f01032c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	e8 e6 32 00 00       	call   f01065b1 <memset>$/;"	l
f01032cb	obj/kern/kernel.asm	/^f01032cb:	89 d8                	mov    %ebx,%eax$/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	2b 05 90 8e 1d f0    	sub    0xf01d8e90,%eax$/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01032d6	obj/kern/kernel.asm	/^f01032d6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01032d9	obj/kern/kernel.asm	/^f01032d9:	89 c2                	mov    %eax,%edx$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01032de	obj/kern/kernel.asm	/^f01032de:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f01032e4	obj/kern/kernel.asm	/^f01032e4:	72 20                	jb     f0103306 <mem_init+0x1a12>$/;"	l
f01032e6	obj/kern/kernel.asm	/^f01032e6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	f0 $/;"	l
f01032f2	obj/kern/kernel.asm	/^f01032f2:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	00 $/;"	l
f01032fa	obj/kern/kernel.asm	/^f01032fa:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	e8 3a cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103306	obj/kern/kernel.asm	/^f0103306:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010330d	obj/kern/kernel.asm	/^f010330d:	00 $/;"	l
f010330e	obj/kern/kernel.asm	/^f010330e:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	00 $/;"	l
f0103316	obj/kern/kernel.asm	/^f0103316:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010331b	obj/kern/kernel.asm	/^f010331b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010331e	obj/kern/kernel.asm	/^f010331e:	e8 8e 32 00 00       	call   f01065b1 <memset>$/;"	l
f0103323	obj/kern/kernel.asm	/^f0103323:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010332a	obj/kern/kernel.asm	/^f010332a:	00 $/;"	l
f010332b	obj/kern/kernel.asm	/^f010332b:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	00 $/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f010333c	obj/kern/kernel.asm	/^f010333c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010333f	obj/kern/kernel.asm	/^f010333f:	e8 08 e5 ff ff       	call   f010184c <page_insert>$/;"	l
f0103344	obj/kern/kernel.asm	/^f0103344:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0103349	obj/kern/kernel.asm	/^f0103349:	74 24                	je     f010336f <mem_init+0x1a7b>$/;"	l
f010334b	obj/kern/kernel.asm	/^f010334b:	c7 44 24 0c 7c 83 10 	movl   $0xf010837c,0xc(%esp)$/;"	l
f0103352	obj/kern/kernel.asm	/^f0103352:	f0 $/;"	l
f0103353	obj/kern/kernel.asm	/^f0103353:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010335a	obj/kern/kernel.asm	/^f010335a:	f0 $/;"	l
f010335b	obj/kern/kernel.asm	/^f010335b:	c7 44 24 04 28 04 00 	movl   $0x428,0x4(%esp)$/;"	l
f0103362	obj/kern/kernel.asm	/^f0103362:	00 $/;"	l
f0103363	obj/kern/kernel.asm	/^f0103363:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	e8 d1 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0103376	obj/kern/kernel.asm	/^f0103376:	01 01 01 $/;"	l
f0103379	obj/kern/kernel.asm	/^f0103379:	74 24                	je     f010339f <mem_init+0x1aab>$/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	c7 44 24 0c bc 80 10 	movl   $0xf01080bc,0xc(%esp)$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	f0 $/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010338a	obj/kern/kernel.asm	/^f010338a:	f0 $/;"	l
f010338b	obj/kern/kernel.asm	/^f010338b:	c7 44 24 04 29 04 00 	movl   $0x429,0x4(%esp)$/;"	l
f0103392	obj/kern/kernel.asm	/^f0103392:	00 $/;"	l
f0103393	obj/kern/kernel.asm	/^f0103393:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	e8 a1 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01033a6	obj/kern/kernel.asm	/^f01033a6:	00 $/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	00 $/;"	l
f01033af	obj/kern/kernel.asm	/^f01033af:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01033b3	obj/kern/kernel.asm	/^f01033b3:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033bb	obj/kern/kernel.asm	/^f01033bb:	e8 8c e4 ff ff       	call   f010184c <page_insert>$/;"	l
f01033c0	obj/kern/kernel.asm	/^f01033c0:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01033c7	obj/kern/kernel.asm	/^f01033c7:	02 02 02 $/;"	l
f01033ca	obj/kern/kernel.asm	/^f01033ca:	74 24                	je     f01033f0 <mem_init+0x1afc>$/;"	l
f01033cc	obj/kern/kernel.asm	/^f01033cc:	c7 44 24 0c e0 80 10 	movl   $0xf01080e0,0xc(%esp)$/;"	l
f01033d3	obj/kern/kernel.asm	/^f01033d3:	f0 $/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01033db	obj/kern/kernel.asm	/^f01033db:	f0 $/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
f01033e3	obj/kern/kernel.asm	/^f01033e3:	00 $/;"	l
f01033e4	obj/kern/kernel.asm	/^f01033e4:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01033eb	obj/kern/kernel.asm	/^f01033eb:	e8 50 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033f0	obj/kern/kernel.asm	/^f01033f0:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01033f5	obj/kern/kernel.asm	/^f01033f5:	74 24                	je     f010341b <mem_init+0x1b27>$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	c7 44 24 0c 9e 83 10 	movl   $0xf010839e,0xc(%esp)$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	f0 $/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0103406	obj/kern/kernel.asm	/^f0103406:	f0 $/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	c7 44 24 04 2c 04 00 	movl   $0x42c,0x4(%esp)$/;"	l
f010340e	obj/kern/kernel.asm	/^f010340e:	00 $/;"	l
f010340f	obj/kern/kernel.asm	/^f010340f:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0103416	obj/kern/kernel.asm	/^f0103416:	e8 25 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	74 24                	je     f0103446 <mem_init+0x1b52>$/;"	l
f0103422	obj/kern/kernel.asm	/^f0103422:	c7 44 24 0c e7 83 10 	movl   $0xf01083e7,0xc(%esp)$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	f0 $/;"	l
f010342a	obj/kern/kernel.asm	/^f010342a:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	f0 $/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	c7 44 24 04 2d 04 00 	movl   $0x42d,0x4(%esp)$/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	00 $/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	e8 fa cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103446	obj/kern/kernel.asm	/^f0103446:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f010344d	obj/kern/kernel.asm	/^f010344d:	03 03 03 $/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	89 d8                	mov    %ebx,%eax$/;"	l
f0103452	obj/kern/kernel.asm	/^f0103452:	2b 05 90 8e 1d f0    	sub    0xf01d8e90,%eax$/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010345b	obj/kern/kernel.asm	/^f010345b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010345e	obj/kern/kernel.asm	/^f010345e:	89 c2                	mov    %eax,%edx$/;"	l
f0103460	obj/kern/kernel.asm	/^f0103460:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103463	obj/kern/kernel.asm	/^f0103463:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	72 20                	jb     f010348b <mem_init+0x1b97>$/;"	l
f010346b	obj/kern/kernel.asm	/^f010346b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010346f	obj/kern/kernel.asm	/^f010346f:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	f0 $/;"	l
f0103477	obj/kern/kernel.asm	/^f0103477:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	00 $/;"	l
f010347f	obj/kern/kernel.asm	/^f010347f:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f0103486	obj/kern/kernel.asm	/^f0103486:	e8 b5 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010348b	obj/kern/kernel.asm	/^f010348b:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0103492	obj/kern/kernel.asm	/^f0103492:	03 03 03 $/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	74 24                	je     f01034bb <mem_init+0x1bc7>$/;"	l
f0103497	obj/kern/kernel.asm	/^f0103497:	c7 44 24 0c 04 81 10 	movl   $0xf0108104,0xc(%esp)$/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	f0 $/;"	l
f010349f	obj/kern/kernel.asm	/^f010349f:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	f0 $/;"	l
f01034a7	obj/kern/kernel.asm	/^f01034a7:	c7 44 24 04 2f 04 00 	movl   $0x42f,0x4(%esp)$/;"	l
f01034ae	obj/kern/kernel.asm	/^f01034ae:	00 $/;"	l
f01034af	obj/kern/kernel.asm	/^f01034af:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	e8 85 cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034bb	obj/kern/kernel.asm	/^f01034bb:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	00 $/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01034c8	obj/kern/kernel.asm	/^f01034c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	e8 25 e3 ff ff       	call   f01017f5 <page_remove>$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01034d5	obj/kern/kernel.asm	/^f01034d5:	74 24                	je     f01034fb <mem_init+0x1c07>$/;"	l
f01034d7	obj/kern/kernel.asm	/^f01034d7:	c7 44 24 0c d6 83 10 	movl   $0xf01083d6,0xc(%esp)$/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	f0 $/;"	l
f01034df	obj/kern/kernel.asm	/^f01034df:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	f0 $/;"	l
f01034e7	obj/kern/kernel.asm	/^f01034e7:	c7 44 24 04 31 04 00 	movl   $0x431,0x4(%esp)$/;"	l
f01034ee	obj/kern/kernel.asm	/^f01034ee:	00 $/;"	l
f01034ef	obj/kern/kernel.asm	/^f01034ef:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	e8 45 cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103502	obj/kern/kernel.asm	/^f0103502:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	89 f2                	mov    %esi,%edx$/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	2b 15 90 8e 1d f0    	sub    0xf01d8e90,%edx$/;"	l
f0103510	obj/kern/kernel.asm	/^f0103510:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103516	obj/kern/kernel.asm	/^f0103516:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103518	obj/kern/kernel.asm	/^f0103518:	74 24                	je     f010353e <mem_init+0x1c4a>$/;"	l
f010351a	obj/kern/kernel.asm	/^f010351a:	c7 44 24 0c 8c 7c 10 	movl   $0xf0107c8c,0xc(%esp)$/;"	l
f0103521	obj/kern/kernel.asm	/^f0103521:	f0 $/;"	l
f0103522	obj/kern/kernel.asm	/^f0103522:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0103529	obj/kern/kernel.asm	/^f0103529:	f0 $/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	c7 44 24 04 34 04 00 	movl   $0x434,0x4(%esp)$/;"	l
f0103531	obj/kern/kernel.asm	/^f0103531:	00 $/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f0103539	obj/kern/kernel.asm	/^f0103539:	e8 02 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010353e	obj/kern/kernel.asm	/^f010353e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103549	obj/kern/kernel.asm	/^f0103549:	74 24                	je     f010356f <mem_init+0x1c7b>$/;"	l
f010354b	obj/kern/kernel.asm	/^f010354b:	c7 44 24 0c 8d 83 10 	movl   $0xf010838d,0xc(%esp)$/;"	l
f0103552	obj/kern/kernel.asm	/^f0103552:	f0 $/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f010355a	obj/kern/kernel.asm	/^f010355a:	f0 $/;"	l
f010355b	obj/kern/kernel.asm	/^f010355b:	c7 44 24 04 36 04 00 	movl   $0x436,0x4(%esp)$/;"	l
f0103562	obj/kern/kernel.asm	/^f0103562:	00 $/;"	l
f0103563	obj/kern/kernel.asm	/^f0103563:	c7 04 24 91 81 10 f0 	movl   $0xf0108191,(%esp)$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	e8 d1 ca ff ff       	call   f0100040 <_panic>$/;"	l
f010356f	obj/kern/kernel.asm	/^f010356f:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103578	obj/kern/kernel.asm	/^f0103578:	e8 7f df ff ff       	call   f01014fc <page_free>$/;"	l
f010357d	obj/kern/kernel.asm	/^f010357d:	c7 04 24 30 81 10 f0 	movl   $0xf0108130,(%esp)$/;"	l
f0103584	obj/kern/kernel.asm	/^f0103584:	e8 11 0b 00 00       	call   f010409a <cprintf>$/;"	l
f0103589	obj/kern/kernel.asm	/^f0103589:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f010358c	obj/kern/kernel.asm	/^f010358c:	5b                   	pop    %ebx$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	5e                   	pop    %esi$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	5f                   	pop    %edi$/;"	l
f010358f	obj/kern/kernel.asm	/^f010358f:	5d                   	pop    %ebp$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	c3                   	ret    $/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103598	obj/kern/kernel.asm	/^f0103598:	00 $/;"	l
f0103599	obj/kern/kernel.asm	/^f0103599:	c7 04 24 00 a0 1d 00 	movl   $0x1da000,(%esp)$/;"	l
f01035a0	obj/kern/kernel.asm	/^f01035a0:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f01035a5	obj/kern/kernel.asm	/^f01035a5:	ba 00 80 bf ef       	mov    $0xefbf8000,%edx$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	e8 30 e1 ff ff       	call   f01016e4 <boot_map_region>$/;"	l
f01035b4	obj/kern/kernel.asm	/^f01035b4:	bb 00 20 1e f0       	mov    $0xf01e2000,%ebx$/;"	l
f01035b9	obj/kern/kernel.asm	/^f01035b9:	be 00 80 be ef       	mov    $0xefbe8000,%esi$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	e9 be f7 ff ff       	jmp    f0102d81 <mem_init+0x148d>$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	01 da                	add    %ebx,%edx$/;"	l
f01035c8	obj/kern/kernel.asm	/^f01035c8:	89 f0                	mov    %esi,%eax$/;"	l
f01035ca	obj/kern/kernel.asm	/^f01035ca:	e8 da d9 ff ff       	call   f0100fa9 <check_va2pa>$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	e9 24 fa ff ff       	jmp    f0102ff8 <mem_init+0x1704>$/;"	l
f01035d4	obj/kern/kernel.asm	/^f01035d4 <user_mem_check>:$/;"	l
f01035d4	obj/kern/kernel.asm	/^f01035d4:	55                   	push   %ebp$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	57                   	push   %edi$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	56                   	push   %esi$/;"	l
f01035d9	obj/kern/kernel.asm	/^f01035d9:	53                   	push   %ebx$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01035e0	obj/kern/kernel.asm	/^f01035e0:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	01 d8                	add    %ebx,%eax$/;"	l
f01035e8	obj/kern/kernel.asm	/^f01035e8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	83 cf 01             	or     $0x1,%edi$/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	73 65                	jae    f0103660 <user_mem_check+0x8c>$/;"	l
f01035fb	obj/kern/kernel.asm	/^f01035fb:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103601	obj/kern/kernel.asm	/^f0103601:	76 17                	jbe    f010361a <user_mem_check+0x46>$/;"	l
f0103603	obj/kern/kernel.asm	/^f0103603:	eb 08                	jmp    f010360d <user_mem_check+0x39>$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f010360b	obj/kern/kernel.asm	/^f010360b:	76 0d                	jbe    f010361a <user_mem_check+0x46>$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	89 1d 2c 82 1d f0    	mov    %ebx,0xf01d822c$/;"	l
f0103613	obj/kern/kernel.asm	/^f0103613:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103618	obj/kern/kernel.asm	/^f0103618:	eb 46                	jmp    f0103660 <user_mem_check+0x8c>$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	00 $/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103629	obj/kern/kernel.asm	/^f0103629:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010362c	obj/kern/kernel.asm	/^f010362c:	e8 03 df ff ff       	call   f0101534 <pgdir_walk>$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	85 c0                	test   %eax,%eax$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	74 08                	je     f010363d <user_mem_check+0x69>$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	8b 00                	mov    (%eax),%eax$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	21 f8                	and    %edi,%eax$/;"	l
f0103639	obj/kern/kernel.asm	/^f0103639:	39 c7                	cmp    %eax,%edi$/;"	l
f010363b	obj/kern/kernel.asm	/^f010363b:	74 0d                	je     f010364a <user_mem_check+0x76>$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	89 1d 2c 82 1d f0    	mov    %ebx,0xf01d822c$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103648	obj/kern/kernel.asm	/^f0103648:	eb 16                	jmp    f0103660 <user_mem_check+0x8c>$/;"	l
f010364a	obj/kern/kernel.asm	/^f010364a:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103650	obj/kern/kernel.asm	/^f0103650:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103656	obj/kern/kernel.asm	/^f0103656:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f0103659	obj/kern/kernel.asm	/^f0103659:	77 aa                	ja     f0103605 <user_mem_check+0x31>$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103660	obj/kern/kernel.asm	/^f0103660:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	5b                   	pop    %ebx$/;"	l
f0103664	obj/kern/kernel.asm	/^f0103664:	5e                   	pop    %esi$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	5f                   	pop    %edi$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	5d                   	pop    %ebp$/;"	l
f0103667	obj/kern/kernel.asm	/^f0103667:	c3                   	ret    $/;"	l
f0103668	obj/kern/kernel.asm	/^f0103668 <user_mem_assert>:$/;"	l
f0103668	obj/kern/kernel.asm	/^f0103668:	55                   	push   %ebp$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	89 e5                	mov    %esp,%ebp$/;"	l
f010366b	obj/kern/kernel.asm	/^f010366b:	53                   	push   %ebx$/;"	l
f010366c	obj/kern/kernel.asm	/^f010366c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103672	obj/kern/kernel.asm	/^f0103672:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675:	83 c8 04             	or     $0x4,%eax$/;"	l
f0103678	obj/kern/kernel.asm	/^f0103678:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010367c	obj/kern/kernel.asm	/^f010367c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010367f	obj/kern/kernel.asm	/^f010367f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103683	obj/kern/kernel.asm	/^f0103683:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103686	obj/kern/kernel.asm	/^f0103686:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010368a	obj/kern/kernel.asm	/^f010368a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010368d	obj/kern/kernel.asm	/^f010368d:	e8 42 ff ff ff       	call   f01035d4 <user_mem_check>$/;"	l
f0103692	obj/kern/kernel.asm	/^f0103692:	85 c0                	test   %eax,%eax$/;"	l
f0103694	obj/kern/kernel.asm	/^f0103694:	79 24                	jns    f01036ba <user_mem_assert+0x52>$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	a1 2c 82 1d f0       	mov    0xf01d822c,%eax$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010369f	obj/kern/kernel.asm	/^f010369f:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01036a6	obj/kern/kernel.asm	/^f01036a6:	c7 04 24 5c 81 10 f0 	movl   $0xf010815c,(%esp)$/;"	l
f01036ad	obj/kern/kernel.asm	/^f01036ad:	e8 e8 09 00 00       	call   f010409a <cprintf>$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01036b5	obj/kern/kernel.asm	/^f01036b5:	e8 f2 06 00 00       	call   f0103dac <env_destroy>$/;"	l
f01036ba	obj/kern/kernel.asm	/^f01036ba:	83 c4 14             	add    $0x14,%esp$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	5b                   	pop    %ebx$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	5d                   	pop    %ebp$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	c3                   	ret    $/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0 <region_alloc>:$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	55                   	push   %ebp$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01036c3	obj/kern/kernel.asm	/^f01036c3:	57                   	push   %edi$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	56                   	push   %esi$/;"	l
f01036c5	obj/kern/kernel.asm	/^f01036c5:	53                   	push   %ebx$/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	89 c6                	mov    %eax,%esi$/;"	l
f01036cb	obj/kern/kernel.asm	/^f01036cb:	8d b9 ff 0f 00 00    	lea    0xfff(%ecx),%edi$/;"	l
f01036d1	obj/kern/kernel.asm	/^f01036d1:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	0f 84 88 00 00 00    	je     f0103765 <region_alloc+0xa5>$/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	89 d3                	mov    %edx,%ebx$/;"	l
f01036df	obj/kern/kernel.asm	/^f01036df:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	e8 8a dd ff ff       	call   f010147b <page_alloc>$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	85 c0                	test   %eax,%eax$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	75 1c                	jne    f0103711 <region_alloc+0x51>$/;"	l
f01036f5	obj/kern/kernel.asm	/^f01036f5:	c7 44 24 08 8c 84 10 	movl   $0xf010848c,0x8(%esp)$/;"	l
f01036fc	obj/kern/kernel.asm	/^f01036fc:	f0 $/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	c7 44 24 04 33 01 00 	movl   $0x133,0x4(%esp)$/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704:	00 $/;"	l
f0103705	obj/kern/kernel.asm	/^f0103705:	c7 04 24 b6 84 10 f0 	movl   $0xf01084b6,(%esp)$/;"	l
f010370c	obj/kern/kernel.asm	/^f010370c:	e8 2f c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	00 $/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010371d	obj/kern/kernel.asm	/^f010371d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103721	obj/kern/kernel.asm	/^f0103721:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103724	obj/kern/kernel.asm	/^f0103724:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103727	obj/kern/kernel.asm	/^f0103727:	e8 20 e1 ff ff       	call   f010184c <page_insert>$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f010372f	obj/kern/kernel.asm	/^f010372f:	75 24                	jne    f0103755 <region_alloc+0x95>$/;"	l
f0103731	obj/kern/kernel.asm	/^f0103731:	c7 44 24 0c fc ff ff 	movl   $0xfffffffc,0xc(%esp)$/;"	l
f0103738	obj/kern/kernel.asm	/^f0103738:	ff $/;"	l
f0103739	obj/kern/kernel.asm	/^f0103739:	c7 44 24 08 c1 84 10 	movl   $0xf01084c1,0x8(%esp)$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	f0 $/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	c7 44 24 04 37 01 00 	movl   $0x137,0x4(%esp)$/;"	l
f0103748	obj/kern/kernel.asm	/^f0103748:	00 $/;"	l
f0103749	obj/kern/kernel.asm	/^f0103749:	c7 04 24 b6 84 10 f0 	movl   $0xf01084b6,(%esp)$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	e8 eb c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103755	obj/kern/kernel.asm	/^f0103755:	81 ef 00 10 00 00    	sub    $0x1000,%edi$/;"	l
f010375b	obj/kern/kernel.asm	/^f010375b:	74 08                	je     f0103765 <region_alloc+0xa5>$/;"	l
f010375d	obj/kern/kernel.asm	/^f010375d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	eb 80                	jmp    f01036e5 <region_alloc+0x25>$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	5b                   	pop    %ebx$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	5e                   	pop    %esi$/;"	l
f010376a	obj/kern/kernel.asm	/^f010376a:	5f                   	pop    %edi$/;"	l
f010376b	obj/kern/kernel.asm	/^f010376b:	5d                   	pop    %ebp$/;"	l
f010376c	obj/kern/kernel.asm	/^f010376c:	c3                   	ret    $/;"	l
f010376d	obj/kern/kernel.asm	/^f010376d <envid2env>:$/;"	l
f010376d	obj/kern/kernel.asm	/^f010376d:	55                   	push   %ebp$/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010377f	obj/kern/kernel.asm	/^f010377f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0103782	obj/kern/kernel.asm	/^f0103782:	85 c0                	test   %eax,%eax$/;"	l
f0103784	obj/kern/kernel.asm	/^f0103784:	75 17                	jne    f010379d <envid2env+0x30>$/;"	l
f0103786	obj/kern/kernel.asm	/^f0103786:	e8 b9 34 00 00       	call   f0106c44 <cpunum>$/;"	l
f010378b	obj/kern/kernel.asm	/^f010378b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010378e	obj/kern/kernel.asm	/^f010378e:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0103794	obj/kern/kernel.asm	/^f0103794:	89 06                	mov    %eax,(%esi)$/;"	l
f0103796	obj/kern/kernel.asm	/^f0103796:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010379b	obj/kern/kernel.asm	/^f010379b:	eb 6e                	jmp    f010380b <envid2env+0x9e>$/;"	l
f010379d	obj/kern/kernel.asm	/^f010379d:	89 c2                	mov    %eax,%edx$/;"	l
f010379f	obj/kern/kernel.asm	/^f010379f:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	89 d1                	mov    %edx,%ecx$/;"	l
f01037a7	obj/kern/kernel.asm	/^f01037a7:	c1 e1 07             	shl    $0x7,%ecx$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	8d 1c 91             	lea    (%ecx,%edx,4),%ebx$/;"	l
f01037ad	obj/kern/kernel.asm	/^f01037ad:	03 1d 3c 82 1d f0    	add    0xf01d823c,%ebx$/;"	l
f01037b3	obj/kern/kernel.asm	/^f01037b3:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	74 05                	je     f01037be <envid2env+0x51>$/;"	l
f01037b9	obj/kern/kernel.asm	/^f01037b9:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f01037bc	obj/kern/kernel.asm	/^f01037bc:	74 0d                	je     f01037cb <envid2env+0x5e>$/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f01037c4	obj/kern/kernel.asm	/^f01037c4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01037c9	obj/kern/kernel.asm	/^f01037c9:	eb 40                	jmp    f010380b <envid2env+0x9e>$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01037cf	obj/kern/kernel.asm	/^f01037cf:	74 33                	je     f0103804 <envid2env+0x97>$/;"	l
f01037d1	obj/kern/kernel.asm	/^f01037d1:	e8 6e 34 00 00       	call   f0106c44 <cpunum>$/;"	l
f01037d6	obj/kern/kernel.asm	/^f01037d6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037d9	obj/kern/kernel.asm	/^f01037d9:	39 98 28 90 1d f0    	cmp    %ebx,-0xfe26fd8(%eax)$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	74 23                	je     f0103804 <envid2env+0x97>$/;"	l
f01037e1	obj/kern/kernel.asm	/^f01037e1:	8b 7b 4c             	mov    0x4c(%ebx),%edi$/;"	l
f01037e4	obj/kern/kernel.asm	/^f01037e4:	e8 5b 34 00 00       	call   f0106c44 <cpunum>$/;"	l
f01037e9	obj/kern/kernel.asm	/^f01037e9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037ec	obj/kern/kernel.asm	/^f01037ec:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f01037f2	obj/kern/kernel.asm	/^f01037f2:	3b 78 48             	cmp    0x48(%eax),%edi$/;"	l
f01037f5	obj/kern/kernel.asm	/^f01037f5:	74 0d                	je     f0103804 <envid2env+0x97>$/;"	l
f01037f7	obj/kern/kernel.asm	/^f01037f7:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f01037fd	obj/kern/kernel.asm	/^f01037fd:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103802	obj/kern/kernel.asm	/^f0103802:	eb 07                	jmp    f010380b <envid2env+0x9e>$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0103806	obj/kern/kernel.asm	/^f0103806:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010380b	obj/kern/kernel.asm	/^f010380b:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f010380e	obj/kern/kernel.asm	/^f010380e:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0103814	obj/kern/kernel.asm	/^f0103814:	89 ec                	mov    %ebp,%esp$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	5d                   	pop    %ebp$/;"	l
f0103817	obj/kern/kernel.asm	/^f0103817:	c3                   	ret    $/;"	l
f0103818	obj/kern/kernel.asm	/^f0103818 <env_init_percpu>:$/;"	l
f0103818	obj/kern/kernel.asm	/^f0103818:	55                   	push   %ebp$/;"	l
f0103819	obj/kern/kernel.asm	/^f0103819:	89 e5                	mov    %esp,%ebp$/;"	l
f010381b	obj/kern/kernel.asm	/^f010381b:	b8 68 33 12 f0       	mov    $0xf0123368,%eax$/;"	l
f0103820	obj/kern/kernel.asm	/^f0103820:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	8e e8                	mov    %eax,%gs$/;"	l
f010382a	obj/kern/kernel.asm	/^f010382a:	8e e0                	mov    %eax,%fs$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	b0 10                	mov    $0x10,%al$/;"	l
f010382e	obj/kern/kernel.asm	/^f010382e:	8e c0                	mov    %eax,%es$/;"	l
f0103830	obj/kern/kernel.asm	/^f0103830:	8e d8                	mov    %eax,%ds$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	8e d0                	mov    %eax,%ss$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	ea 3b 38 10 f0 08 00 	ljmp   $0x8,$0xf010383b$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	b0 00                	mov    $0x0,%al$/;"	l
f010383d	obj/kern/kernel.asm	/^f010383d:	0f 00 d0             	lldt   %ax$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	5d                   	pop    %ebp$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	c3                   	ret    $/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842 <env_init>:$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	55                   	push   %ebp$/;"	l
f0103843	obj/kern/kernel.asm	/^f0103843:	89 e5                	mov    %esp,%ebp$/;"	l
f0103845	obj/kern/kernel.asm	/^f0103845:	53                   	push   %ebx$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	8b 1d 3c 82 1d f0    	mov    0xf01d823c,%ebx$/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c:	8d 83 7c 0f 02 00    	lea    0x20f7c(%ebx),%eax$/;"	l
f0103852	obj/kern/kernel.asm	/^f0103852:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0103857	obj/kern/kernel.asm	/^f0103857:	ba ff 03 00 00       	mov    $0x3ff,%edx$/;"	l
f010385c	obj/kern/kernel.asm	/^f010385c:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f010385f	obj/kern/kernel.asm	/^f010385f:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f010386d	obj/kern/kernel.asm	/^f010386d:	89 c1                	mov    %eax,%ecx$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0103872	obj/kern/kernel.asm	/^f0103872:	2d 84 00 00 00       	sub    $0x84,%eax$/;"	l
f0103877	obj/kern/kernel.asm	/^f0103877:	83 fa ff             	cmp    $0xffffffff,%edx$/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a:	75 e0                	jne    f010385c <env_init+0x1a>$/;"	l
f010387c	obj/kern/kernel.asm	/^f010387c:	89 1d 40 82 1d f0    	mov    %ebx,0xf01d8240$/;"	l
f0103882	obj/kern/kernel.asm	/^f0103882:	e8 91 ff ff ff       	call   f0103818 <env_init_percpu>$/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	5b                   	pop    %ebx$/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888:	5d                   	pop    %ebp$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	c3                   	ret    $/;"	l
f010388a	obj/kern/kernel.asm	/^f010388a <env_alloc>:$/;"	l
f010388a	obj/kern/kernel.asm	/^f010388a:	55                   	push   %ebp$/;"	l
f010388b	obj/kern/kernel.asm	/^f010388b:	89 e5                	mov    %esp,%ebp$/;"	l
f010388d	obj/kern/kernel.asm	/^f010388d:	56                   	push   %esi$/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	53                   	push   %ebx$/;"	l
f010388f	obj/kern/kernel.asm	/^f010388f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103892	obj/kern/kernel.asm	/^f0103892:	8b 1d 40 82 1d f0    	mov    0xf01d8240,%ebx$/;"	l
f0103898	obj/kern/kernel.asm	/^f0103898:	85 db                	test   %ebx,%ebx$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	0f 84 bd 01 00 00    	je     f0103a5d <env_alloc+0x1d3>$/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01038a7	obj/kern/kernel.asm	/^f01038a7:	e8 cf db ff ff       	call   f010147b <page_alloc>$/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	89 c6                	mov    %eax,%esi$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	85 c0                	test   %eax,%eax$/;"	l
f01038b0	obj/kern/kernel.asm	/^f01038b0:	0f 84 ae 01 00 00    	je     f0103a64 <env_alloc+0x1da>$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	2b 05 90 8e 1d f0    	sub    0xf01d8e90,%eax$/;"	l
f01038c1	obj/kern/kernel.asm	/^f01038c1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01038c4	obj/kern/kernel.asm	/^f01038c4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01038c7	obj/kern/kernel.asm	/^f01038c7:	89 c2                	mov    %eax,%edx$/;"	l
f01038c9	obj/kern/kernel.asm	/^f01038c9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	72 20                	jb     f01038f4 <env_alloc+0x6a>$/;"	l
f01038d4	obj/kern/kernel.asm	/^f01038d4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01038d8	obj/kern/kernel.asm	/^f01038d8:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f01038df	obj/kern/kernel.asm	/^f01038df:	f0 $/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	00 $/;"	l
f01038e8	obj/kern/kernel.asm	/^f01038e8:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f01038ef	obj/kern/kernel.asm	/^f01038ef:	e8 4c c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038f4	obj/kern/kernel.asm	/^f01038f4:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f01038fc	obj/kern/kernel.asm	/^f01038fc:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103903	obj/kern/kernel.asm	/^f0103903:	00 $/;"	l
f0103904	obj/kern/kernel.asm	/^f0103904:	8b 15 8c 8e 1d f0    	mov    0xf01d8e8c,%edx$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010390e	obj/kern/kernel.asm	/^f010390e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	e8 fa 2c 00 00       	call   f0106610 <memmove>$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916:	2b 35 90 8e 1d f0    	sub    0xf01d8e90,%esi$/;"	l
f010391c	obj/kern/kernel.asm	/^f010391c:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f010391f	obj/kern/kernel.asm	/^f010391f:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	89 f0                	mov    %esi,%eax$/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	3b 05 88 8e 1d f0    	cmp    0xf01d8e88,%eax$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	72 20                	jb     f010394f <env_alloc+0xc5>$/;"	l
f010392f	obj/kern/kernel.asm	/^f010392f:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103933	obj/kern/kernel.asm	/^f0103933:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f010393a	obj/kern/kernel.asm	/^f010393a:	f0 $/;"	l
f010393b	obj/kern/kernel.asm	/^f010393b:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	00 $/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f010394a	obj/kern/kernel.asm	/^f010394a:	e8 f1 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	c7 44 24 08 ec 0e 00 	movl   $0xeec,0x8(%esp)$/;"	l
f0103956	obj/kern/kernel.asm	/^f0103956:	00 $/;"	l
f0103957	obj/kern/kernel.asm	/^f0103957:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010395e	obj/kern/kernel.asm	/^f010395e:	00 $/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	e8 44 2c 00 00       	call   f01065b1 <memset>$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103970	obj/kern/kernel.asm	/^f0103970:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103975	obj/kern/kernel.asm	/^f0103975:	77 20                	ja     f0103997 <env_alloc+0x10d>$/;"	l
f0103977	obj/kern/kernel.asm	/^f0103977:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0103982	obj/kern/kernel.asm	/^f0103982:	f0 $/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	c7 44 24 04 ca 00 00 	movl   $0xca,0x4(%esp)$/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	00 $/;"	l
f010398b	obj/kern/kernel.asm	/^f010398b:	c7 04 24 b6 84 10 f0 	movl   $0xf01084b6,(%esp)$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	e8 a9 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	83 ca 05             	or     $0x5,%edx$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01039a9	obj/kern/kernel.asm	/^f01039a9:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01039b3	obj/kern/kernel.asm	/^f01039b3:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f01039bb	obj/kern/kernel.asm	/^f01039bb:	89 da                	mov    %ebx,%edx$/;"	l
f01039bd	obj/kern/kernel.asm	/^f01039bd:	2b 15 3c 82 1d f0    	sub    0xf01d823c,%edx$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01039c6	obj/kern/kernel.asm	/^f01039c6:	69 d2 e1 83 0f 3e    	imul   $0x3e0f83e1,%edx,%edx$/;"	l
f01039cc	obj/kern/kernel.asm	/^f01039cc:	09 d0                	or     %edx,%eax$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f01039d1	obj/kern/kernel.asm	/^f01039d1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01039d4	obj/kern/kernel.asm	/^f01039d4:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f01039d7	obj/kern/kernel.asm	/^f01039d7:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f01039ec	obj/kern/kernel.asm	/^f01039ec:	c7 43 7c 00 00 00 00 	movl   $0x0,0x7c(%ebx)$/;"	l
f01039f3	obj/kern/kernel.asm	/^f01039f3:	c7 83 80 00 00 00 00 	movl   $0x0,0x80(%ebx)$/;"	l
f01039fa	obj/kern/kernel.asm	/^f01039fa:	00 00 00 $/;"	l
f01039fd	obj/kern/kernel.asm	/^f01039fd:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103a04	obj/kern/kernel.asm	/^f0103a04:	00 $/;"	l
f0103a05	obj/kern/kernel.asm	/^f0103a05:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	00 $/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103a10	obj/kern/kernel.asm	/^f0103a10:	e8 9c 2b 00 00       	call   f01065b1 <memset>$/;"	l
f0103a15	obj/kern/kernel.asm	/^f0103a15:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103a2e	obj/kern/kernel.asm	/^f0103a2e:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	c7 43 68 00 00 00 00 	movl   $0x0,0x68(%ebx)$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	a3 40 82 1d f0       	mov    %eax,0xf01d8240$/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103a54	obj/kern/kernel.asm	/^f0103a54:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	eb 0c                	jmp    f0103a69 <env_alloc+0x1df>$/;"	l
f0103a5d	obj/kern/kernel.asm	/^f0103a5d:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103a62	obj/kern/kernel.asm	/^f0103a62:	eb 05                	jmp    f0103a69 <env_alloc+0x1df>$/;"	l
f0103a64	obj/kern/kernel.asm	/^f0103a64:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103a69	obj/kern/kernel.asm	/^f0103a69:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	5b                   	pop    %ebx$/;"	l
f0103a6d	obj/kern/kernel.asm	/^f0103a6d:	5e                   	pop    %esi$/;"	l
f0103a6e	obj/kern/kernel.asm	/^f0103a6e:	5d                   	pop    %ebp$/;"	l
f0103a6f	obj/kern/kernel.asm	/^f0103a6f:	c3                   	ret    $/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70 <env_create>:$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	55                   	push   %ebp$/;"	l
f0103a71	obj/kern/kernel.asm	/^f0103a71:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a73	obj/kern/kernel.asm	/^f0103a73:	57                   	push   %edi$/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	56                   	push   %esi$/;"	l
f0103a75	obj/kern/kernel.asm	/^f0103a75:	53                   	push   %ebx$/;"	l
f0103a76	obj/kern/kernel.asm	/^f0103a76:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103a79	obj/kern/kernel.asm	/^f0103a79:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103a83	obj/kern/kernel.asm	/^f0103a83:	00 $/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103a87	obj/kern/kernel.asm	/^f0103a87:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a8a	obj/kern/kernel.asm	/^f0103a8a:	e8 fb fd ff ff       	call   f010388a <env_alloc>$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	85 c0                	test   %eax,%eax$/;"	l
f0103a91	obj/kern/kernel.asm	/^f0103a91:	74 20                	je     f0103ab3 <env_create+0x43>$/;"	l
f0103a93	obj/kern/kernel.asm	/^f0103a93:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a97	obj/kern/kernel.asm	/^f0103a97:	c7 44 24 08 d2 84 10 	movl   $0xf01084d2,0x8(%esp)$/;"	l
f0103a9e	obj/kern/kernel.asm	/^f0103a9e:	f0 $/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	c7 44 24 04 a3 01 00 	movl   $0x1a3,0x4(%esp)$/;"	l
f0103aa6	obj/kern/kernel.asm	/^f0103aa6:	00 $/;"	l
f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	c7 04 24 b6 84 10 f0 	movl   $0xf01084b6,(%esp)$/;"	l
f0103aae	obj/kern/kernel.asm	/^f0103aae:	e8 8d c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ab3	obj/kern/kernel.asm	/^f0103ab3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103ab6	obj/kern/kernel.asm	/^f0103ab6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103ab9	obj/kern/kernel.asm	/^f0103ab9:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103abf	obj/kern/kernel.asm	/^f0103abf:	74 1c                	je     f0103add <env_create+0x6d>$/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	c7 44 24 08 e1 84 10 	movl   $0xf01084e1,0x8(%esp)$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	f0 $/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	c7 44 24 04 76 01 00 	movl   $0x176,0x4(%esp)$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	00 $/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	c7 04 24 b6 84 10 f0 	movl   $0xf01084b6,(%esp)$/;"	l
f0103ad8	obj/kern/kernel.asm	/^f0103ad8:	e8 63 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103add	obj/kern/kernel.asm	/^f0103add:	8b 5f 1c             	mov    0x1c(%edi),%ebx$/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103ae7	obj/kern/kernel.asm	/^f0103ae7:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103aef	obj/kern/kernel.asm	/^f0103aef:	77 20                	ja     f0103b11 <env_create+0xa1>$/;"	l
f0103af1	obj/kern/kernel.asm	/^f0103af1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	f0 $/;"	l
f0103afd	obj/kern/kernel.asm	/^f0103afd:	c7 44 24 04 7c 01 00 	movl   $0x17c,0x4(%esp)$/;"	l
f0103b04	obj/kern/kernel.asm	/^f0103b04:	00 $/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	c7 04 24 b6 84 10 f0 	movl   $0xf01084b6,(%esp)$/;"	l
f0103b0c	obj/kern/kernel.asm	/^f0103b0c:	e8 2f c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	8d 1c 1f             	lea    (%edi,%ebx,1),%ebx$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103b17	obj/kern/kernel.asm	/^f0103b17:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103b1a	obj/kern/kernel.asm	/^f0103b1a:	8d 34 33             	lea    (%ebx,%esi,1),%esi$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103b22	obj/kern/kernel.asm	/^f0103b22:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103b27	obj/kern/kernel.asm	/^f0103b27:	73 4f                	jae    f0103b78 <env_create+0x108>$/;"	l
f0103b29	obj/kern/kernel.asm	/^f0103b29:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103b2c	obj/kern/kernel.asm	/^f0103b2c:	75 43                	jne    f0103b71 <env_create+0x101>$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103b34	obj/kern/kernel.asm	/^f0103b34:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103b37	obj/kern/kernel.asm	/^f0103b37:	e8 84 fb ff ff       	call   f01036c0 <region_alloc>$/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103b3f	obj/kern/kernel.asm	/^f0103b3f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103b4a	obj/kern/kernel.asm	/^f0103b4a:	00 $/;"	l
f0103b4b	obj/kern/kernel.asm	/^f0103b4b:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	e8 5b 2a 00 00       	call   f01065b1 <memset>$/;"	l
f0103b56	obj/kern/kernel.asm	/^f0103b56:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103b59	obj/kern/kernel.asm	/^f0103b59:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103b5d	obj/kern/kernel.asm	/^f0103b5d:	89 f8                	mov    %edi,%eax$/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103b69	obj/kern/kernel.asm	/^f0103b69:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	e8 9f 2a 00 00       	call   f0106610 <memmove>$/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	39 de                	cmp    %ebx,%esi$/;"	l
f0103b76	obj/kern/kernel.asm	/^f0103b76:	77 b1                	ja     f0103b29 <env_create+0xb9>$/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103b82	obj/kern/kernel.asm	/^f0103b82:	77 20                	ja     f0103ba4 <env_create+0x134>$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b88	obj/kern/kernel.asm	/^f0103b88:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0103b8f	obj/kern/kernel.asm	/^f0103b8f:	f0 $/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	c7 44 24 04 89 01 00 	movl   $0x189,0x4(%esp)$/;"	l
f0103b97	obj/kern/kernel.asm	/^f0103b97:	00 $/;"	l
f0103b98	obj/kern/kernel.asm	/^f0103b98:	c7 04 24 b6 84 10 f0 	movl   $0xf01084b6,(%esp)$/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	e8 9c c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103ba9	obj/kern/kernel.asm	/^f0103ba9:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103baf	obj/kern/kernel.asm	/^f0103baf:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103bb2	obj/kern/kernel.asm	/^f0103bb2:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0103bb5	obj/kern/kernel.asm	/^f0103bb5:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	e8 f9 fa ff ff       	call   f01036c0 <region_alloc>$/;"	l
f0103bc7	obj/kern/kernel.asm	/^f0103bc7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f0103bd0	obj/kern/kernel.asm	/^f0103bd0:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103bd3	obj/kern/kernel.asm	/^f0103bd3:	5b                   	pop    %ebx$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	5e                   	pop    %esi$/;"	l
f0103bd5	obj/kern/kernel.asm	/^f0103bd5:	5f                   	pop    %edi$/;"	l
f0103bd6	obj/kern/kernel.asm	/^f0103bd6:	5d                   	pop    %ebp$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	c3                   	ret    $/;"	l
f0103bd8	obj/kern/kernel.asm	/^f0103bd8 <env_free>:$/;"	l
f0103bd8	obj/kern/kernel.asm	/^f0103bd8:	55                   	push   %ebp$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103bdb	obj/kern/kernel.asm	/^f0103bdb:	57                   	push   %edi$/;"	l
f0103bdc	obj/kern/kernel.asm	/^f0103bdc:	56                   	push   %esi$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	53                   	push   %ebx$/;"	l
f0103bde	obj/kern/kernel.asm	/^f0103bde:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103be1	obj/kern/kernel.asm	/^f0103be1:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103be4	obj/kern/kernel.asm	/^f0103be4:	e8 5b 30 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103be9	obj/kern/kernel.asm	/^f0103be9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103bec	obj/kern/kernel.asm	/^f0103bec:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	39 b8 28 90 1d f0    	cmp    %edi,-0xfe26fd8(%eax)$/;"	l
f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	75 3b                	jne    f0103c36 <env_free+0x5e>$/;"	l
f0103bfb	obj/kern/kernel.asm	/^f0103bfb:	a1 8c 8e 1d f0       	mov    0xf01d8e8c,%eax$/;"	l
f0103c00	obj/kern/kernel.asm	/^f0103c00:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103c05	obj/kern/kernel.asm	/^f0103c05:	77 20                	ja     f0103c27 <env_free+0x4f>$/;"	l
f0103c07	obj/kern/kernel.asm	/^f0103c07:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103c0b	obj/kern/kernel.asm	/^f0103c0b:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0103c12	obj/kern/kernel.asm	/^f0103c12:	f0 $/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	c7 44 24 04 ba 01 00 	movl   $0x1ba,0x4(%esp)$/;"	l
f0103c1a	obj/kern/kernel.asm	/^f0103c1a:	00 $/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	c7 04 24 b6 84 10 f0 	movl   $0xf01084b6,(%esp)$/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	e8 19 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103c2c	obj/kern/kernel.asm	/^f0103c2c:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103c36	obj/kern/kernel.asm	/^f0103c36:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103c39	obj/kern/kernel.asm	/^f0103c39:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103c3c	obj/kern/kernel.asm	/^f0103c3c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c42	obj/kern/kernel.asm	/^f0103c42:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f0103c48	obj/kern/kernel.asm	/^f0103c48:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	0f 84 bc 00 00 00    	je     f0103d10 <env_free+0x138>$/;"	l
f0103c54	obj/kern/kernel.asm	/^f0103c54:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	89 f0                	mov    %esi,%eax$/;"	l
f0103c5c	obj/kern/kernel.asm	/^f0103c5c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103c5f	obj/kern/kernel.asm	/^f0103c5f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103c62	obj/kern/kernel.asm	/^f0103c62:	3b 05 88 8e 1d f0    	cmp    0xf01d8e88,%eax$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	72 20                	jb     f0103c8a <env_free+0xb2>$/;"	l
f0103c6a	obj/kern/kernel.asm	/^f0103c6a:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0103c75	obj/kern/kernel.asm	/^f0103c75:	f0 $/;"	l
f0103c76	obj/kern/kernel.asm	/^f0103c76:	c7 44 24 04 c9 01 00 	movl   $0x1c9,0x4(%esp)$/;"	l
f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	00 $/;"	l
f0103c7e	obj/kern/kernel.asm	/^f0103c7e:	c7 04 24 b6 84 10 f0 	movl   $0xf01084b6,(%esp)$/;"	l
f0103c85	obj/kern/kernel.asm	/^f0103c85:	e8 b6 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c8a	obj/kern/kernel.asm	/^f0103c8a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103c8d	obj/kern/kernel.asm	/^f0103c8d:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f0103c90	obj/kern/kernel.asm	/^f0103c90:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103c93	obj/kern/kernel.asm	/^f0103c93:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103c98	obj/kern/kernel.asm	/^f0103c98:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103c9f	obj/kern/kernel.asm	/^f0103c9f:	01 $/;"	l
f0103ca0	obj/kern/kernel.asm	/^f0103ca0:	74 17                	je     f0103cb9 <env_free+0xe1>$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	89 d8                	mov    %ebx,%eax$/;"	l
f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103cae	obj/kern/kernel.asm	/^f0103cae:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	e8 3c db ff ff       	call   f01017f5 <page_remove>$/;"	l
f0103cb9	obj/kern/kernel.asm	/^f0103cb9:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103cbc	obj/kern/kernel.asm	/^f0103cbc:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	75 d4                	jne    f0103c98 <env_free+0xc0>$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103cc7	obj/kern/kernel.asm	/^f0103cc7:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103cca	obj/kern/kernel.asm	/^f0103cca:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103cd1	obj/kern/kernel.asm	/^f0103cd1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4:	3b 05 88 8e 1d f0    	cmp    0xf01d8e88,%eax$/;"	l
f0103cda	obj/kern/kernel.asm	/^f0103cda:	72 1c                	jb     f0103cf8 <env_free+0x120>$/;"	l
f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	c7 44 24 08 58 7b 10 	movl   $0xf0107b58,0x8(%esp)$/;"	l
f0103ce3	obj/kern/kernel.asm	/^f0103ce3:	f0 $/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	00 $/;"	l
f0103cec	obj/kern/kernel.asm	/^f0103cec:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	e8 48 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103cf8	obj/kern/kernel.asm	/^f0103cf8:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103cfb	obj/kern/kernel.asm	/^f0103cfb:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	03 05 90 8e 1d f0    	add    0xf01d8e90,%eax$/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	e8 01 d8 ff ff       	call   f0101511 <page_decref>$/;"	l
f0103d10	obj/kern/kernel.asm	/^f0103d10:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103d1b	obj/kern/kernel.asm	/^f0103d1b:	0f 85 15 ff ff ff    	jne    f0103c36 <env_free+0x5e>$/;"	l
f0103d21	obj/kern/kernel.asm	/^f0103d21:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103d24	obj/kern/kernel.asm	/^f0103d24:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	77 20                	ja     f0103d4b <env_free+0x173>$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0103d36	obj/kern/kernel.asm	/^f0103d36:	f0 $/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	c7 44 24 04 d7 01 00 	movl   $0x1d7,0x4(%esp)$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	00 $/;"	l
f0103d3f	obj/kern/kernel.asm	/^f0103d3f:	c7 04 24 b6 84 10 f0 	movl   $0xf01084b6,(%esp)$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	e8 f5 c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d4b	obj/kern/kernel.asm	/^f0103d4b:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103d52	obj/kern/kernel.asm	/^f0103d52:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103d57	obj/kern/kernel.asm	/^f0103d57:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103d5a	obj/kern/kernel.asm	/^f0103d5a:	3b 05 88 8e 1d f0    	cmp    0xf01d8e88,%eax$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	72 1c                	jb     f0103d7e <env_free+0x1a6>$/;"	l
f0103d62	obj/kern/kernel.asm	/^f0103d62:	c7 44 24 08 58 7b 10 	movl   $0xf0107b58,0x8(%esp)$/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	f0 $/;"	l
f0103d6a	obj/kern/kernel.asm	/^f0103d6a:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0103d71	obj/kern/kernel.asm	/^f0103d71:	00 $/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	e8 c2 c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0103d81	obj/kern/kernel.asm	/^f0103d81:	03 05 90 8e 1d f0    	add    0xf01d8e90,%eax$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d8a	obj/kern/kernel.asm	/^f0103d8a:	e8 82 d7 ff ff       	call   f0101511 <page_decref>$/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	a1 40 82 1d f0       	mov    0xf01d8240,%eax$/;"	l
f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103d9e	obj/kern/kernel.asm	/^f0103d9e:	89 3d 40 82 1d f0    	mov    %edi,0xf01d8240$/;"	l
f0103da4	obj/kern/kernel.asm	/^f0103da4:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103da7	obj/kern/kernel.asm	/^f0103da7:	5b                   	pop    %ebx$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	5e                   	pop    %esi$/;"	l
f0103da9	obj/kern/kernel.asm	/^f0103da9:	5f                   	pop    %edi$/;"	l
f0103daa	obj/kern/kernel.asm	/^f0103daa:	5d                   	pop    %ebp$/;"	l
f0103dab	obj/kern/kernel.asm	/^f0103dab:	c3                   	ret    $/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac <env_destroy>:$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	55                   	push   %ebp$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	89 e5                	mov    %esp,%ebp$/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	53                   	push   %ebx$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103db3	obj/kern/kernel.asm	/^f0103db3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103dba	obj/kern/kernel.asm	/^f0103dba:	75 19                	jne    f0103dd5 <env_destroy+0x29>$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	e8 83 2e 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103dc4	obj/kern/kernel.asm	/^f0103dc4:	39 98 28 90 1d f0    	cmp    %ebx,-0xfe26fd8(%eax)$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	74 09                	je     f0103dd5 <env_destroy+0x29>$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103dd3	obj/kern/kernel.asm	/^f0103dd3:	eb 2f                	jmp    f0103e04 <env_destroy+0x58>$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	e8 fb fd ff ff       	call   f0103bd8 <env_free>$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	e8 62 2e 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103de5	obj/kern/kernel.asm	/^f0103de5:	39 98 28 90 1d f0    	cmp    %ebx,-0xfe26fd8(%eax)$/;"	l
f0103deb	obj/kern/kernel.asm	/^f0103deb:	75 17                	jne    f0103e04 <env_destroy+0x58>$/;"	l
f0103ded	obj/kern/kernel.asm	/^f0103ded:	e8 52 2e 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	c7 80 28 90 1d f0 00 	movl   $0x0,-0xfe26fd8(%eax)$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	00 00 00 $/;"	l
f0103dff	obj/kern/kernel.asm	/^f0103dff:	e8 b0 10 00 00       	call   f0104eb4 <sched_yield>$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103e07	obj/kern/kernel.asm	/^f0103e07:	5b                   	pop    %ebx$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08:	5d                   	pop    %ebp$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	c3                   	ret    $/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a <env_pop_tf>:$/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a:	55                   	push   %ebp$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	53                   	push   %ebx$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	e8 2e 2e 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e19	obj/kern/kernel.asm	/^f0103e19:	8b 98 28 90 1d f0    	mov    -0xfe26fd8(%eax),%ebx$/;"	l
f0103e1f	obj/kern/kernel.asm	/^f0103e1f:	e8 20 2e 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103e24	obj/kern/kernel.asm	/^f0103e24:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103e27	obj/kern/kernel.asm	/^f0103e27:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	61                   	popa   $/;"	l
f0103e2b	obj/kern/kernel.asm	/^f0103e2b:	07                   	pop    %es$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c:	1f                   	pop    %ds$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	cf                   	iret   $/;"	l
f0103e31	obj/kern/kernel.asm	/^f0103e31:	c7 44 24 08 fe 84 10 	movl   $0xf01084fe,0x8(%esp)$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	f0 $/;"	l
f0103e39	obj/kern/kernel.asm	/^f0103e39:	c7 44 24 04 0c 02 00 	movl   $0x20c,0x4(%esp)$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	00 $/;"	l
f0103e41	obj/kern/kernel.asm	/^f0103e41:	c7 04 24 b6 84 10 f0 	movl   $0xf01084b6,(%esp)$/;"	l
f0103e48	obj/kern/kernel.asm	/^f0103e48:	e8 f3 c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d <env_run>:$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d:	55                   	push   %ebp$/;"	l
f0103e4e	obj/kern/kernel.asm	/^f0103e4e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103e53	obj/kern/kernel.asm	/^f0103e53:	e8 ec 2d 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103e58	obj/kern/kernel.asm	/^f0103e58:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	83 b8 28 90 1d f0 00 	cmpl   $0x0,-0xfe26fd8(%eax)$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	74 29                	je     f0103e8d <env_run+0x40>$/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	e8 db 2d 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103e69	obj/kern/kernel.asm	/^f0103e69:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e6c	obj/kern/kernel.asm	/^f0103e6c:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	75 15                	jne    f0103e8d <env_run+0x40>$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	e8 c7 2d 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e80	obj/kern/kernel.asm	/^f0103e80:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	e8 b2 2d 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	89 90 28 90 1d f0    	mov    %edx,-0xfe26fd8(%eax)$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	e8 a1 2d 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ea6	obj/kern/kernel.asm	/^f0103ea6:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103eb3	obj/kern/kernel.asm	/^f0103eb3:	e8 8c 2d 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ebb	obj/kern/kernel.asm	/^f0103ebb:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	c7 04 24 80 33 12 f0 	movl   $0xf0123380,(%esp)$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	e8 df 30 00 00       	call   f0106fb0 <spin_unlock>$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	f3 90                	pause  $/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3:	e8 6c 2d 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0103ee1	obj/kern/kernel.asm	/^f0103ee1:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103ee4	obj/kern/kernel.asm	/^f0103ee4:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	77 20                	ja     f0103f0b <env_run+0xbe>$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	c7 44 24 08 64 73 10 	movl   $0xf0107364,0x8(%esp)$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	f0 $/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	c7 44 24 04 34 02 00 	movl   $0x234,0x4(%esp)$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	00 $/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff:	c7 04 24 b6 84 10 f0 	movl   $0xf01084b6,(%esp)$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	e8 35 c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103f13	obj/kern/kernel.asm	/^f0103f13:	e8 2c 2d 00 00       	call   f0106c44 <cpunum>$/;"	l
f0103f18	obj/kern/kernel.asm	/^f0103f18:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f1b	obj/kern/kernel.asm	/^f0103f1b:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	e8 e1 fe ff ff       	call   f0103e0a <env_pop_tf>$/;"	l
f0103f29	obj/kern/kernel.asm	/^f0103f29:	00 00                	add    %al,(%eax)$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c <mc146818_read>:$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	55                   	push   %ebp$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f37	obj/kern/kernel.asm	/^f0103f37:	ee                   	out    %al,(%dx)$/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	b2 71                	mov    $0x71,%dl$/;"	l
f0103f3a	obj/kern/kernel.asm	/^f0103f3a:	ec                   	in     (%dx),%al$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103f3e	obj/kern/kernel.asm	/^f0103f3e:	5d                   	pop    %ebp$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	c3                   	ret    $/;"	l
f0103f40	obj/kern/kernel.asm	/^f0103f40 <mc146818_write>:$/;"	l
f0103f40	obj/kern/kernel.asm	/^f0103f40:	55                   	push   %ebp$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	ee                   	out    %al,(%dx)$/;"	l
f0103f4c	obj/kern/kernel.asm	/^f0103f4c:	b2 71                	mov    $0x71,%dl$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	ee                   	out    %al,(%dx)$/;"	l
f0103f52	obj/kern/kernel.asm	/^f0103f52:	5d                   	pop    %ebp$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	c3                   	ret    $/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54 <irq_setmask_8259A>:$/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54:	55                   	push   %ebp$/;"	l
f0103f55	obj/kern/kernel.asm	/^f0103f55:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f57	obj/kern/kernel.asm	/^f0103f57:	56                   	push   %esi$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	53                   	push   %ebx$/;"	l
f0103f59	obj/kern/kernel.asm	/^f0103f59:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	89 c6                	mov    %eax,%esi$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	66 a3 70 33 12 f0    	mov    %ax,0xf0123370$/;"	l
f0103f67	obj/kern/kernel.asm	/^f0103f67:	83 3d 44 82 1d f0 00 	cmpl   $0x0,0xf01d8244$/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	74 4e                	je     f0103fbe <irq_setmask_8259A+0x6a>$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103f75	obj/kern/kernel.asm	/^f0103f75:	ee                   	out    %al,(%dx)$/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	89 f0                	mov    %esi,%eax$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103f7c	obj/kern/kernel.asm	/^f0103f7c:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f7e	obj/kern/kernel.asm	/^f0103f7e:	ee                   	out    %al,(%dx)$/;"	l
f0103f7f	obj/kern/kernel.asm	/^f0103f7f:	c7 04 24 0a 85 10 f0 	movl   $0xf010850a,(%esp)$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	e8 0f 01 00 00       	call   f010409a <cprintf>$/;"	l
f0103f8b	obj/kern/kernel.asm	/^f0103f8b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	f7 d6                	not    %esi$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	73 10                	jae    f0103faa <irq_setmask_8259A+0x56>$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103f9e	obj/kern/kernel.asm	/^f0103f9e:	c7 04 24 db 89 10 f0 	movl   $0xf01089db,(%esp)$/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	e8 f0 00 00 00       	call   f010409a <cprintf>$/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103fad	obj/kern/kernel.asm	/^f0103fad:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	75 e3                	jne    f0103f95 <irq_setmask_8259A+0x41>$/;"	l
f0103fb2	obj/kern/kernel.asm	/^f0103fb2:	c7 04 24 3e 84 10 f0 	movl   $0xf010843e,(%esp)$/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9:	e8 dc 00 00 00       	call   f010409a <cprintf>$/;"	l
f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fc1	obj/kern/kernel.asm	/^f0103fc1:	5b                   	pop    %ebx$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	5e                   	pop    %esi$/;"	l
f0103fc3	obj/kern/kernel.asm	/^f0103fc3:	5d                   	pop    %ebp$/;"	l
f0103fc4	obj/kern/kernel.asm	/^f0103fc4:	c3                   	ret    $/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5 <pic_init>:$/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	55                   	push   %ebp$/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	c7 05 44 82 1d f0 01 	movl   $0x1,0xf01d8244$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	00 00 00 $/;"	l
f0103fd5	obj/kern/kernel.asm	/^f0103fd5:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103fda	obj/kern/kernel.asm	/^f0103fda:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	ee                   	out    %al,(%dx)$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	ee                   	out    %al,(%dx)$/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	b2 20                	mov    $0x20,%dl$/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	ee                   	out    %al,(%dx)$/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	b2 21                	mov    $0x21,%dl$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	ee                   	out    %al,(%dx)$/;"	l
f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	ee                   	out    %al,(%dx)$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	ee                   	out    %al,(%dx)$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	ee                   	out    %al,(%dx)$/;"	l
f0104007	obj/kern/kernel.asm	/^f0104007:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f010400e	obj/kern/kernel.asm	/^f010400e:	ee                   	out    %al,(%dx)$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	ee                   	out    %al,(%dx)$/;"	l
f0104015	obj/kern/kernel.asm	/^f0104015:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	ee                   	out    %al,(%dx)$/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	b2 20                	mov    $0x20,%dl$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	ee                   	out    %al,(%dx)$/;"	l
f0104023	obj/kern/kernel.asm	/^f0104023:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028:	ee                   	out    %al,(%dx)$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	b2 a0                	mov    $0xa0,%dl$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0104030	obj/kern/kernel.asm	/^f0104030:	ee                   	out    %al,(%dx)$/;"	l
f0104031	obj/kern/kernel.asm	/^f0104031:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	ee                   	out    %al,(%dx)$/;"	l
f0104037	obj/kern/kernel.asm	/^f0104037:	0f b7 05 70 33 12 f0 	movzwl 0xf0123370,%eax$/;"	l
f010403e	obj/kern/kernel.asm	/^f010403e:	66 83 f8 ff          	cmp    $0xffffffff,%ax$/;"	l
f0104042	obj/kern/kernel.asm	/^f0104042:	74 0b                	je     f010404f <pic_init+0x8a>$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010404a	obj/kern/kernel.asm	/^f010404a:	e8 05 ff ff ff       	call   f0103f54 <irq_setmask_8259A>$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	c9                   	leave  $/;"	l
f0104050	obj/kern/kernel.asm	/^f0104050:	c3                   	ret    $/;"	l
f0104051	obj/kern/kernel.asm	/^f0104051:	00 00                	add    %al,(%eax)$/;"	l
f0104054	obj/kern/kernel.asm	/^f0104054 <putch>:$/;"	l
f0104054	obj/kern/kernel.asm	/^f0104054:	55                   	push   %ebp$/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055:	89 e5                	mov    %esp,%ebp$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010405d	obj/kern/kernel.asm	/^f010405d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104060	obj/kern/kernel.asm	/^f0104060:	e8 6b c7 ff ff       	call   f01007d0 <cputchar>$/;"	l
f0104065	obj/kern/kernel.asm	/^f0104065:	c9                   	leave  $/;"	l
f0104066	obj/kern/kernel.asm	/^f0104066:	c3                   	ret    $/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067 <vcprintf>:$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	55                   	push   %ebp$/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068:	89 e5                	mov    %esp,%ebp$/;"	l
f010406a	obj/kern/kernel.asm	/^f010406a:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010406d	obj/kern/kernel.asm	/^f010406d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104074	obj/kern/kernel.asm	/^f0104074:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0104085	obj/kern/kernel.asm	/^f0104085:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104089	obj/kern/kernel.asm	/^f0104089:	c7 04 24 54 40 10 f0 	movl   $0xf0104054,(%esp)$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	e8 42 1c 00 00       	call   f0105cd7 <vprintfmt>$/;"	l
f0104095	obj/kern/kernel.asm	/^f0104095:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104098	obj/kern/kernel.asm	/^f0104098:	c9                   	leave  $/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	c3                   	ret    $/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a <cprintf>:$/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	55                   	push   %ebp$/;"	l
f010409b	obj/kern/kernel.asm	/^f010409b:	89 e5                	mov    %esp,%ebp$/;"	l
f010409d	obj/kern/kernel.asm	/^f010409d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01040a0	obj/kern/kernel.asm	/^f01040a0:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01040a3	obj/kern/kernel.asm	/^f01040a3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01040aa	obj/kern/kernel.asm	/^f01040aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	e8 b5 ff ff ff       	call   f0104067 <vcprintf>$/;"	l
f01040b2	obj/kern/kernel.asm	/^f01040b2:	c9                   	leave  $/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	c3                   	ret    $/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0 <trap_init_percpu>:$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	55                   	push   %ebp$/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01040c9	obj/kern/kernel.asm	/^f01040c9:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01040cc	obj/kern/kernel.asm	/^f01040cc:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01040cf	obj/kern/kernel.asm	/^f01040cf:	e8 70 2b 00 00       	call   f0106c44 <cpunum>$/;"	l
f01040d4	obj/kern/kernel.asm	/^f01040d4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040d7	obj/kern/kernel.asm	/^f01040d7:	0f b6 b0 20 90 1d f0 	movzbl -0xfe26fe0(%eax),%esi$/;"	l
f01040de	obj/kern/kernel.asm	/^f01040de:	e8 61 2b 00 00       	call   f0106c44 <cpunum>$/;"	l
f01040e3	obj/kern/kernel.asm	/^f01040e3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	89 f2                	mov    %esi,%edx$/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	f7 da                	neg    %edx$/;"	l
f01040ea	obj/kern/kernel.asm	/^f01040ea:	c1 e2 10             	shl    $0x10,%edx$/;"	l
f01040ed	obj/kern/kernel.asm	/^f01040ed:	81 ea 00 00 40 10    	sub    $0x10400000,%edx$/;"	l
f01040f3	obj/kern/kernel.asm	/^f01040f3:	89 90 30 90 1d f0    	mov    %edx,-0xfe26fd0(%eax)$/;"	l
f01040f9	obj/kern/kernel.asm	/^f01040f9:	e8 46 2b 00 00       	call   f0106c44 <cpunum>$/;"	l
f01040fe	obj/kern/kernel.asm	/^f01040fe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104101	obj/kern/kernel.asm	/^f0104101:	66 c7 80 34 90 1d f0 	movw   $0x10,-0xfe26fcc(%eax)$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	10 00 $/;"	l
f010410a	obj/kern/kernel.asm	/^f010410a:	8d 5e 05             	lea    0x5(%esi),%ebx$/;"	l
f010410d	obj/kern/kernel.asm	/^f010410d:	e8 32 2b 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112:	89 c7                	mov    %eax,%edi$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	e8 2b 2b 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104119	obj/kern/kernel.asm	/^f0104119:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	e8 23 2b 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104121	obj/kern/kernel.asm	/^f0104121:	66 c7 04 dd 00 33 12 	movw   $0x68,-0xfedcd00(,%ebx,8)$/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	f0 68 00 $/;"	l
f010412b	obj/kern/kernel.asm	/^f010412b:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f010412e	obj/kern/kernel.asm	/^f010412e:	81 c7 2c 90 1d f0    	add    $0xf01d902c,%edi$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	66 89 3c dd 02 33 12 	mov    %di,-0xfedccfe(,%ebx,8)$/;"	l
f010413b	obj/kern/kernel.asm	/^f010413b:	f0 $/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	6b 55 e4 74          	imul   $0x74,-0x1c(%ebp),%edx$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	81 c2 2c 90 1d f0    	add    $0xf01d902c,%edx$/;"	l
f0104146	obj/kern/kernel.asm	/^f0104146:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0104149	obj/kern/kernel.asm	/^f0104149:	88 14 dd 04 33 12 f0 	mov    %dl,-0xfedccfc(,%ebx,8)$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	c6 04 dd 06 33 12 f0 	movb   $0x40,-0xfedccfa(,%ebx,8)$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	40 $/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010415b	obj/kern/kernel.asm	/^f010415b:	05 2c 90 1d f0       	add    $0xf01d902c,%eax$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	88 04 dd 07 33 12 f0 	mov    %al,-0xfedccf9(,%ebx,8)$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	c6 04 dd 05 33 12 f0 	movb   $0x89,-0xfedccfb(,%ebx,8)$/;"	l
f0104171	obj/kern/kernel.asm	/^f0104171:	89 $/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	8d 34 f5 28 00 00 00 	lea    0x28(,%esi,8),%esi$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	0f 00 de             	ltr    %si$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	b8 74 33 12 f0       	mov    $0xf0123374,%eax$/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	0f 01 18             	lidtl  (%eax)$/;"	l
f0104184	obj/kern/kernel.asm	/^f0104184:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0104187	obj/kern/kernel.asm	/^f0104187:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f010418d	obj/kern/kernel.asm	/^f010418d:	89 ec                	mov    %ebp,%esp$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f:	5d                   	pop    %ebp$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	c3                   	ret    $/;"	l
f0104191	obj/kern/kernel.asm	/^f0104191 <trap_init>:$/;"	l
f0104191	obj/kern/kernel.asm	/^f0104191:	55                   	push   %ebp$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192:	89 e5                	mov    %esp,%ebp$/;"	l
f0104194	obj/kern/kernel.asm	/^f0104194:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104197	obj/kern/kernel.asm	/^f0104197:	b8 a0 4d 10 f0       	mov    $0xf0104da0,%eax$/;"	l
f010419c	obj/kern/kernel.asm	/^f010419c:	66 a3 60 82 1d f0    	mov    %ax,0xf01d8260$/;"	l
f01041a2	obj/kern/kernel.asm	/^f01041a2:	66 c7 05 62 82 1d f0 	movw   $0x8,0xf01d8262$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	08 00 $/;"	l
f01041ab	obj/kern/kernel.asm	/^f01041ab:	c6 05 64 82 1d f0 00 	movb   $0x0,0xf01d8264$/;"	l
f01041b2	obj/kern/kernel.asm	/^f01041b2:	c6 05 65 82 1d f0 8e 	movb   $0x8e,0xf01d8265$/;"	l
f01041b9	obj/kern/kernel.asm	/^f01041b9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041bc	obj/kern/kernel.asm	/^f01041bc:	66 a3 66 82 1d f0    	mov    %ax,0xf01d8266$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	b8 aa 4d 10 f0       	mov    $0xf0104daa,%eax$/;"	l
f01041c7	obj/kern/kernel.asm	/^f01041c7:	66 a3 68 82 1d f0    	mov    %ax,0xf01d8268$/;"	l
f01041cd	obj/kern/kernel.asm	/^f01041cd:	66 c7 05 6a 82 1d f0 	movw   $0x8,0xf01d826a$/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4:	08 00 $/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	c6 05 6c 82 1d f0 00 	movb   $0x0,0xf01d826c$/;"	l
f01041dd	obj/kern/kernel.asm	/^f01041dd:	c6 05 6d 82 1d f0 8e 	movb   $0x8e,0xf01d826d$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041e7	obj/kern/kernel.asm	/^f01041e7:	66 a3 6e 82 1d f0    	mov    %ax,0xf01d826e$/;"	l
f01041ed	obj/kern/kernel.asm	/^f01041ed:	b8 b4 4d 10 f0       	mov    $0xf0104db4,%eax$/;"	l
f01041f2	obj/kern/kernel.asm	/^f01041f2:	66 a3 70 82 1d f0    	mov    %ax,0xf01d8270$/;"	l
f01041f8	obj/kern/kernel.asm	/^f01041f8:	66 c7 05 72 82 1d f0 	movw   $0x8,0xf01d8272$/;"	l
f01041ff	obj/kern/kernel.asm	/^f01041ff:	08 00 $/;"	l
f0104201	obj/kern/kernel.asm	/^f0104201:	c6 05 74 82 1d f0 00 	movb   $0x0,0xf01d8274$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	c6 05 75 82 1d f0 8e 	movb   $0x8e,0xf01d8275$/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212:	66 a3 76 82 1d f0    	mov    %ax,0xf01d8276$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	b8 be 4d 10 f0       	mov    $0xf0104dbe,%eax$/;"	l
f010421d	obj/kern/kernel.asm	/^f010421d:	66 a3 78 82 1d f0    	mov    %ax,0xf01d8278$/;"	l
f0104223	obj/kern/kernel.asm	/^f0104223:	66 c7 05 7a 82 1d f0 	movw   $0x8,0xf01d827a$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	08 00 $/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	c6 05 7c 82 1d f0 00 	movb   $0x0,0xf01d827c$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	c6 05 7d 82 1d f0 ee 	movb   $0xee,0xf01d827d$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010423d	obj/kern/kernel.asm	/^f010423d:	66 a3 7e 82 1d f0    	mov    %ax,0xf01d827e$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	b8 c8 4d 10 f0       	mov    $0xf0104dc8,%eax$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	66 a3 80 82 1d f0    	mov    %ax,0xf01d8280$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	66 c7 05 82 82 1d f0 	movw   $0x8,0xf01d8282$/;"	l
f0104255	obj/kern/kernel.asm	/^f0104255:	08 00 $/;"	l
f0104257	obj/kern/kernel.asm	/^f0104257:	c6 05 84 82 1d f0 00 	movb   $0x0,0xf01d8284$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e:	c6 05 85 82 1d f0 8e 	movb   $0x8e,0xf01d8285$/;"	l
f0104265	obj/kern/kernel.asm	/^f0104265:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268:	66 a3 86 82 1d f0    	mov    %ax,0xf01d8286$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	b8 d2 4d 10 f0       	mov    $0xf0104dd2,%eax$/;"	l
f0104273	obj/kern/kernel.asm	/^f0104273:	66 a3 88 82 1d f0    	mov    %ax,0xf01d8288$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	66 c7 05 8a 82 1d f0 	movw   $0x8,0xf01d828a$/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280:	08 00 $/;"	l
f0104282	obj/kern/kernel.asm	/^f0104282:	c6 05 8c 82 1d f0 00 	movb   $0x0,0xf01d828c$/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	c6 05 8d 82 1d f0 8e 	movb   $0x8e,0xf01d828d$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104293	obj/kern/kernel.asm	/^f0104293:	66 a3 8e 82 1d f0    	mov    %ax,0xf01d828e$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	b8 dc 4d 10 f0       	mov    $0xf0104ddc,%eax$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	66 a3 90 82 1d f0    	mov    %ax,0xf01d8290$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	66 c7 05 92 82 1d f0 	movw   $0x8,0xf01d8292$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	08 00 $/;"	l
f01042ad	obj/kern/kernel.asm	/^f01042ad:	c6 05 94 82 1d f0 00 	movb   $0x0,0xf01d8294$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	c6 05 95 82 1d f0 8e 	movb   $0x8e,0xf01d8295$/;"	l
f01042bb	obj/kern/kernel.asm	/^f01042bb:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042be	obj/kern/kernel.asm	/^f01042be:	66 a3 96 82 1d f0    	mov    %ax,0xf01d8296$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	b8 e6 4d 10 f0       	mov    $0xf0104de6,%eax$/;"	l
f01042c9	obj/kern/kernel.asm	/^f01042c9:	66 a3 98 82 1d f0    	mov    %ax,0xf01d8298$/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	66 c7 05 9a 82 1d f0 	movw   $0x8,0xf01d829a$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	08 00 $/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	c6 05 9c 82 1d f0 00 	movb   $0x0,0xf01d829c$/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	c6 05 9d 82 1d f0 8e 	movb   $0x8e,0xf01d829d$/;"	l
f01042e6	obj/kern/kernel.asm	/^f01042e6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042e9	obj/kern/kernel.asm	/^f01042e9:	66 a3 9e 82 1d f0    	mov    %ax,0xf01d829e$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	b8 f0 4d 10 f0       	mov    $0xf0104df0,%eax$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	66 a3 a0 82 1d f0    	mov    %ax,0xf01d82a0$/;"	l
f01042fa	obj/kern/kernel.asm	/^f01042fa:	66 c7 05 a2 82 1d f0 	movw   $0x8,0xf01d82a2$/;"	l
f0104301	obj/kern/kernel.asm	/^f0104301:	08 00 $/;"	l
f0104303	obj/kern/kernel.asm	/^f0104303:	c6 05 a4 82 1d f0 00 	movb   $0x0,0xf01d82a4$/;"	l
f010430a	obj/kern/kernel.asm	/^f010430a:	c6 05 a5 82 1d f0 8e 	movb   $0x8e,0xf01d82a5$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	66 a3 a6 82 1d f0    	mov    %ax,0xf01d82a6$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	b8 f8 4d 10 f0       	mov    $0xf0104df8,%eax$/;"	l
f010431f	obj/kern/kernel.asm	/^f010431f:	66 a3 b0 82 1d f0    	mov    %ax,0xf01d82b0$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	66 c7 05 b2 82 1d f0 	movw   $0x8,0xf01d82b2$/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	08 00 $/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	c6 05 b4 82 1d f0 00 	movb   $0x0,0xf01d82b4$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	c6 05 b5 82 1d f0 8e 	movb   $0x8e,0xf01d82b5$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010433f	obj/kern/kernel.asm	/^f010433f:	66 a3 b6 82 1d f0    	mov    %ax,0xf01d82b6$/;"	l
f0104345	obj/kern/kernel.asm	/^f0104345:	b8 00 4e 10 f0       	mov    $0xf0104e00,%eax$/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a:	66 a3 b8 82 1d f0    	mov    %ax,0xf01d82b8$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	66 c7 05 ba 82 1d f0 	movw   $0x8,0xf01d82ba$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	08 00 $/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	c6 05 bc 82 1d f0 00 	movb   $0x0,0xf01d82bc$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	c6 05 bd 82 1d f0 8e 	movb   $0x8e,0xf01d82bd$/;"	l
f0104367	obj/kern/kernel.asm	/^f0104367:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	66 a3 be 82 1d f0    	mov    %ax,0xf01d82be$/;"	l
f0104370	obj/kern/kernel.asm	/^f0104370:	b8 08 4e 10 f0       	mov    $0xf0104e08,%eax$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	66 a3 c0 82 1d f0    	mov    %ax,0xf01d82c0$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	66 c7 05 c2 82 1d f0 	movw   $0x8,0xf01d82c2$/;"	l
f0104382	obj/kern/kernel.asm	/^f0104382:	08 00 $/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	c6 05 c4 82 1d f0 00 	movb   $0x0,0xf01d82c4$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	c6 05 c5 82 1d f0 8e 	movb   $0x8e,0xf01d82c5$/;"	l
f0104392	obj/kern/kernel.asm	/^f0104392:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104395	obj/kern/kernel.asm	/^f0104395:	66 a3 c6 82 1d f0    	mov    %ax,0xf01d82c6$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	b8 10 4e 10 f0       	mov    $0xf0104e10,%eax$/;"	l
f01043a0	obj/kern/kernel.asm	/^f01043a0:	66 a3 c8 82 1d f0    	mov    %ax,0xf01d82c8$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	66 c7 05 ca 82 1d f0 	movw   $0x8,0xf01d82ca$/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	08 00 $/;"	l
f01043af	obj/kern/kernel.asm	/^f01043af:	c6 05 cc 82 1d f0 00 	movb   $0x0,0xf01d82cc$/;"	l
f01043b6	obj/kern/kernel.asm	/^f01043b6:	c6 05 cd 82 1d f0 8e 	movb   $0x8e,0xf01d82cd$/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043c0	obj/kern/kernel.asm	/^f01043c0:	66 a3 ce 82 1d f0    	mov    %ax,0xf01d82ce$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	b8 18 4e 10 f0       	mov    $0xf0104e18,%eax$/;"	l
f01043cb	obj/kern/kernel.asm	/^f01043cb:	66 a3 d0 82 1d f0    	mov    %ax,0xf01d82d0$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	66 c7 05 d2 82 1d f0 	movw   $0x8,0xf01d82d2$/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	08 00 $/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	c6 05 d4 82 1d f0 00 	movb   $0x0,0xf01d82d4$/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	c6 05 d5 82 1d f0 8e 	movb   $0x8e,0xf01d82d5$/;"	l
f01043e8	obj/kern/kernel.asm	/^f01043e8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043eb	obj/kern/kernel.asm	/^f01043eb:	66 a3 d6 82 1d f0    	mov    %ax,0xf01d82d6$/;"	l
f01043f1	obj/kern/kernel.asm	/^f01043f1:	b8 1c 4e 10 f0       	mov    $0xf0104e1c,%eax$/;"	l
f01043f6	obj/kern/kernel.asm	/^f01043f6:	66 a3 e0 82 1d f0    	mov    %ax,0xf01d82e0$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	66 c7 05 e2 82 1d f0 	movw   $0x8,0xf01d82e2$/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	08 00 $/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	c6 05 e4 82 1d f0 00 	movb   $0x0,0xf01d82e4$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	c6 05 e5 82 1d f0 8e 	movb   $0x8e,0xf01d82e5$/;"	l
f0104413	obj/kern/kernel.asm	/^f0104413:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	66 a3 e6 82 1d f0    	mov    %ax,0xf01d82e6$/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	b8 22 4e 10 f0       	mov    $0xf0104e22,%eax$/;"	l
f0104421	obj/kern/kernel.asm	/^f0104421:	66 a3 e8 82 1d f0    	mov    %ax,0xf01d82e8$/;"	l
f0104427	obj/kern/kernel.asm	/^f0104427:	66 c7 05 ea 82 1d f0 	movw   $0x8,0xf01d82ea$/;"	l
f010442e	obj/kern/kernel.asm	/^f010442e:	08 00 $/;"	l
f0104430	obj/kern/kernel.asm	/^f0104430:	c6 05 ec 82 1d f0 00 	movb   $0x0,0xf01d82ec$/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	c6 05 ed 82 1d f0 8e 	movb   $0x8e,0xf01d82ed$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104441	obj/kern/kernel.asm	/^f0104441:	66 a3 ee 82 1d f0    	mov    %ax,0xf01d82ee$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	b8 26 4e 10 f0       	mov    $0xf0104e26,%eax$/;"	l
f010444c	obj/kern/kernel.asm	/^f010444c:	66 a3 f0 82 1d f0    	mov    %ax,0xf01d82f0$/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	66 c7 05 f2 82 1d f0 	movw   $0x8,0xf01d82f2$/;"	l
f0104459	obj/kern/kernel.asm	/^f0104459:	08 00 $/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	c6 05 f4 82 1d f0 00 	movb   $0x0,0xf01d82f4$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	c6 05 f5 82 1d f0 8e 	movb   $0x8e,0xf01d82f5$/;"	l
f0104469	obj/kern/kernel.asm	/^f0104469:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010446c	obj/kern/kernel.asm	/^f010446c:	66 a3 f6 82 1d f0    	mov    %ax,0xf01d82f6$/;"	l
f0104472	obj/kern/kernel.asm	/^f0104472:	b8 2c 4e 10 f0       	mov    $0xf0104e2c,%eax$/;"	l
f0104477	obj/kern/kernel.asm	/^f0104477:	66 a3 f8 82 1d f0    	mov    %ax,0xf01d82f8$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	66 c7 05 fa 82 1d f0 	movw   $0x8,0xf01d82fa$/;"	l
f0104484	obj/kern/kernel.asm	/^f0104484:	08 00 $/;"	l
f0104486	obj/kern/kernel.asm	/^f0104486:	c6 05 fc 82 1d f0 00 	movb   $0x0,0xf01d82fc$/;"	l
f010448d	obj/kern/kernel.asm	/^f010448d:	c6 05 fd 82 1d f0 8e 	movb   $0x8e,0xf01d82fd$/;"	l
f0104494	obj/kern/kernel.asm	/^f0104494:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104497	obj/kern/kernel.asm	/^f0104497:	66 a3 fe 82 1d f0    	mov    %ax,0xf01d82fe$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	b8 32 4e 10 f0       	mov    $0xf0104e32,%eax$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	66 a3 e0 83 1d f0    	mov    %ax,0xf01d83e0$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	66 c7 05 e2 83 1d f0 	movw   $0x8,0xf01d83e2$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	08 00 $/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	c6 05 e4 83 1d f0 00 	movb   $0x0,0xf01d83e4$/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8:	c6 05 e5 83 1d f0 ee 	movb   $0xee,0xf01d83e5$/;"	l
f01044bf	obj/kern/kernel.asm	/^f01044bf:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044c2	obj/kern/kernel.asm	/^f01044c2:	66 a3 e6 83 1d f0    	mov    %ax,0xf01d83e6$/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	b8 38 4e 10 f0       	mov    $0xf0104e38,%eax$/;"	l
f01044cd	obj/kern/kernel.asm	/^f01044cd:	66 a3 60 83 1d f0    	mov    %ax,0xf01d8360$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	66 c7 05 62 83 1d f0 	movw   $0x8,0xf01d8362$/;"	l
f01044da	obj/kern/kernel.asm	/^f01044da:	08 00 $/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	c6 05 64 83 1d f0 00 	movb   $0x0,0xf01d8364$/;"	l
f01044e3	obj/kern/kernel.asm	/^f01044e3:	c6 05 65 83 1d f0 8e 	movb   $0x8e,0xf01d8365$/;"	l
f01044ea	obj/kern/kernel.asm	/^f01044ea:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	66 a3 66 83 1d f0    	mov    %ax,0xf01d8366$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	b8 3e 4e 10 f0       	mov    $0xf0104e3e,%eax$/;"	l
f01044f8	obj/kern/kernel.asm	/^f01044f8:	66 a3 68 83 1d f0    	mov    %ax,0xf01d8368$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	66 c7 05 6a 83 1d f0 	movw   $0x8,0xf01d836a$/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	08 00 $/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	c6 05 6c 83 1d f0 00 	movb   $0x0,0xf01d836c$/;"	l
f010450e	obj/kern/kernel.asm	/^f010450e:	c6 05 6d 83 1d f0 8e 	movb   $0x8e,0xf01d836d$/;"	l
f0104515	obj/kern/kernel.asm	/^f0104515:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104518	obj/kern/kernel.asm	/^f0104518:	66 a3 6e 83 1d f0    	mov    %ax,0xf01d836e$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	b8 44 4e 10 f0       	mov    $0xf0104e44,%eax$/;"	l
f0104523	obj/kern/kernel.asm	/^f0104523:	66 a3 70 83 1d f0    	mov    %ax,0xf01d8370$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	66 c7 05 72 83 1d f0 	movw   $0x8,0xf01d8372$/;"	l
f0104530	obj/kern/kernel.asm	/^f0104530:	08 00 $/;"	l
f0104532	obj/kern/kernel.asm	/^f0104532:	c6 05 74 83 1d f0 00 	movb   $0x0,0xf01d8374$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539:	c6 05 75 83 1d f0 8e 	movb   $0x8e,0xf01d8375$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	66 a3 76 83 1d f0    	mov    %ax,0xf01d8376$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	b8 4a 4e 10 f0       	mov    $0xf0104e4a,%eax$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	66 a3 78 83 1d f0    	mov    %ax,0xf01d8378$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	66 c7 05 7a 83 1d f0 	movw   $0x8,0xf01d837a$/;"	l
f010455b	obj/kern/kernel.asm	/^f010455b:	08 00 $/;"	l
f010455d	obj/kern/kernel.asm	/^f010455d:	c6 05 7c 83 1d f0 00 	movb   $0x0,0xf01d837c$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	c6 05 7d 83 1d f0 8e 	movb   $0x8e,0xf01d837d$/;"	l
f010456b	obj/kern/kernel.asm	/^f010456b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	66 a3 7e 83 1d f0    	mov    %ax,0xf01d837e$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	b8 50 4e 10 f0       	mov    $0xf0104e50,%eax$/;"	l
f0104579	obj/kern/kernel.asm	/^f0104579:	66 a3 80 83 1d f0    	mov    %ax,0xf01d8380$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	66 c7 05 82 83 1d f0 	movw   $0x8,0xf01d8382$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	08 00 $/;"	l
f0104588	obj/kern/kernel.asm	/^f0104588:	c6 05 84 83 1d f0 00 	movb   $0x0,0xf01d8384$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	c6 05 85 83 1d f0 8e 	movb   $0x8e,0xf01d8385$/;"	l
f0104596	obj/kern/kernel.asm	/^f0104596:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104599	obj/kern/kernel.asm	/^f0104599:	66 a3 86 83 1d f0    	mov    %ax,0xf01d8386$/;"	l
f010459f	obj/kern/kernel.asm	/^f010459f:	b8 56 4e 10 f0       	mov    $0xf0104e56,%eax$/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4:	66 a3 88 83 1d f0    	mov    %ax,0xf01d8388$/;"	l
f01045aa	obj/kern/kernel.asm	/^f01045aa:	66 c7 05 8a 83 1d f0 	movw   $0x8,0xf01d838a$/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1:	08 00 $/;"	l
f01045b3	obj/kern/kernel.asm	/^f01045b3:	c6 05 8c 83 1d f0 00 	movb   $0x0,0xf01d838c$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	c6 05 8d 83 1d f0 8e 	movb   $0x8e,0xf01d838d$/;"	l
f01045c1	obj/kern/kernel.asm	/^f01045c1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4:	66 a3 8e 83 1d f0    	mov    %ax,0xf01d838e$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	b8 5c 4e 10 f0       	mov    $0xf0104e5c,%eax$/;"	l
f01045cf	obj/kern/kernel.asm	/^f01045cf:	66 a3 90 83 1d f0    	mov    %ax,0xf01d8390$/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5:	66 c7 05 92 83 1d f0 	movw   $0x8,0xf01d8392$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	08 00 $/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	c6 05 94 83 1d f0 00 	movb   $0x0,0xf01d8394$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	c6 05 95 83 1d f0 8e 	movb   $0x8e,0xf01d8395$/;"	l
f01045ec	obj/kern/kernel.asm	/^f01045ec:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045ef	obj/kern/kernel.asm	/^f01045ef:	66 a3 96 83 1d f0    	mov    %ax,0xf01d8396$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	b8 62 4e 10 f0       	mov    $0xf0104e62,%eax$/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	66 a3 98 83 1d f0    	mov    %ax,0xf01d8398$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	66 c7 05 9a 83 1d f0 	movw   $0x8,0xf01d839a$/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607:	08 00 $/;"	l
f0104609	obj/kern/kernel.asm	/^f0104609:	c6 05 9c 83 1d f0 00 	movb   $0x0,0xf01d839c$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	c6 05 9d 83 1d f0 8e 	movb   $0x8e,0xf01d839d$/;"	l
f0104617	obj/kern/kernel.asm	/^f0104617:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	66 a3 9e 83 1d f0    	mov    %ax,0xf01d839e$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	b8 68 4e 10 f0       	mov    $0xf0104e68,%eax$/;"	l
f0104625	obj/kern/kernel.asm	/^f0104625:	66 a3 a0 83 1d f0    	mov    %ax,0xf01d83a0$/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	66 c7 05 a2 83 1d f0 	movw   $0x8,0xf01d83a2$/;"	l
f0104632	obj/kern/kernel.asm	/^f0104632:	08 00 $/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	c6 05 a4 83 1d f0 00 	movb   $0x0,0xf01d83a4$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	c6 05 a5 83 1d f0 8e 	movb   $0x8e,0xf01d83a5$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	66 a3 a6 83 1d f0    	mov    %ax,0xf01d83a6$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	b8 6e 4e 10 f0       	mov    $0xf0104e6e,%eax$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	66 a3 a8 83 1d f0    	mov    %ax,0xf01d83a8$/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656:	66 c7 05 aa 83 1d f0 	movw   $0x8,0xf01d83aa$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	08 00 $/;"	l
f010465f	obj/kern/kernel.asm	/^f010465f:	c6 05 ac 83 1d f0 00 	movb   $0x0,0xf01d83ac$/;"	l
f0104666	obj/kern/kernel.asm	/^f0104666:	c6 05 ad 83 1d f0 8e 	movb   $0x8e,0xf01d83ad$/;"	l
f010466d	obj/kern/kernel.asm	/^f010466d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	66 a3 ae 83 1d f0    	mov    %ax,0xf01d83ae$/;"	l
f0104676	obj/kern/kernel.asm	/^f0104676:	b8 74 4e 10 f0       	mov    $0xf0104e74,%eax$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	66 a3 b0 83 1d f0    	mov    %ax,0xf01d83b0$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	66 c7 05 b2 83 1d f0 	movw   $0x8,0xf01d83b2$/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688:	08 00 $/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	c6 05 b4 83 1d f0 00 	movb   $0x0,0xf01d83b4$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	c6 05 b5 83 1d f0 8e 	movb   $0x8e,0xf01d83b5$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010469b	obj/kern/kernel.asm	/^f010469b:	66 a3 b6 83 1d f0    	mov    %ax,0xf01d83b6$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	b8 7a 4e 10 f0       	mov    $0xf0104e7a,%eax$/;"	l
f01046a6	obj/kern/kernel.asm	/^f01046a6:	66 a3 b8 83 1d f0    	mov    %ax,0xf01d83b8$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	66 c7 05 ba 83 1d f0 	movw   $0x8,0xf01d83ba$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	08 00 $/;"	l
f01046b5	obj/kern/kernel.asm	/^f01046b5:	c6 05 bc 83 1d f0 00 	movb   $0x0,0xf01d83bc$/;"	l
f01046bc	obj/kern/kernel.asm	/^f01046bc:	c6 05 bd 83 1d f0 8e 	movb   $0x8e,0xf01d83bd$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	66 a3 be 83 1d f0    	mov    %ax,0xf01d83be$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	b8 80 4e 10 f0       	mov    $0xf0104e80,%eax$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	66 a3 c0 83 1d f0    	mov    %ax,0xf01d83c0$/;"	l
f01046d7	obj/kern/kernel.asm	/^f01046d7:	66 c7 05 c2 83 1d f0 	movw   $0x8,0xf01d83c2$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	08 00 $/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	c6 05 c4 83 1d f0 00 	movb   $0x0,0xf01d83c4$/;"	l
f01046e7	obj/kern/kernel.asm	/^f01046e7:	c6 05 c5 83 1d f0 8e 	movb   $0x8e,0xf01d83c5$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01046f1	obj/kern/kernel.asm	/^f01046f1:	66 a3 c6 83 1d f0    	mov    %ax,0xf01d83c6$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	b8 86 4e 10 f0       	mov    $0xf0104e86,%eax$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	66 a3 c8 83 1d f0    	mov    %ax,0xf01d83c8$/;"	l
f0104702	obj/kern/kernel.asm	/^f0104702:	66 c7 05 ca 83 1d f0 	movw   $0x8,0xf01d83ca$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	08 00 $/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	c6 05 cc 83 1d f0 00 	movb   $0x0,0xf01d83cc$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	c6 05 cd 83 1d f0 8e 	movb   $0x8e,0xf01d83cd$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010471c	obj/kern/kernel.asm	/^f010471c:	66 a3 ce 83 1d f0    	mov    %ax,0xf01d83ce$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	b8 8c 4e 10 f0       	mov    $0xf0104e8c,%eax$/;"	l
f0104727	obj/kern/kernel.asm	/^f0104727:	66 a3 d0 83 1d f0    	mov    %ax,0xf01d83d0$/;"	l
f010472d	obj/kern/kernel.asm	/^f010472d:	66 c7 05 d2 83 1d f0 	movw   $0x8,0xf01d83d2$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	08 00 $/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	c6 05 d4 83 1d f0 00 	movb   $0x0,0xf01d83d4$/;"	l
f010473d	obj/kern/kernel.asm	/^f010473d:	c6 05 d5 83 1d f0 8e 	movb   $0x8e,0xf01d83d5$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	66 a3 d6 83 1d f0    	mov    %ax,0xf01d83d6$/;"	l
f010474d	obj/kern/kernel.asm	/^f010474d:	b8 92 4e 10 f0       	mov    $0xf0104e92,%eax$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	66 a3 d8 83 1d f0    	mov    %ax,0xf01d83d8$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	66 c7 05 da 83 1d f0 	movw   $0x8,0xf01d83da$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	08 00 $/;"	l
f0104761	obj/kern/kernel.asm	/^f0104761:	c6 05 dc 83 1d f0 00 	movb   $0x0,0xf01d83dc$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	c6 05 dd 83 1d f0 8e 	movb   $0x8e,0xf01d83dd$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	66 a3 de 83 1d f0    	mov    %ax,0xf01d83de$/;"	l
f0104778	obj/kern/kernel.asm	/^f0104778:	e8 43 f9 ff ff       	call   f01040c0 <trap_init_percpu>$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	c9                   	leave  $/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	c3                   	ret    $/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f <print_regs>:$/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	55                   	push   %ebp$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	89 e5                	mov    %esp,%ebp$/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782:	53                   	push   %ebx$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104786	obj/kern/kernel.asm	/^f0104786:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	8b 03                	mov    (%ebx),%eax$/;"	l
f010478b	obj/kern/kernel.asm	/^f010478b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010478f	obj/kern/kernel.asm	/^f010478f:	c7 04 24 1e 85 10 f0 	movl   $0xf010851e,(%esp)$/;"	l
f0104796	obj/kern/kernel.asm	/^f0104796:	e8 ff f8 ff ff       	call   f010409a <cprintf>$/;"	l
f010479b	obj/kern/kernel.asm	/^f010479b:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	c7 04 24 2d 85 10 f0 	movl   $0xf010852d,(%esp)$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	e8 ec f8 ff ff       	call   f010409a <cprintf>$/;"	l
f01047ae	obj/kern/kernel.asm	/^f01047ae:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047b5	obj/kern/kernel.asm	/^f01047b5:	c7 04 24 3c 85 10 f0 	movl   $0xf010853c,(%esp)$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	e8 d9 f8 ff ff       	call   f010409a <cprintf>$/;"	l
f01047c1	obj/kern/kernel.asm	/^f01047c1:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01047c4	obj/kern/kernel.asm	/^f01047c4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8:	c7 04 24 4b 85 10 f0 	movl   $0xf010854b,(%esp)$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	e8 c6 f8 ff ff       	call   f010409a <cprintf>$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01047d7	obj/kern/kernel.asm	/^f01047d7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047db	obj/kern/kernel.asm	/^f01047db:	c7 04 24 5a 85 10 f0 	movl   $0xf010855a,(%esp)$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	e8 b3 f8 ff ff       	call   f010409a <cprintf>$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047ee	obj/kern/kernel.asm	/^f01047ee:	c7 04 24 69 85 10 f0 	movl   $0xf0108569,(%esp)$/;"	l
f01047f5	obj/kern/kernel.asm	/^f01047f5:	e8 a0 f8 ff ff       	call   f010409a <cprintf>$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	c7 04 24 78 85 10 f0 	movl   $0xf0108578,(%esp)$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	e8 8d f8 ff ff       	call   f010409a <cprintf>$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f0104810	obj/kern/kernel.asm	/^f0104810:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104814	obj/kern/kernel.asm	/^f0104814:	c7 04 24 87 85 10 f0 	movl   $0xf0108587,(%esp)$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	e8 7a f8 ff ff       	call   f010409a <cprintf>$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104823	obj/kern/kernel.asm	/^f0104823:	5b                   	pop    %ebx$/;"	l
f0104824	obj/kern/kernel.asm	/^f0104824:	5d                   	pop    %ebp$/;"	l
f0104825	obj/kern/kernel.asm	/^f0104825:	c3                   	ret    $/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826 <print_trapframe>:$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	55                   	push   %ebp$/;"	l
f0104827	obj/kern/kernel.asm	/^f0104827:	89 e5                	mov    %esp,%ebp$/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	56                   	push   %esi$/;"	l
f010482a	obj/kern/kernel.asm	/^f010482a:	53                   	push   %ebx$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	e8 0e 24 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010483a	obj/kern/kernel.asm	/^f010483a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	c7 04 24 eb 85 10 f0 	movl   $0xf01085eb,(%esp)$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	e8 50 f8 ff ff       	call   f010409a <cprintf>$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010484d	obj/kern/kernel.asm	/^f010484d:	e8 2d ff ff ff       	call   f010477f <print_regs>$/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010485a	obj/kern/kernel.asm	/^f010485a:	c7 04 24 09 86 10 f0 	movl   $0xf0108609,(%esp)$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	e8 34 f8 ff ff       	call   f010409a <cprintf>$/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010486e	obj/kern/kernel.asm	/^f010486e:	c7 04 24 1c 86 10 f0 	movl   $0xf010861c,(%esp)$/;"	l
f0104875	obj/kern/kernel.asm	/^f0104875:	e8 20 f8 ff ff       	call   f010409a <cprintf>$/;"	l
f010487a	obj/kern/kernel.asm	/^f010487a:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104880	obj/kern/kernel.asm	/^f0104880:	77 09                	ja     f010488b <print_trapframe+0x65>$/;"	l
f0104882	obj/kern/kernel.asm	/^f0104882:	8b 14 85 c0 88 10 f0 	mov    -0xfef7740(,%eax,4),%edx$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	eb 1d                	jmp    f01048a8 <print_trapframe+0x82>$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	ba 96 85 10 f0       	mov    $0xf0108596,%edx$/;"	l
f0104890	obj/kern/kernel.asm	/^f0104890:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	74 13                	je     f01048a8 <print_trapframe+0x82>$/;"	l
f0104895	obj/kern/kernel.asm	/^f0104895:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f010489b	obj/kern/kernel.asm	/^f010489b:	ba a2 85 10 f0       	mov    $0xf01085a2,%edx$/;"	l
f01048a0	obj/kern/kernel.asm	/^f01048a0:	b9 b5 85 10 f0       	mov    $0xf01085b5,%ecx$/;"	l
f01048a5	obj/kern/kernel.asm	/^f01048a5:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048b0	obj/kern/kernel.asm	/^f01048b0:	c7 04 24 2f 86 10 f0 	movl   $0xf010862f,(%esp)$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	e8 de f7 ff ff       	call   f010409a <cprintf>$/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc:	3b 1d 60 8a 1d f0    	cmp    0xf01d8a60,%ebx$/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	75 19                	jne    f01048dd <print_trapframe+0xb7>$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8:	75 13                	jne    f01048dd <print_trapframe+0xb7>$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f01048cd	obj/kern/kernel.asm	/^f01048cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	c7 04 24 41 86 10 f0 	movl   $0xf0108641,(%esp)$/;"	l
f01048d8	obj/kern/kernel.asm	/^f01048d8:	e8 bd f7 ff ff       	call   f010409a <cprintf>$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01048e0	obj/kern/kernel.asm	/^f01048e0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	c7 04 24 50 86 10 f0 	movl   $0xf0108650,(%esp)$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	e8 aa f7 ff ff       	call   f010409a <cprintf>$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	75 51                	jne    f0104947 <print_trapframe+0x121>$/;"	l
f01048f6	obj/kern/kernel.asm	/^f01048f6:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	89 c2                	mov    %eax,%edx$/;"	l
f01048fb	obj/kern/kernel.asm	/^f01048fb:	83 e2 01             	and    $0x1,%edx$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	ba c4 85 10 f0       	mov    $0xf01085c4,%edx$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	b9 cf 85 10 f0       	mov    $0xf01085cf,%ecx$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f010490b	obj/kern/kernel.asm	/^f010490b:	89 c2                	mov    %eax,%edx$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	83 e2 02             	and    $0x2,%edx$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	ba db 85 10 f0       	mov    $0xf01085db,%edx$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	be e1 85 10 f0       	mov    $0xf01085e1,%esi$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	83 e0 04             	and    $0x4,%eax$/;"	l
f0104920	obj/kern/kernel.asm	/^f0104920:	b8 e6 85 10 f0       	mov    $0xf01085e6,%eax$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	be 45 87 10 f0       	mov    $0xf0108745,%esi$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104939	obj/kern/kernel.asm	/^f0104939:	c7 04 24 5e 86 10 f0 	movl   $0xf010865e,(%esp)$/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940:	e8 55 f7 ff ff       	call   f010409a <cprintf>$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	eb 0c                	jmp    f0104953 <print_trapframe+0x12d>$/;"	l
f0104947	obj/kern/kernel.asm	/^f0104947:	c7 04 24 3e 84 10 f0 	movl   $0xf010843e,(%esp)$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	e8 47 f7 ff ff       	call   f010409a <cprintf>$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	c7 04 24 6d 86 10 f0 	movl   $0xf010866d,(%esp)$/;"	l
f0104961	obj/kern/kernel.asm	/^f0104961:	e8 34 f7 ff ff       	call   f010409a <cprintf>$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	c7 04 24 7c 86 10 f0 	movl   $0xf010867c,(%esp)$/;"	l
f0104975	obj/kern/kernel.asm	/^f0104975:	e8 20 f7 ff ff       	call   f010409a <cprintf>$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104981	obj/kern/kernel.asm	/^f0104981:	c7 04 24 8f 86 10 f0 	movl   $0xf010868f,(%esp)$/;"	l
f0104988	obj/kern/kernel.asm	/^f0104988:	e8 0d f7 ff ff       	call   f010409a <cprintf>$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104991	obj/kern/kernel.asm	/^f0104991:	74 27                	je     f01049ba <print_trapframe+0x194>$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	c7 04 24 9e 86 10 f0 	movl   $0xf010869e,(%esp)$/;"	l
f01049a1	obj/kern/kernel.asm	/^f01049a1:	e8 f4 f6 ff ff       	call   f010409a <cprintf>$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f01049aa	obj/kern/kernel.asm	/^f01049aa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae:	c7 04 24 ad 86 10 f0 	movl   $0xf01086ad,(%esp)$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	e8 e0 f6 ff ff       	call   f010409a <cprintf>$/;"	l
f01049ba	obj/kern/kernel.asm	/^f01049ba:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	5b                   	pop    %ebx$/;"	l
f01049be	obj/kern/kernel.asm	/^f01049be:	5e                   	pop    %esi$/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	5d                   	pop    %ebp$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	c3                   	ret    $/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1 <page_fault_handler>:$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	55                   	push   %ebp$/;"	l
f01049c2	obj/kern/kernel.asm	/^f01049c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01049c4	obj/kern/kernel.asm	/^f01049c4:	83 ec 38             	sub    $0x38,%esp$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01049cd	obj/kern/kernel.asm	/^f01049cd:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f01049d6	obj/kern/kernel.asm	/^f01049d6:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	75 1c                	jne    f01049f8 <page_fault_handler+0x37>$/;"	l
f01049dc	obj/kern/kernel.asm	/^f01049dc:	c7 44 24 08 c0 86 10 	movl   $0xf01086c0,0x8(%esp)$/;"	l
f01049e3	obj/kern/kernel.asm	/^f01049e3:	f0 $/;"	l
f01049e4	obj/kern/kernel.asm	/^f01049e4:	c7 44 24 04 87 01 00 	movl   $0x187,0x4(%esp)$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	00 $/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec:	c7 04 24 d8 86 10 f0 	movl   $0xf01086d8,(%esp)$/;"	l
f01049f3	obj/kern/kernel.asm	/^f01049f3:	e8 48 b6 ff ff       	call   f0100040 <_panic>$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8:	e8 47 22 00 00       	call   f0106c44 <cpunum>$/;"	l
f01049fd	obj/kern/kernel.asm	/^f01049fd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a00	obj/kern/kernel.asm	/^f0104a00:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	0f 84 03 01 00 00    	je     f0104b13 <page_fault_handler+0x152>$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	83 e8 38             	sub    $0x38,%eax$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	81 fa ff 0f 00 00    	cmp    $0xfff,%edx$/;"	l
f0104a22	obj/kern/kernel.asm	/^f0104a22:	ba cc ff bf ee       	mov    $0xeebfffcc,%edx$/;"	l
f0104a27	obj/kern/kernel.asm	/^f0104a27:	0f 46 d0             	cmovbe %eax,%edx$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104a2d	obj/kern/kernel.asm	/^f0104a2d:	e8 12 22 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	00 $/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	00 $/;"	l
f0104a42	obj/kern/kernel.asm	/^f0104a42:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104a49	obj/kern/kernel.asm	/^f0104a49:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	e8 0e ec ff ff       	call   f0103668 <user_mem_assert>$/;"	l
f0104a5a	obj/kern/kernel.asm	/^f0104a5a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	89 30                	mov    %esi,(%eax)$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	89 d7                	mov    %edx,%edi$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	83 c7 08             	add    $0x8,%edi$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	89 de                	mov    %ebx,%esi$/;"	l
f0104a6f	obj/kern/kernel.asm	/^f0104a6f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0104a74	obj/kern/kernel.asm	/^f0104a74:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	74 03                	je     f0104a7f <page_fault_handler+0xbe>$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	b0 1f                	mov    $0x1f,%al$/;"	l
f0104a7f	obj/kern/kernel.asm	/^f0104a7f:	f7 c7 02 00 00 00    	test   $0x2,%edi$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	74 05                	je     f0104a8c <page_fault_handler+0xcb>$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	66 a5                	movsw  %ds:(%esi),%es:(%edi)$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	89 c1                	mov    %eax,%ecx$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104a91	obj/kern/kernel.asm	/^f0104a91:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104a93	obj/kern/kernel.asm	/^f0104a93:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	a8 02                	test   $0x2,%al$/;"	l
f0104a9a	obj/kern/kernel.asm	/^f0104a9a:	74 0b                	je     f0104aa7 <page_fault_handler+0xe6>$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	0f b7 16             	movzwl (%esi),%edx$/;"	l
f0104a9f	obj/kern/kernel.asm	/^f0104a9f:	66 89 17             	mov    %dx,(%edi)$/;"	l
f0104aa2	obj/kern/kernel.asm	/^f0104aa2:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	a8 01                	test   $0x1,%al$/;"	l
f0104aa9	obj/kern/kernel.asm	/^f0104aa9:	74 07                	je     f0104ab2 <page_fault_handler+0xf1>$/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax$/;"	l
f0104aaf	obj/kern/kernel.asm	/^f0104aaf:	88 04 17             	mov    %al,(%edi,%edx,1)$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104ab8	obj/kern/kernel.asm	/^f0104ab8:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104ac4	obj/kern/kernel.asm	/^f0104ac4:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0104ac7	obj/kern/kernel.asm	/^f0104ac7:	e8 78 21 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	8b 98 28 90 1d f0    	mov    -0xfe26fd8(%eax),%ebx$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	e8 6a 21 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104ae3	obj/kern/kernel.asm	/^f0104ae3:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0104ae6	obj/kern/kernel.asm	/^f0104ae6:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0104ae9	obj/kern/kernel.asm	/^f0104ae9:	e8 56 21 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104af1	obj/kern/kernel.asm	/^f0104af1:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104afa	obj/kern/kernel.asm	/^f0104afa:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	e8 42 21 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104b02	obj/kern/kernel.asm	/^f0104b02:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	e8 3a f3 ff ff       	call   f0103e4d <env_run>$/;"	l
f0104b13	obj/kern/kernel.asm	/^f0104b13:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0104b16	obj/kern/kernel.asm	/^f0104b16:	e8 29 21 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0104b23	obj/kern/kernel.asm	/^f0104b23:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104b2f	obj/kern/kernel.asm	/^f0104b2f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	c7 04 24 90 88 10 f0 	movl   $0xf0108890,(%esp)$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	e8 5b f5 ff ff       	call   f010409a <cprintf>$/;"	l
f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	e8 df fc ff ff       	call   f0104826 <print_trapframe>$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	e8 f8 20 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104b4c	obj/kern/kernel.asm	/^f0104b4c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b4f	obj/kern/kernel.asm	/^f0104b4f:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104b55	obj/kern/kernel.asm	/^f0104b55:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b58	obj/kern/kernel.asm	/^f0104b58:	e8 4f f2 ff ff       	call   f0103dac <env_destroy>$/;"	l
f0104b5d	obj/kern/kernel.asm	/^f0104b5d:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0104b60	obj/kern/kernel.asm	/^f0104b60:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	89 ec                	mov    %ebp,%esp$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	5d                   	pop    %ebp$/;"	l
f0104b69	obj/kern/kernel.asm	/^f0104b69:	c3                   	ret    $/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a <trap>:$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	55                   	push   %ebp$/;"	l
f0104b6b	obj/kern/kernel.asm	/^f0104b6b:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b6d	obj/kern/kernel.asm	/^f0104b6d:	57                   	push   %edi$/;"	l
f0104b6e	obj/kern/kernel.asm	/^f0104b6e:	56                   	push   %esi$/;"	l
f0104b6f	obj/kern/kernel.asm	/^f0104b6f:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104b75	obj/kern/kernel.asm	/^f0104b75:	fc                   	cld    $/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	83 3d 80 8e 1d f0 00 	cmpl   $0x0,0xf01d8e80$/;"	l
f0104b7d	obj/kern/kernel.asm	/^f0104b7d:	74 01                	je     f0104b80 <trap+0x16>$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	f4                   	hlt    $/;"	l
f0104b80	obj/kern/kernel.asm	/^f0104b80:	9c                   	pushf  $/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	58                   	pop    %eax$/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104b85	obj/kern/kernel.asm	/^f0104b85:	74 24                	je     f0104bab <trap+0x41>$/;"	l
f0104b87	obj/kern/kernel.asm	/^f0104b87:	c7 44 24 0c e4 86 10 	movl   $0xf01086e4,0xc(%esp)$/;"	l
f0104b8e	obj/kern/kernel.asm	/^f0104b8e:	f0 $/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	f0 $/;"	l
f0104b97	obj/kern/kernel.asm	/^f0104b97:	c7 44 24 04 4f 01 00 	movl   $0x14f,0x4(%esp)$/;"	l
f0104b9e	obj/kern/kernel.asm	/^f0104b9e:	00 $/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	c7 04 24 d8 86 10 f0 	movl   $0xf01086d8,(%esp)$/;"	l
f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	e8 95 b4 ff ff       	call   f0100040 <_panic>$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104bb5	obj/kern/kernel.asm	/^f0104bb5:	0f 85 a7 00 00 00    	jne    f0104c62 <trap+0xf8>$/;"	l
f0104bbb	obj/kern/kernel.asm	/^f0104bbb:	c7 04 24 80 33 12 f0 	movl   $0xf0123380,(%esp)$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	e8 19 23 00 00       	call   f0106ee0 <spin_lock>$/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	e8 78 20 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	83 b8 28 90 1d f0 00 	cmpl   $0x0,-0xfe26fd8(%eax)$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	75 24                	jne    f0104bfc <trap+0x92>$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	c7 44 24 0c fd 86 10 	movl   $0xf01086fd,0xc(%esp)$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	f0 $/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0:	c7 44 24 08 b7 81 10 	movl   $0xf01081b7,0x8(%esp)$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	f0 $/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	c7 44 24 04 58 01 00 	movl   $0x158,0x4(%esp)$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	00 $/;"	l
f0104bf0	obj/kern/kernel.asm	/^f0104bf0:	c7 04 24 d8 86 10 f0 	movl   $0xf01086d8,(%esp)$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	e8 44 b4 ff ff       	call   f0100040 <_panic>$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc:	e8 43 20 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104c01	obj/kern/kernel.asm	/^f0104c01:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	75 2d                	jne    f0104c3d <trap+0xd3>$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	e8 2f 20 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	e8 b2 ef ff ff       	call   f0103bd8 <env_free>$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	e8 19 20 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	c7 80 28 90 1d f0 00 	movl   $0x0,-0xfe26fd8(%eax)$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	00 00 00 $/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	e8 77 02 00 00       	call   f0104eb4 <sched_yield>$/;"	l
f0104c3d	obj/kern/kernel.asm	/^f0104c3d:	e8 02 20 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104c4b	obj/kern/kernel.asm	/^f0104c4b:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	89 c7                	mov    %eax,%edi$/;"	l
f0104c52	obj/kern/kernel.asm	/^f0104c52:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	e8 eb 1f 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104c59	obj/kern/kernel.asm	/^f0104c59:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	8b b0 28 90 1d f0    	mov    -0xfe26fd8(%eax),%esi$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	89 35 60 8a 1d f0    	mov    %esi,0xf01d8a60$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	83 7e 28 0e          	cmpl   $0xe,0x28(%esi)$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	75 08                	jne    f0104c76 <trap+0x10c>$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104c71	obj/kern/kernel.asm	/^f0104c71:	e8 4b fd ff ff       	call   f01049c1 <page_fault_handler>$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104c79	obj/kern/kernel.asm	/^f0104c79:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	74 05                	je     f0104c83 <trap+0x119>$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	75 08                	jne    f0104c8b <trap+0x121>$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86:	e8 5e c1 ff ff       	call   f0100de9 <monitor>$/;"	l
f0104c8b	obj/kern/kernel.asm	/^f0104c8b:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	75 60                	jne    f0104cf3 <trap+0x189>$/;"	l
f0104c93	obj/kern/kernel.asm	/^f0104c93:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	8b 06                	mov    (%esi),%eax$/;"	l
f0104c9c	obj/kern/kernel.asm	/^f0104c9c:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104ca7	obj/kern/kernel.asm	/^f0104ca7:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104cb5	obj/kern/kernel.asm	/^f0104cb5:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	e8 50 03 00 00       	call   f0105010 <syscall>$/;"	l
f0104cc0	obj/kern/kernel.asm	/^f0104cc0:	89 c2                	mov    %eax,%edx$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	84 d2                	test   %dl,%dl$/;"	l
f0104cc7	obj/kern/kernel.asm	/^f0104cc7:	74 25                	je     f0104cee <trap+0x184>$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	83 f8 f9             	cmp    $0xfffffff9,%eax$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	74 20                	je     f0104cee <trap+0x184>$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104cd2	obj/kern/kernel.asm	/^f0104cd2:	c7 44 24 08 04 87 10 	movl   $0xf0108704,0x8(%esp)$/;"	l
f0104cd9	obj/kern/kernel.asm	/^f0104cd9:	f0 $/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	c7 44 24 04 1d 01 00 	movl   $0x11d,0x4(%esp)$/;"	l
f0104ce1	obj/kern/kernel.asm	/^f0104ce1:	00 $/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	c7 04 24 d8 86 10 f0 	movl   $0xf01086d8,(%esp)$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	e8 52 b3 ff ff       	call   f0100040 <_panic>$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104cf1	obj/kern/kernel.asm	/^f0104cf1:	eb 6b                	jmp    f0104d5e <trap+0x1f4>$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	75 16                	jne    f0104d0e <trap+0x1a4>$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	c7 04 24 16 87 10 f0 	movl   $0xf0108716,(%esp)$/;"	l
f0104cff	obj/kern/kernel.asm	/^f0104cff:	e8 96 f3 ff ff       	call   f010409a <cprintf>$/;"	l
f0104d04	obj/kern/kernel.asm	/^f0104d04:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	e8 1a fb ff ff       	call   f0104826 <print_trapframe>$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	eb 50                	jmp    f0104d5e <trap+0x1f4>$/;"	l
f0104d0e	obj/kern/kernel.asm	/^f0104d0e:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	75 0a                	jne    f0104d1d <trap+0x1b3>$/;"	l
f0104d13	obj/kern/kernel.asm	/^f0104d13:	e8 61 20 00 00       	call   f0106d79 <lapic_eoi>$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	e8 97 01 00 00       	call   f0104eb4 <sched_yield>$/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	e8 01 fb ff ff       	call   f0104826 <print_trapframe>$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	75 1c                	jne    f0104d48 <trap+0x1de>$/;"	l
f0104d2c	obj/kern/kernel.asm	/^f0104d2c:	c7 44 24 08 33 87 10 	movl   $0xf0108733,0x8(%esp)$/;"	l
f0104d33	obj/kern/kernel.asm	/^f0104d33:	f0 $/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	c7 44 24 04 39 01 00 	movl   $0x139,0x4(%esp)$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	00 $/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	c7 04 24 d8 86 10 f0 	movl   $0xf01086d8,(%esp)$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	e8 f8 b2 ff ff       	call   f0100040 <_panic>$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	e8 f7 1e 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104d56	obj/kern/kernel.asm	/^f0104d56:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d59	obj/kern/kernel.asm	/^f0104d59:	e8 4e f0 ff ff       	call   f0103dac <env_destroy>$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	e8 e1 1e 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	83 b8 28 90 1d f0 00 	cmpl   $0x0,-0xfe26fd8(%eax)$/;"	l
f0104d6d	obj/kern/kernel.asm	/^f0104d6d:	74 2a                	je     f0104d99 <trap+0x22f>$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	e8 d0 1e 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104d7d	obj/kern/kernel.asm	/^f0104d7d:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	75 16                	jne    f0104d99 <trap+0x22f>$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	e8 bc 1e 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d8b	obj/kern/kernel.asm	/^f0104d8b:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104d91	obj/kern/kernel.asm	/^f0104d91:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94:	e8 b4 f0 ff ff       	call   f0103e4d <env_run>$/;"	l
f0104d99	obj/kern/kernel.asm	/^f0104d99:	e8 16 01 00 00       	call   f0104eb4 <sched_yield>$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0 <L_DIVIDE>:$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0:	6a 00                	push   $0x0$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	6a 00                	push   $0x0$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	e9 ef 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104da9	obj/kern/kernel.asm	/^f0104da9:	90                   	nop$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa <L_DEBUG>:$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	6a 00                	push   $0x0$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	6a 01                	push   $0x1$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	e9 e5 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104db3	obj/kern/kernel.asm	/^f0104db3:	90                   	nop$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4 <L_NMI>:$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	6a 00                	push   $0x0$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	6a 02                	push   $0x2$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	e9 db 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104dbd	obj/kern/kernel.asm	/^f0104dbd:	90                   	nop$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe <L_BRKPT>:$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	6a 00                	push   $0x0$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	6a 03                	push   $0x3$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2:	e9 d1 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	90                   	nop$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8 <L_OFLOW>:$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	6a 00                	push   $0x0$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	6a 04                	push   $0x4$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	e9 c7 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104dd1	obj/kern/kernel.asm	/^f0104dd1:	90                   	nop$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2 <L_BOUND>:$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	6a 00                	push   $0x0$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	6a 05                	push   $0x5$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6:	e9 bd 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104ddb	obj/kern/kernel.asm	/^f0104ddb:	90                   	nop$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc <L_ILLOP>:$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	6a 00                	push   $0x0$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	6a 06                	push   $0x6$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	e9 b3 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104de5	obj/kern/kernel.asm	/^f0104de5:	90                   	nop$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6 <L_DEVICE>:$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	6a 00                	push   $0x0$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	6a 07                	push   $0x7$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	e9 a9 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	90                   	nop$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0 <L_DBLFLT>:$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0:	6a 08                	push   $0x8$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	e9 a1 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	90                   	nop$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8 <L_TSS>:$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	6a 0a                	push   $0xa$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa:	e9 99 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104dff	obj/kern/kernel.asm	/^f0104dff:	90                   	nop$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00 <L_SEGNP>:$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	6a 0b                	push   $0xb$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	e9 91 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	90                   	nop$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08 <L_STACK>:$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	6a 0c                	push   $0xc$/;"	l
f0104e0a	obj/kern/kernel.asm	/^f0104e0a:	e9 89 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104e0f	obj/kern/kernel.asm	/^f0104e0f:	90                   	nop$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10 <L_GPFLT>:$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	6a 0d                	push   $0xd$/;"	l
f0104e12	obj/kern/kernel.asm	/^f0104e12:	e9 81 00 00 00       	jmp    f0104e98 <_alltraps>$/;"	l
f0104e17	obj/kern/kernel.asm	/^f0104e17:	90                   	nop$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18 <L_PGFLT>:$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18:	6a 0e                	push   $0xe$/;"	l
f0104e1a	obj/kern/kernel.asm	/^f0104e1a:	eb 7c                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c <L_FPERR>:$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	6a 00                	push   $0x0$/;"	l
f0104e1e	obj/kern/kernel.asm	/^f0104e1e:	6a 10                	push   $0x10$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20:	eb 76                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22 <L_ALIGN>:$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	6a 11                	push   $0x11$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	eb 72                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26 <L_MCHK>:$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	6a 00                	push   $0x0$/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28:	6a 12                	push   $0x12$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	eb 6c                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c <L_SIMDERR>:$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	6a 00                	push   $0x0$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	6a 13                	push   $0x13$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30:	eb 66                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e32	obj/kern/kernel.asm	/^f0104e32 <L_SYSCALL>:$/;"	l
f0104e32	obj/kern/kernel.asm	/^f0104e32:	6a 00                	push   $0x0$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	6a 30                	push   $0x30$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	eb 60                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38 <L_IRQ0>:$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	6a 00                	push   $0x0$/;"	l
f0104e3a	obj/kern/kernel.asm	/^f0104e3a:	6a 20                	push   $0x20$/;"	l
f0104e3c	obj/kern/kernel.asm	/^f0104e3c:	eb 5a                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e <L_IRQ1>:$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e:	6a 00                	push   $0x0$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	6a 21                	push   $0x21$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	eb 54                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44 <L_IRQ2>:$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	6a 00                	push   $0x0$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	6a 22                	push   $0x22$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	eb 4e                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a <L_IRQ3>:$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	6a 00                	push   $0x0$/;"	l
f0104e4c	obj/kern/kernel.asm	/^f0104e4c:	6a 23                	push   $0x23$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	eb 48                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50 <L_IRQ4>:$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	6a 00                	push   $0x0$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	6a 24                	push   $0x24$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	eb 42                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56 <L_IRQ5>:$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56:	6a 00                	push   $0x0$/;"	l
f0104e58	obj/kern/kernel.asm	/^f0104e58:	6a 25                	push   $0x25$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	eb 3c                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c <L_IRQ6>:$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	6a 00                	push   $0x0$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	6a 26                	push   $0x26$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	eb 36                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62 <L_IRQ7>:$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	6a 00                	push   $0x0$/;"	l
f0104e64	obj/kern/kernel.asm	/^f0104e64:	6a 27                	push   $0x27$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	eb 30                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68 <L_IRQ8>:$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	6a 00                	push   $0x0$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	6a 28                	push   $0x28$/;"	l
f0104e6c	obj/kern/kernel.asm	/^f0104e6c:	eb 2a                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e6e	obj/kern/kernel.asm	/^f0104e6e <L_IRQ9>:$/;"	l
f0104e6e	obj/kern/kernel.asm	/^f0104e6e:	6a 00                	push   $0x0$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	6a 29                	push   $0x29$/;"	l
f0104e72	obj/kern/kernel.asm	/^f0104e72:	eb 24                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74 <L_IRQ10>:$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74:	6a 00                	push   $0x0$/;"	l
f0104e76	obj/kern/kernel.asm	/^f0104e76:	6a 2a                	push   $0x2a$/;"	l
f0104e78	obj/kern/kernel.asm	/^f0104e78:	eb 1e                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a <L_IRQ11>:$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	6a 00                	push   $0x0$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	6a 2b                	push   $0x2b$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	eb 18                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e80	obj/kern/kernel.asm	/^f0104e80 <L_IRQ12>:$/;"	l
f0104e80	obj/kern/kernel.asm	/^f0104e80:	6a 00                	push   $0x0$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	6a 2c                	push   $0x2c$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	eb 12                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86 <L_IRQ13>:$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	6a 00                	push   $0x0$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	6a 2d                	push   $0x2d$/;"	l
f0104e8a	obj/kern/kernel.asm	/^f0104e8a:	eb 0c                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e8c	obj/kern/kernel.asm	/^f0104e8c <L_IRQ14>:$/;"	l
f0104e8c	obj/kern/kernel.asm	/^f0104e8c:	6a 00                	push   $0x0$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	6a 2e                	push   $0x2e$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	eb 06                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92 <L_IRQ15>:$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	6a 00                	push   $0x0$/;"	l
f0104e94	obj/kern/kernel.asm	/^f0104e94:	6a 2f                	push   $0x2f$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	eb 00                	jmp    f0104e98 <_alltraps>$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98 <_alltraps>:$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98:	66 6a 00             	pushw  $0x0$/;"	l
f0104e9b	obj/kern/kernel.asm	/^f0104e9b:	66 1e                	pushw  %ds$/;"	l
f0104e9d	obj/kern/kernel.asm	/^f0104e9d:	66 6a 00             	pushw  $0x0$/;"	l
f0104ea0	obj/kern/kernel.asm	/^f0104ea0:	66 06                	pushw  %es$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	60                   	pusha  $/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0104ea8	obj/kern/kernel.asm	/^f0104ea8:	8e d8                	mov    %eax,%ds$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	8e c0                	mov    %eax,%es$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	54                   	push   %esp$/;"	l
f0104ead	obj/kern/kernel.asm	/^f0104ead:	e8 b8 fc ff ff       	call   f0104b6a <trap>$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4 <sched_yield>:$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	55                   	push   %ebp$/;"	l
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	89 e5                	mov    %esp,%ebp$/;"	l
f0104eb7	obj/kern/kernel.asm	/^f0104eb7:	57                   	push   %edi$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	56                   	push   %esi$/;"	l
f0104eb9	obj/kern/kernel.asm	/^f0104eb9:	53                   	push   %ebx$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	e8 82 1d 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104ec5	obj/kern/kernel.asm	/^f0104ec5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	83 ba 28 90 1d f0 00 	cmpl   $0x0,-0xfe26fd8(%edx)$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	74 19                	je     f0104eec <sched_yield+0x38>$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	e8 6c 1d 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104ed8	obj/kern/kernel.asm	/^f0104ed8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104ee4	obj/kern/kernel.asm	/^f0104ee4:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104ee9	obj/kern/kernel.asm	/^f0104ee9:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	8b 1d 3c 82 1d f0    	mov    0xf01d823c,%ebx$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	c7 45 e4 03 00 00 00 	movl   $0x3,-0x1c(%ebp)$/;"	l
f0104f0a	obj/kern/kernel.asm	/^f0104f0a:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104f14	obj/kern/kernel.asm	/^f0104f14:	0f 4d c6             	cmovge %esi,%eax$/;"	l
f0104f17	obj/kern/kernel.asm	/^f0104f17:	89 c1                	mov    %eax,%ecx$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	c1 e1 07             	shl    $0x7,%ecx$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	8d 0c 81             	lea    (%ecx,%eax,4),%ecx$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	8d 0c 0b             	lea    (%ebx,%ecx,1),%ecx$/;"	l
f0104f22	obj/kern/kernel.asm	/^f0104f22:	83 79 54 02          	cmpl   $0x2,0x54(%ecx)$/;"	l
f0104f26	obj/kern/kernel.asm	/^f0104f26:	75 1a                	jne    f0104f42 <sched_yield+0x8e>$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	83 79 50 01          	cmpl   $0x1,0x50(%ecx)$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	74 14                	je     f0104f42 <sched_yield+0x8e>$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	8b 49 7c             	mov    0x7c(%ecx),%ecx$/;"	l
f0104f31	obj/kern/kernel.asm	/^f0104f31:	3b 4d e4             	cmp    -0x1c(%ebp),%ecx$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	7d 06                	jge    f0104f3c <sched_yield+0x88>$/;"	l
f0104f36	obj/kern/kernel.asm	/^f0104f36:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104f39	obj/kern/kernel.asm	/^f0104f39:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	83 ff ff             	cmp    $0xffffffff,%edi$/;"	l
f0104f3f	obj/kern/kernel.asm	/^f0104f3f:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0104f45	obj/kern/kernel.asm	/^f0104f45:	74 05                	je     f0104f4c <sched_yield+0x98>$/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104f4a	obj/kern/kernel.asm	/^f0104f4a:	eb c3                	jmp    f0104f0f <sched_yield+0x5b>$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c:	83 7d e0 ff          	cmpl   $0xffffffff,-0x20(%ebp)$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	74 11                	je     f0104f63 <sched_yield+0xaf>$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	69 45 e0 84 00 00 00 	imul   $0x84,-0x20(%ebp),%eax$/;"	l
f0104f59	obj/kern/kernel.asm	/^f0104f59:	01 c3                	add    %eax,%ebx$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104f5e	obj/kern/kernel.asm	/^f0104f5e:	e8 ea ee ff ff       	call   f0103e4d <env_run>$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	83 ff ff             	cmp    $0xffffffff,%edi$/;"	l
f0104f66	obj/kern/kernel.asm	/^f0104f66:	74 10                	je     f0104f78 <sched_yield+0xc4>$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	69 ff 84 00 00 00    	imul   $0x84,%edi,%edi$/;"	l
f0104f6e	obj/kern/kernel.asm	/^f0104f6e:	01 fb                	add    %edi,%ebx$/;"	l
f0104f70	obj/kern/kernel.asm	/^f0104f70:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	e8 d5 ee ff ff       	call   f0103e4d <env_run>$/;"	l
f0104f78	obj/kern/kernel.asm	/^f0104f78:	89 d8                	mov    %ebx,%eax$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	83 78 50 01          	cmpl   $0x1,0x50(%eax)$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	74 0b                	je     f0104f90 <sched_yield+0xdc>$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	8b 48 54             	mov    0x54(%eax),%ecx$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	83 e9 02             	sub    $0x2,%ecx$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0104f8e	obj/kern/kernel.asm	/^f0104f8e:	76 12                	jbe    f0104fa2 <sched_yield+0xee>$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104f93	obj/kern/kernel.asm	/^f0104f93:	05 84 00 00 00       	add    $0x84,%eax$/;"	l
f0104f98	obj/kern/kernel.asm	/^f0104f98:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	75 df                	jne    f0104f7f <sched_yield+0xcb>$/;"	l
f0104fa0	obj/kern/kernel.asm	/^f0104fa0:	eb 08                	jmp    f0104faa <sched_yield+0xf6>$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	75 1a                	jne    f0104fc4 <sched_yield+0x110>$/;"	l
f0104faa	obj/kern/kernel.asm	/^f0104faa:	c7 04 24 10 89 10 f0 	movl   $0xf0108910,(%esp)$/;"	l
f0104fb1	obj/kern/kernel.asm	/^f0104fb1:	e8 e4 f0 ff ff       	call   f010409a <cprintf>$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	e8 27 be ff ff       	call   f0100de9 <monitor>$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	eb f2                	jmp    f0104fb6 <sched_yield+0x102>$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4:	e8 7b 1c 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	69 c0 84 00 00 00    	imul   $0x84,%eax,%eax$/;"	l
f0104fcf	obj/kern/kernel.asm	/^f0104fcf:	01 c3                	add    %eax,%ebx$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	8b 43 54             	mov    0x54(%ebx),%eax$/;"	l
f0104fd4	obj/kern/kernel.asm	/^f0104fd4:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104fd7	obj/kern/kernel.asm	/^f0104fd7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104fda	obj/kern/kernel.asm	/^f0104fda:	76 25                	jbe    f0105001 <sched_yield+0x14d>$/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	e8 63 1c 00 00       	call   f0106c44 <cpunum>$/;"	l
f0104fe1	obj/kern/kernel.asm	/^f0104fe1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104fe5	obj/kern/kernel.asm	/^f0104fe5:	c7 44 24 08 30 89 10 	movl   $0xf0108930,0x8(%esp)$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	f0 $/;"	l
f0104fed	obj/kern/kernel.asm	/^f0104fed:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
f0104ff4	obj/kern/kernel.asm	/^f0104ff4:	00 $/;"	l
f0104ff5	obj/kern/kernel.asm	/^f0104ff5:	c7 04 24 4d 89 10 f0 	movl   $0xf010894d,(%esp)$/;"	l
f0104ffc	obj/kern/kernel.asm	/^f0104ffc:	e8 3f b0 ff ff       	call   f0100040 <_panic>$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105004	obj/kern/kernel.asm	/^f0105004:	e8 44 ee ff ff       	call   f0103e4d <env_run>$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	00 00                	add    %al,(%eax)$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	00 00                	add    %al,(%eax)$/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	00 00                	add    %al,(%eax)$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010 <syscall>:$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	55                   	push   %ebp$/;"	l
f0105011	obj/kern/kernel.asm	/^f0105011:	89 e5                	mov    %esp,%ebp$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105022	obj/kern/kernel.asm	/^f0105022:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105025	obj/kern/kernel.asm	/^f0105025:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105028	obj/kern/kernel.asm	/^f0105028:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f010502b	obj/kern/kernel.asm	/^f010502b:	0f 87 e2 06 00 00    	ja     f0105713 <syscall+0x703>$/;"	l
f0105031	obj/kern/kernel.asm	/^f0105031:	ff 24 85 60 89 10 f0 	jmp    *-0xfef76a0(,%eax,4)$/;"	l
f0105038	obj/kern/kernel.asm	/^f0105038:	e8 07 1c 00 00       	call   f0106c44 <cpunum>$/;"	l
f010503d	obj/kern/kernel.asm	/^f010503d:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105044	obj/kern/kernel.asm	/^f0105044:	00 $/;"	l
f0105045	obj/kern/kernel.asm	/^f0105045:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105049	obj/kern/kernel.asm	/^f0105049:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010504d	obj/kern/kernel.asm	/^f010504d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105050	obj/kern/kernel.asm	/^f0105050:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105059	obj/kern/kernel.asm	/^f0105059:	e8 0a e6 ff ff       	call   f0103668 <user_mem_assert>$/;"	l
f010505e	obj/kern/kernel.asm	/^f010505e:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066:	c7 04 24 5a 89 10 f0 	movl   $0xf010895a,(%esp)$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	e8 28 f0 ff ff       	call   f010409a <cprintf>$/;"	l
f0105072	obj/kern/kernel.asm	/^f0105072:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	e9 a3 06 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f010507c	obj/kern/kernel.asm	/^f010507c:	e8 fd b5 ff ff       	call   f010067e <cons_getc>$/;"	l
f0105081	obj/kern/kernel.asm	/^f0105081:	89 c6                	mov    %eax,%esi$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	e9 97 06 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f0105088	obj/kern/kernel.asm	/^f0105088:	e8 b7 1b 00 00       	call   f0106c44 <cpunum>$/;"	l
f010508d	obj/kern/kernel.asm	/^f010508d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105090	obj/kern/kernel.asm	/^f0105090:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	8b 70 48             	mov    0x48(%eax),%esi$/;"	l
f0105099	obj/kern/kernel.asm	/^f0105099:	e9 81 06 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f010509e	obj/kern/kernel.asm	/^f010509e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	00 $/;"	l
f01050a6	obj/kern/kernel.asm	/^f01050a6:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01050a9	obj/kern/kernel.asm	/^f01050a9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01050ad	obj/kern/kernel.asm	/^f01050ad:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	e8 b8 e6 ff ff       	call   f010376d <envid2env>$/;"	l
f01050b5	obj/kern/kernel.asm	/^f01050b5:	89 c6                	mov    %eax,%esi$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	85 c0                	test   %eax,%eax$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	0f 88 60 06 00 00    	js     f010571f <syscall+0x70f>$/;"	l
f01050bf	obj/kern/kernel.asm	/^f01050bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050c5	obj/kern/kernel.asm	/^f01050c5:	e8 e2 ec ff ff       	call   f0103dac <env_destroy>$/;"	l
f01050ca	obj/kern/kernel.asm	/^f01050ca:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01050cf	obj/kern/kernel.asm	/^f01050cf:	e9 4b 06 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	e8 db fd ff ff       	call   f0104eb4 <sched_yield>$/;"	l
f01050d9	obj/kern/kernel.asm	/^f01050d9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	e8 5f 1b 00 00       	call   f0106c44 <cpunum>$/;"	l
f01050e5	obj/kern/kernel.asm	/^f01050e5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f01050ee	obj/kern/kernel.asm	/^f01050ee:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01050f5	obj/kern/kernel.asm	/^f01050f5:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01050f8	obj/kern/kernel.asm	/^f01050f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050fb	obj/kern/kernel.asm	/^f01050fb:	e8 8a e7 ff ff       	call   f010388a <env_alloc>$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	89 c6                	mov    %eax,%esi$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	85 c0                	test   %eax,%eax$/;"	l
f0105104	obj/kern/kernel.asm	/^f0105104:	0f 88 15 06 00 00    	js     f010571f <syscall+0x70f>$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010510d	obj/kern/kernel.asm	/^f010510d:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	e8 2b 1b 00 00       	call   f0106c44 <cpunum>$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	8b b0 28 90 1d f0    	mov    -0xfe26fd8(%eax),%esi$/;"	l
f0105122	obj/kern/kernel.asm	/^f0105122:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0105127	obj/kern/kernel.asm	/^f0105127:	89 df                	mov    %ebx,%edi$/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010512e	obj/kern/kernel.asm	/^f010512e:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	8b 70 48             	mov    0x48(%eax),%esi$/;"	l
f0105138	obj/kern/kernel.asm	/^f0105138:	e9 e2 05 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f010513d	obj/kern/kernel.asm	/^f010513d:	83 fb 02             	cmp    $0x2,%ebx$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	74 0e                	je     f0105150 <syscall+0x140>$/;"	l
f0105142	obj/kern/kernel.asm	/^f0105142:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105147	obj/kern/kernel.asm	/^f0105147:	83 fb 04             	cmp    $0x4,%ebx$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a:	0f 85 cf 05 00 00    	jne    f010571f <syscall+0x70f>$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105157	obj/kern/kernel.asm	/^f0105157:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e:	00 $/;"	l
f010515f	obj/kern/kernel.asm	/^f010515f:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105166	obj/kern/kernel.asm	/^f0105166:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105169	obj/kern/kernel.asm	/^f0105169:	e8 ff e5 ff ff       	call   f010376d <envid2env>$/;"	l
f010516e	obj/kern/kernel.asm	/^f010516e:	89 c6                	mov    %eax,%esi$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	85 c0                	test   %eax,%eax$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	0f 88 a7 05 00 00    	js     f010571f <syscall+0x70f>$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010517b	obj/kern/kernel.asm	/^f010517b:	89 58 54             	mov    %ebx,0x54(%eax)$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105183	obj/kern/kernel.asm	/^f0105183:	e9 97 05 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010518d	obj/kern/kernel.asm	/^f010518d:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	0f 87 86 05 00 00    	ja     f010571f <syscall+0x70f>$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	8d 83 ff 0f 00 00    	lea    0xfff(%ebx),%eax$/;"	l
f010519f	obj/kern/kernel.asm	/^f010519f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01051a4	obj/kern/kernel.asm	/^f01051a4:	39 c3                	cmp    %eax,%ebx$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	0f 85 f4 00 00 00    	jne    f01052a0 <syscall+0x290>$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051af	obj/kern/kernel.asm	/^f01051af:	83 e0 05             	and    $0x5,%eax$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01051b5	obj/kern/kernel.asm	/^f01051b5:	0f 85 64 05 00 00    	jne    f010571f <syscall+0x70f>$/;"	l
f01051bb	obj/kern/kernel.asm	/^f01051bb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051be	obj/kern/kernel.asm	/^f01051be:	0d 07 0e 00 00       	or     $0xe07,%eax$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	3d 07 0e 00 00       	cmp    $0xe07,%eax$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	0f 85 51 05 00 00    	jne    f010571f <syscall+0x70f>$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01051dc	obj/kern/kernel.asm	/^f01051dc:	00 $/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01051e0	obj/kern/kernel.asm	/^f01051e0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01051e7	obj/kern/kernel.asm	/^f01051e7:	e8 81 e5 ff ff       	call   f010376d <envid2env>$/;"	l
f01051ec	obj/kern/kernel.asm	/^f01051ec:	66 be fe ff          	mov    $0xfffe,%si$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	85 c0                	test   %eax,%eax$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	0f 88 27 05 00 00    	js     f010571f <syscall+0x70f>$/;"	l
f01051f8	obj/kern/kernel.asm	/^f01051f8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01051ff	obj/kern/kernel.asm	/^f01051ff:	e8 77 c2 ff ff       	call   f010147b <page_alloc>$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	89 c7                	mov    %eax,%edi$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	85 c0                	test   %eax,%eax$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	0f 84 9c 00 00 00    	je     f01052aa <syscall+0x29a>$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105211	obj/kern/kernel.asm	/^f0105211:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105219	obj/kern/kernel.asm	/^f0105219:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105220	obj/kern/kernel.asm	/^f0105220:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105223	obj/kern/kernel.asm	/^f0105223:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	e8 21 c6 ff ff       	call   f010184c <page_insert>$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	89 c6                	mov    %eax,%esi$/;"	l
f010522d	obj/kern/kernel.asm	/^f010522d:	85 c0                	test   %eax,%eax$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	79 0d                	jns    f010523e <syscall+0x22e>$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	e8 c3 c2 ff ff       	call   f01014fc <page_free>$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	e9 e1 04 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f010523e	obj/kern/kernel.asm	/^f010523e:	89 f8                	mov    %edi,%eax$/;"	l
f0105240	obj/kern/kernel.asm	/^f0105240:	2b 05 90 8e 1d f0    	sub    0xf01d8e90,%eax$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	89 c2                	mov    %eax,%edx$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	3b 15 88 8e 1d f0    	cmp    0xf01d8e88,%edx$/;"	l
f0105257	obj/kern/kernel.asm	/^f0105257:	72 20                	jb     f0105279 <syscall+0x269>$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	f0 $/;"	l
f0105265	obj/kern/kernel.asm	/^f0105265:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c:	00 $/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	c7 04 24 9d 81 10 f0 	movl   $0xf010819d,(%esp)$/;"	l
f0105274	obj/kern/kernel.asm	/^f0105274:	e8 c7 ad ff ff       	call   f0100040 <_panic>$/;"	l
f0105279	obj/kern/kernel.asm	/^f0105279:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0105280	obj/kern/kernel.asm	/^f0105280:	00 $/;"	l
f0105281	obj/kern/kernel.asm	/^f0105281:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0105288	obj/kern/kernel.asm	/^f0105288:	00 $/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010528e	obj/kern/kernel.asm	/^f010528e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	e8 1b 13 00 00       	call   f01065b1 <memset>$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010529b	obj/kern/kernel.asm	/^f010529b:	e9 7f 04 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f01052a0	obj/kern/kernel.asm	/^f01052a0:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01052a5	obj/kern/kernel.asm	/^f01052a5:	e9 75 04 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	be fc ff ff ff       	mov    $0xfffffffc,%esi$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	e9 6b 04 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f01052b7	obj/kern/kernel.asm	/^f01052b7:	83 e0 05             	and    $0x5,%eax$/;"	l
f01052ba	obj/kern/kernel.asm	/^f01052ba:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01052bd	obj/kern/kernel.asm	/^f01052bd:	0f 85 f9 00 00 00    	jne    f01053bc <syscall+0x3ac>$/;"	l
f01052c3	obj/kern/kernel.asm	/^f01052c3:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f01052c6	obj/kern/kernel.asm	/^f01052c6:	0d 07 0e 00 00       	or     $0xe07,%eax$/;"	l
f01052cb	obj/kern/kernel.asm	/^f01052cb:	3d 07 0e 00 00       	cmp    $0xe07,%eax$/;"	l
f01052d0	obj/kern/kernel.asm	/^f01052d0:	0f 85 f0 00 00 00    	jne    f01053c6 <syscall+0x3b6>$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	00 $/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01052e1	obj/kern/kernel.asm	/^f01052e1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052e5	obj/kern/kernel.asm	/^f01052e5:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	e8 80 e4 ff ff       	call   f010376d <envid2env>$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	85 c0                	test   %eax,%eax$/;"	l
f01052f4	obj/kern/kernel.asm	/^f01052f4:	0f 88 25 04 00 00    	js     f010571f <syscall+0x70f>$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	00 $/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0105305	obj/kern/kernel.asm	/^f0105305:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105309	obj/kern/kernel.asm	/^f0105309:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010530f	obj/kern/kernel.asm	/^f010530f:	e8 59 e4 ff ff       	call   f010376d <envid2env>$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	85 c0                	test   %eax,%eax$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	0f 88 03 04 00 00    	js     f010571f <syscall+0x70f>$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0105322	obj/kern/kernel.asm	/^f0105322:	0f 87 a8 00 00 00    	ja     f01053d0 <syscall+0x3c0>$/;"	l
f0105328	obj/kern/kernel.asm	/^f0105328:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f010532f	obj/kern/kernel.asm	/^f010532f:	0f 87 9b 00 00 00    	ja     f01053d0 <syscall+0x3c0>$/;"	l
f0105335	obj/kern/kernel.asm	/^f0105335:	8d 83 ff 0f 00 00    	lea    0xfff(%ebx),%eax$/;"	l
f010533b	obj/kern/kernel.asm	/^f010533b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	66 be fd ff          	mov    $0xfffd,%si$/;"	l
f0105344	obj/kern/kernel.asm	/^f0105344:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	0f 85 d3 03 00 00    	jne    f010571f <syscall+0x70f>$/;"	l
f010534c	obj/kern/kernel.asm	/^f010534c:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f010534f	obj/kern/kernel.asm	/^f010534f:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0105354	obj/kern/kernel.asm	/^f0105354:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	39 45 18             	cmp    %eax,0x18(%ebp)$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	0f 85 bd 03 00 00    	jne    f010571f <syscall+0x70f>$/;"	l
f0105362	obj/kern/kernel.asm	/^f0105362:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105369	obj/kern/kernel.asm	/^f0105369:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376:	e8 cc c3 ff ff       	call   f0101747 <page_lookup>$/;"	l
f010537b	obj/kern/kernel.asm	/^f010537b:	85 c0                	test   %eax,%eax$/;"	l
f010537d	obj/kern/kernel.asm	/^f010537d:	0f 84 9c 03 00 00    	je     f010571f <syscall+0x70f>$/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f0105387	obj/kern/kernel.asm	/^f0105387:	74 0c                	je     f0105395 <syscall+0x385>$/;"	l
f0105389	obj/kern/kernel.asm	/^f0105389:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	0f 84 8a 03 00 00    	je     f010571f <syscall+0x70f>$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	8b 75 1c             	mov    0x1c(%ebp),%esi$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f010539c	obj/kern/kernel.asm	/^f010539c:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
f010539f	obj/kern/kernel.asm	/^f010539f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01053a3	obj/kern/kernel.asm	/^f01053a3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01053a7	obj/kern/kernel.asm	/^f01053a7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	e8 97 c4 ff ff       	call   f010184c <page_insert>$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	89 c6                	mov    %eax,%esi$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	e9 63 03 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01053c1	obj/kern/kernel.asm	/^f01053c1:	e9 59 03 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f01053c6	obj/kern/kernel.asm	/^f01053c6:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01053cb	obj/kern/kernel.asm	/^f01053cb:	e9 4f 03 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f01053d0	obj/kern/kernel.asm	/^f01053d0:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	e9 45 03 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f01053da	obj/kern/kernel.asm	/^f01053da:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01053df	obj/kern/kernel.asm	/^f01053df:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	0f 87 34 03 00 00    	ja     f010571f <syscall+0x70f>$/;"	l
f01053eb	obj/kern/kernel.asm	/^f01053eb:	8d 83 ff 0f 00 00    	lea    0xfff(%ebx),%eax$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	39 c3                	cmp    %eax,%ebx$/;"	l
f01053f8	obj/kern/kernel.asm	/^f01053f8:	75 46                	jne    f0105440 <syscall+0x430>$/;"	l
f01053fa	obj/kern/kernel.asm	/^f01053fa:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105401	obj/kern/kernel.asm	/^f0105401:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105408	obj/kern/kernel.asm	/^f0105408:	00 $/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010540c	obj/kern/kernel.asm	/^f010540c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	e8 55 e3 ff ff       	call   f010376d <envid2env>$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	66 be fe ff          	mov    $0xfffe,%si$/;"	l
f010541c	obj/kern/kernel.asm	/^f010541c:	85 c0                	test   %eax,%eax$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	0f 88 fb 02 00 00    	js     f010571f <syscall+0x70f>$/;"	l
f0105424	obj/kern/kernel.asm	/^f0105424:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105431	obj/kern/kernel.asm	/^f0105431:	e8 bf c3 ff ff       	call   f01017f5 <page_remove>$/;"	l
f0105436	obj/kern/kernel.asm	/^f0105436:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010543b	obj/kern/kernel.asm	/^f010543b:	e9 df 02 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445:	e9 d5 02 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	00 $/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	e8 05 e3 ff ff       	call   f010376d <envid2env>$/;"	l
f0105468	obj/kern/kernel.asm	/^f0105468:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f010546d	obj/kern/kernel.asm	/^f010546d:	85 c0                	test   %eax,%eax$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	0f 88 aa 02 00 00    	js     f010571f <syscall+0x70f>$/;"	l
f0105475	obj/kern/kernel.asm	/^f0105475:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	89 58 64             	mov    %ebx,0x64(%eax)$/;"	l
f010547b	obj/kern/kernel.asm	/^f010547b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105480	obj/kern/kernel.asm	/^f0105480:	e9 9a 02 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f0105485	obj/kern/kernel.asm	/^f0105485:	81 ff ff ff bf ee    	cmp    $0xeebfffff,%edi$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	77 13                	ja     f01054a0 <syscall+0x490>$/;"	l
f010548d	obj/kern/kernel.asm	/^f010548d:	8d 87 ff 0f 00 00    	lea    0xfff(%edi),%eax$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105498	obj/kern/kernel.asm	/^f0105498:	39 c7                	cmp    %eax,%edi$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	0f 85 7a 02 00 00    	jne    f010571a <syscall+0x70a>$/;"	l
f01054a0	obj/kern/kernel.asm	/^f01054a0:	e8 9f 17 00 00       	call   f0106c44 <cpunum>$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	c7 40 68 01 00 00 00 	movl   $0x1,0x68(%eax)$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	e8 8a 17 00 00       	call   f0106c44 <cpunum>$/;"	l
f01054ba	obj/kern/kernel.asm	/^f01054ba:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054bd	obj/kern/kernel.asm	/^f01054bd:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f01054c3	obj/kern/kernel.asm	/^f01054c3:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	e8 75 17 00 00       	call   f0106c44 <cpunum>$/;"	l
f01054cf	obj/kern/kernel.asm	/^f01054cf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054d2	obj/kern/kernel.asm	/^f01054d2:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	89 78 6c             	mov    %edi,0x6c(%eax)$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	e8 64 17 00 00       	call   f0106c44 <cpunum>$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054e3	obj/kern/kernel.asm	/^f01054e3:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f01054e9	obj/kern/kernel.asm	/^f01054e9:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01054f0	obj/kern/kernel.asm	/^f01054f0:	e8 bf f9 ff ff       	call   f0104eb4 <sched_yield>$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01054fc	obj/kern/kernel.asm	/^f01054fc:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010550a	obj/kern/kernel.asm	/^f010550a:	00 $/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105512	obj/kern/kernel.asm	/^f0105512:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105515	obj/kern/kernel.asm	/^f0105515:	e8 53 e2 ff ff       	call   f010376d <envid2env>$/;"	l
f010551a	obj/kern/kernel.asm	/^f010551a:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	85 c0                	test   %eax,%eax$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	0f 88 f8 01 00 00    	js     f010571f <syscall+0x70f>$/;"	l
f0105527	obj/kern/kernel.asm	/^f0105527:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	66 be f9 ff          	mov    $0xfff9,%si$/;"	l
f010552e	obj/kern/kernel.asm	/^f010552e:	83 78 68 00          	cmpl   $0x0,0x68(%eax)$/;"	l
f0105532	obj/kern/kernel.asm	/^f0105532:	0f 84 e7 01 00 00    	je     f010571f <syscall+0x70f>$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	83 78 74 00          	cmpl   $0x0,0x74(%eax)$/;"	l
f010553c	obj/kern/kernel.asm	/^f010553c:	0f 85 dd 01 00 00    	jne    f010571f <syscall+0x70f>$/;"	l
f0105542	obj/kern/kernel.asm	/^f0105542:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f0105549	obj/kern/kernel.asm	/^f0105549:	0f 87 c2 00 00 00    	ja     f0105611 <syscall+0x601>$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105552	obj/kern/kernel.asm	/^f0105552:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0105557	obj/kern/kernel.asm	/^f0105557:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010555c	obj/kern/kernel.asm	/^f010555c:	66 be fd ff          	mov    $0xfffd,%si$/;"	l
f0105560	obj/kern/kernel.asm	/^f0105560:	39 45 14             	cmp    %eax,0x14(%ebp)$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	0f 85 b6 01 00 00    	jne    f010571f <syscall+0x70f>$/;"	l
f0105569	obj/kern/kernel.asm	/^f0105569:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	83 e0 05             	and    $0x5,%eax$/;"	l
f010556f	obj/kern/kernel.asm	/^f010556f:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	0f 85 a7 01 00 00    	jne    f010571f <syscall+0x70f>$/;"	l
f0105578	obj/kern/kernel.asm	/^f0105578:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f010557b	obj/kern/kernel.asm	/^f010557b:	0d 07 0e 00 00       	or     $0xe07,%eax$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	3d 07 0e 00 00       	cmp    $0xe07,%eax$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	0f 85 94 01 00 00    	jne    f010571f <syscall+0x70f>$/;"	l
f010558b	obj/kern/kernel.asm	/^f010558b:	e8 b4 16 00 00       	call   f0106c44 <cpunum>$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0105593	obj/kern/kernel.asm	/^f0105593:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105597	obj/kern/kernel.asm	/^f0105597:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f010559a	obj/kern/kernel.asm	/^f010559a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010559e	obj/kern/kernel.asm	/^f010559e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055ad	obj/kern/kernel.asm	/^f01055ad:	e8 95 c1 ff ff       	call   f0101747 <page_lookup>$/;"	l
f01055b2	obj/kern/kernel.asm	/^f01055b2:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01055b7	obj/kern/kernel.asm	/^f01055b7:	85 c0                	test   %eax,%eax$/;"	l
f01055b9	obj/kern/kernel.asm	/^f01055b9:	0f 84 60 01 00 00    	je     f010571f <syscall+0x70f>$/;"	l
f01055bf	obj/kern/kernel.asm	/^f01055bf:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f01055c3	obj/kern/kernel.asm	/^f01055c3:	74 0c                	je     f01055d1 <syscall+0x5c1>$/;"	l
f01055c5	obj/kern/kernel.asm	/^f01055c5:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01055c8	obj/kern/kernel.asm	/^f01055c8:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	0f 84 4e 01 00 00    	je     f010571f <syscall+0x70f>$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	8b 4a 6c             	mov    0x6c(%edx),%ecx$/;"	l
f01055d7	obj/kern/kernel.asm	/^f01055d7:	81 f9 ff ff bf ee    	cmp    $0xeebfffff,%ecx$/;"	l
f01055dd	obj/kern/kernel.asm	/^f01055dd:	77 39                	ja     f0105618 <syscall+0x608>$/;"	l
f01055df	obj/kern/kernel.asm	/^f01055df:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01055ea	obj/kern/kernel.asm	/^f01055ea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055f4	obj/kern/kernel.asm	/^f01055f4:	e8 53 c2 ff ff       	call   f010184c <page_insert>$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	be fc ff ff ff       	mov    $0xfffffffc,%esi$/;"	l
f01055fe	obj/kern/kernel.asm	/^f01055fe:	85 c0                	test   %eax,%eax$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	0f 88 19 01 00 00    	js     f010571f <syscall+0x70f>$/;"	l
f0105606	obj/kern/kernel.asm	/^f0105606:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
f010560c	obj/kern/kernel.asm	/^f010560c:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	eb 07                	jmp    f0105618 <syscall+0x608>$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f010561b	obj/kern/kernel.asm	/^f010561b:	c7 46 68 00 00 00 00 	movl   $0x0,0x68(%esi)$/;"	l
f0105622	obj/kern/kernel.asm	/^f0105622:	e8 1d 16 00 00       	call   f0106c44 <cpunum>$/;"	l
f0105627	obj/kern/kernel.asm	/^f0105627:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010562a	obj/kern/kernel.asm	/^f010562a:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105633	obj/kern/kernel.asm	/^f0105633:	89 46 74             	mov    %eax,0x74(%esi)$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	89 58 70             	mov    %ebx,0x70(%eax)$/;"	l
f010563c	obj/kern/kernel.asm	/^f010563c:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0105643	obj/kern/kernel.asm	/^f0105643:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010564f	obj/kern/kernel.asm	/^f010564f:	e9 cb 00 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f010565b	obj/kern/kernel.asm	/^f010565b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662:	00 $/;"	l
f0105663	obj/kern/kernel.asm	/^f0105663:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010566d	obj/kern/kernel.asm	/^f010566d:	e8 fb e0 ff ff       	call   f010376d <envid2env>$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	85 c0                	test   %eax,%eax$/;"	l
f0105679	obj/kern/kernel.asm	/^f0105679:	0f 88 a0 00 00 00    	js     f010571f <syscall+0x70f>$/;"	l
f010567f	obj/kern/kernel.asm	/^f010567f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105682	obj/kern/kernel.asm	/^f0105682:	89 58 7c             	mov    %ebx,0x7c(%eax)$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	e9 90 00 00 00       	jmp    f010571f <syscall+0x70f>$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0105696	obj/kern/kernel.asm	/^f0105696:	00 $/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f010569a	obj/kern/kernel.asm	/^f010569a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01056a1	obj/kern/kernel.asm	/^f01056a1:	e8 c7 e0 ff ff       	call   f010376d <envid2env>$/;"	l
f01056a6	obj/kern/kernel.asm	/^f01056a6:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	85 c0                	test   %eax,%eax$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	78 70                	js     f010571f <syscall+0x70f>$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	85 db                	test   %ebx,%ebx$/;"	l
f01056b1	obj/kern/kernel.asm	/^f01056b1:	75 2c                	jne    f01056df <syscall+0x6cf>$/;"	l
f01056b3	obj/kern/kernel.asm	/^f01056b3:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	8b 46 44             	mov    0x44(%esi),%eax$/;"	l
f01056b9	obj/kern/kernel.asm	/^f01056b9:	8b 50 44             	mov    0x44(%eax),%edx$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc:	b9 21 00 00 00       	mov    $0x21,%ecx$/;"	l
f01056c1	obj/kern/kernel.asm	/^f01056c1:	89 c7                	mov    %eax,%edi$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01056c5	obj/kern/kernel.asm	/^f01056c5:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	89 82 80 00 00 00    	mov    %eax,0x80(%edx)$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01056dd	obj/kern/kernel.asm	/^f01056dd:	eb 40                	jmp    f010571f <syscall+0x70f>$/;"	l
f01056df	obj/kern/kernel.asm	/^f01056df:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01056e2	obj/kern/kernel.asm	/^f01056e2:	8b 82 80 00 00 00    	mov    0x80(%edx),%eax$/;"	l
f01056e8	obj/kern/kernel.asm	/^f01056e8:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01056ed	obj/kern/kernel.asm	/^f01056ed:	85 c0                	test   %eax,%eax$/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	74 2e                	je     f010571f <syscall+0x70f>$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	8b 5a 44             	mov    0x44(%edx),%ebx$/;"	l
f01056f4	obj/kern/kernel.asm	/^f01056f4:	b9 21 00 00 00       	mov    $0x21,%ecx$/;"	l
f01056f9	obj/kern/kernel.asm	/^f01056f9:	89 d7                	mov    %edx,%edi$/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	89 c6                	mov    %eax,%esi$/;"	l
f01056fd	obj/kern/kernel.asm	/^f01056fd:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	89 58 44             	mov    %ebx,0x44(%eax)$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f010570c	obj/kern/kernel.asm	/^f010570c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105711	obj/kern/kernel.asm	/^f0105711:	eb 0c                	jmp    f010571f <syscall+0x70f>$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718:	eb 05                	jmp    f010571f <syscall+0x70f>$/;"	l
f010571a	obj/kern/kernel.asm	/^f010571a:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010571f	obj/kern/kernel.asm	/^f010571f:	89 f0                	mov    %esi,%eax$/;"	l
f0105721	obj/kern/kernel.asm	/^f0105721:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0105727	obj/kern/kernel.asm	/^f0105727:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f010572a	obj/kern/kernel.asm	/^f010572a:	89 ec                	mov    %ebp,%esp$/;"	l
f010572c	obj/kern/kernel.asm	/^f010572c:	5d                   	pop    %ebp$/;"	l
f010572d	obj/kern/kernel.asm	/^f010572d:	c3                   	ret    $/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730 <stab_binsearch>:$/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730:	55                   	push   %ebp$/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	89 e5                	mov    %esp,%ebp$/;"	l
f0105733	obj/kern/kernel.asm	/^f0105733:	57                   	push   %edi$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	56                   	push   %esi$/;"	l
f0105735	obj/kern/kernel.asm	/^f0105735:	53                   	push   %ebx$/;"	l
f0105736	obj/kern/kernel.asm	/^f0105736:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010573c	obj/kern/kernel.asm	/^f010573c:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f010573f	obj/kern/kernel.asm	/^f010573f:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105742	obj/kern/kernel.asm	/^f0105742:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	39 c3                	cmp    %eax,%ebx$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	0f 8f 9c 00 00 00    	jg     f01057f0 <stab_binsearch+0xc0>$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010575e	obj/kern/kernel.asm	/^f010575e:	01 d8                	add    %ebx,%eax$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	89 c7                	mov    %eax,%edi$/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0105765	obj/kern/kernel.asm	/^f0105765:	01 c7                	add    %eax,%edi$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	d1 ff                	sar    %edi$/;"	d
f0105769	obj/kern/kernel.asm	/^f0105769:	39 df                	cmp    %ebx,%edi$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	7c 33                	jl     f01057a0 <stab_binsearch+0x70>$/;"	l
f010576d	obj/kern/kernel.asm	/^f010576d:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	0f b6 44 82 04       	movzbl 0x4(%edx,%eax,4),%eax$/;"	l
f0105778	obj/kern/kernel.asm	/^f0105778:	39 f0                	cmp    %esi,%eax$/;"	l
f010577a	obj/kern/kernel.asm	/^f010577a:	0f 84 bc 00 00 00    	je     f010583c <stab_binsearch+0x10c>$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	8d 44 7f fd          	lea    -0x3(%edi,%edi,2),%eax$/;"	l
f0105784	obj/kern/kernel.asm	/^f0105784:	8d 54 82 04          	lea    0x4(%edx,%eax,4),%edx$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	89 f8                	mov    %edi,%eax$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	39 d8                	cmp    %ebx,%eax$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	7c 0f                	jl     f01057a0 <stab_binsearch+0x70>$/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	75 ef                	jne    f010578a <stab_binsearch+0x5a>$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	e9 9e 00 00 00       	jmp    f010583e <stab_binsearch+0x10e>$/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	eb 3c                	jmp    f01057e1 <stab_binsearch+0xb1>$/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f01057a8	obj/kern/kernel.asm	/^f01057a8:	89 01                	mov    %eax,(%ecx)$/;"	l
f01057aa	obj/kern/kernel.asm	/^f01057aa:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	eb 2b                	jmp    f01057e1 <stab_binsearch+0xb1>$/;"	l
f01057b6	obj/kern/kernel.asm	/^f01057b6:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	76 14                	jbe    f01057cf <stab_binsearch+0x9f>$/;"	l
f01057bb	obj/kern/kernel.asm	/^f01057bb:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01057be	obj/kern/kernel.asm	/^f01057be:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	89 02                	mov    %eax,(%edx)$/;"	l
f01057c6	obj/kern/kernel.asm	/^f01057c6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01057cd	obj/kern/kernel.asm	/^f01057cd:	eb 12                	jmp    f01057e1 <stab_binsearch+0xb1>$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	89 01                	mov    %eax,(%ecx)$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f01057d8	obj/kern/kernel.asm	/^f01057d8:	89 c3                	mov    %eax,%ebx$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	39 5d ec             	cmp    %ebx,-0x14(%ebp)$/;"	l
f01057e4	obj/kern/kernel.asm	/^f01057e4:	0f 8d 71 ff ff ff    	jge    f010575b <stab_binsearch+0x2b>$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	75 0f                	jne    f01057ff <stab_binsearch+0xcf>$/;"	l
f01057f0	obj/kern/kernel.asm	/^f01057f0:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f01057f3	obj/kern/kernel.asm	/^f01057f3:	8b 03                	mov    (%ebx),%eax$/;"	l
f01057f5	obj/kern/kernel.asm	/^f01057f5:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01057f8	obj/kern/kernel.asm	/^f01057f8:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	89 02                	mov    %eax,(%edx)$/;"	l
f01057fd	obj/kern/kernel.asm	/^f01057fd:	eb 57                	jmp    f0105856 <stab_binsearch+0x126>$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	8b 0b                	mov    (%ebx),%ecx$/;"	l
f0105809	obj/kern/kernel.asm	/^f0105809:	39 c1                	cmp    %eax,%ecx$/;"	l
f010580b	obj/kern/kernel.asm	/^f010580b:	7d 28                	jge    f0105835 <stab_binsearch+0x105>$/;"	l
f010580d	obj/kern/kernel.asm	/^f010580d:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
f0105813	obj/kern/kernel.asm	/^f0105813:	0f b6 54 93 04       	movzbl 0x4(%ebx,%edx,4),%edx$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	39 f2                	cmp    %esi,%edx$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	74 19                	je     f0105835 <stab_binsearch+0x105>$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105827	obj/kern/kernel.asm	/^f0105827:	39 c1                	cmp    %eax,%ecx$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	7d 0a                	jge    f0105835 <stab_binsearch+0x105>$/;"	l
f010582b	obj/kern/kernel.asm	/^f010582b:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	75 ef                	jne    f0105824 <stab_binsearch+0xf4>$/;"	l
f0105835	obj/kern/kernel.asm	/^f0105835:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105838	obj/kern/kernel.asm	/^f0105838:	89 02                	mov    %eax,(%edx)$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	eb 1a                	jmp    f0105856 <stab_binsearch+0x126>$/;"	l
f010583c	obj/kern/kernel.asm	/^f010583c:	89 f8                	mov    %edi,%eax$/;"	l
f010583e	obj/kern/kernel.asm	/^f010583e:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	0f 82 54 ff ff ff    	jb     f01057a5 <stab_binsearch+0x75>$/;"	l
f0105851	obj/kern/kernel.asm	/^f0105851:	e9 60 ff ff ff       	jmp    f01057b6 <stab_binsearch+0x86>$/;"	l
f0105856	obj/kern/kernel.asm	/^f0105856:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	5b                   	pop    %ebx$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	5e                   	pop    %esi$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	5f                   	pop    %edi$/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	5d                   	pop    %ebp$/;"	l
f010585d	obj/kern/kernel.asm	/^f010585d:	c3                   	ret    $/;"	l
f010585e	obj/kern/kernel.asm	/^f010585e <debuginfo_eip>:$/;"	l
f010585e	obj/kern/kernel.asm	/^f010585e:	55                   	push   %ebp$/;"	l
f010585f	obj/kern/kernel.asm	/^f010585f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105861	obj/kern/kernel.asm	/^f0105861:	83 ec 68             	sub    $0x68,%esp$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f010586d	obj/kern/kernel.asm	/^f010586d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105870	obj/kern/kernel.asm	/^f0105870:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105873	obj/kern/kernel.asm	/^f0105873:	c7 03 a0 89 10 f0    	movl   $0xf01089a0,(%ebx)$/;"	l
f0105879	obj/kern/kernel.asm	/^f0105879:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	c7 43 08 a0 89 10 f0 	movl   $0xf01089a0,0x8(%ebx)$/;"	l
f0105887	obj/kern/kernel.asm	/^f0105887:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f010588e	obj/kern/kernel.asm	/^f010588e:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105891	obj/kern/kernel.asm	/^f0105891:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0105898	obj/kern/kernel.asm	/^f0105898:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f010589e	obj/kern/kernel.asm	/^f010589e:	0f 87 d7 00 00 00    	ja     f010597b <debuginfo_eip+0x11d>$/;"	l
f01058a4	obj/kern/kernel.asm	/^f01058a4:	e8 9b 13 00 00       	call   f0106c44 <cpunum>$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	00 $/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f01058b8	obj/kern/kernel.asm	/^f01058b8:	00 $/;"	l
f01058b9	obj/kern/kernel.asm	/^f01058b9:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0:	00 $/;"	l
f01058c1	obj/kern/kernel.asm	/^f01058c1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01058cd	obj/kern/kernel.asm	/^f01058cd:	e8 02 dd ff ff       	call   f01035d4 <user_mem_check>$/;"	l
f01058d2	obj/kern/kernel.asm	/^f01058d2:	85 c0                	test   %eax,%eax$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	0f 85 4f 02 00 00    	jne    f0105b29 <debuginfo_eip+0x2cb>$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	8b 15 04 00 20 00    	mov    0x200004,%edx$/;"	l
f01058e8	obj/kern/kernel.asm	/^f01058e8:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
f01058eb	obj/kern/kernel.asm	/^f01058eb:	8b 0d 08 00 20 00    	mov    0x200008,%ecx$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	8b 3d 0c 00 20 00    	mov    0x20000c,%edi$/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	e8 45 13 00 00       	call   f0106c44 <cpunum>$/;"	l
f01058ff	obj/kern/kernel.asm	/^f01058ff:	89 c2                	mov    %eax,%edx$/;"	l
f0105901	obj/kern/kernel.asm	/^f0105901:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105908	obj/kern/kernel.asm	/^f0105908:	00 $/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	2b 45 c0             	sub    -0x40(%ebp),%eax$/;"	l
f010590f	obj/kern/kernel.asm	/^f010590f:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0105912	obj/kern/kernel.asm	/^f0105912:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0105918	obj/kern/kernel.asm	/^f0105918:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f010591f	obj/kern/kernel.asm	/^f010591f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	6b c2 74             	imul   $0x74,%edx,%eax$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010592f	obj/kern/kernel.asm	/^f010592f:	e8 a0 dc ff ff       	call   f01035d4 <user_mem_check>$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	85 c0                	test   %eax,%eax$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	0f 85 f4 01 00 00    	jne    f0105b30 <debuginfo_eip+0x2d2>$/;"	l
f010593c	obj/kern/kernel.asm	/^f010593c:	e8 03 13 00 00       	call   f0106c44 <cpunum>$/;"	l
f0105941	obj/kern/kernel.asm	/^f0105941:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105948	obj/kern/kernel.asm	/^f0105948:	00 $/;"	l
f0105949	obj/kern/kernel.asm	/^f0105949:	89 fa                	mov    %edi,%edx$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	2b 55 c4             	sub    -0x3c(%ebp),%edx$/;"	l
f010594e	obj/kern/kernel.asm	/^f010594e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105952	obj/kern/kernel.asm	/^f0105952:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105959	obj/kern/kernel.asm	/^f0105959:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	8b 80 28 90 1d f0    	mov    -0xfe26fd8(%eax),%eax$/;"	l
f0105962	obj/kern/kernel.asm	/^f0105962:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105965	obj/kern/kernel.asm	/^f0105965:	e8 6a dc ff ff       	call   f01035d4 <user_mem_check>$/;"	l
f010596a	obj/kern/kernel.asm	/^f010596a:	89 c2                	mov    %eax,%edx$/;"	l
f010596c	obj/kern/kernel.asm	/^f010596c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	85 d2                	test   %edx,%edx$/;"	l
f0105973	obj/kern/kernel.asm	/^f0105973:	0f 85 ca 01 00 00    	jne    f0105b43 <debuginfo_eip+0x2e5>$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	eb 1a                	jmp    f0105995 <debuginfo_eip+0x137>$/;"	l
f010597b	obj/kern/kernel.asm	/^f010597b:	bf 75 80 11 f0       	mov    $0xf0118075,%edi$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	c7 45 c4 4d 47 11 f0 	movl   $0xf011474d,-0x3c(%ebp)$/;"	l
f0105987	obj/kern/kernel.asm	/^f0105987:	c7 45 bc 4c 47 11 f0 	movl   $0xf011474c,-0x44(%ebp)$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	c7 45 c0 50 8f 10 f0 	movl   $0xf0108f50,-0x40(%ebp)$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	39 7d c4             	cmp    %edi,-0x3c(%ebp)$/;"	l
f010599d	obj/kern/kernel.asm	/^f010599d:	0f 83 a0 01 00 00    	jae    f0105b43 <debuginfo_eip+0x2e5>$/;"	l
f01059a3	obj/kern/kernel.asm	/^f01059a3:	80 7f ff 00          	cmpb   $0x0,-0x1(%edi)$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	0f 85 8a 01 00 00    	jne    f0105b37 <debuginfo_eip+0x2d9>$/;"	l
f01059ad	obj/kern/kernel.asm	/^f01059ad:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01059b4	obj/kern/kernel.asm	/^f01059b4:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f01059b7	obj/kern/kernel.asm	/^f01059b7:	2b 45 c0             	sub    -0x40(%ebp),%eax$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01059c6	obj/kern/kernel.asm	/^f01059c6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01059cd	obj/kern/kernel.asm	/^f01059cd:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f01059d4	obj/kern/kernel.asm	/^f01059d4:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f01059da	obj/kern/kernel.asm	/^f01059da:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	e8 4e fd ff ff       	call   f0105730 <stab_binsearch>$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01059ea	obj/kern/kernel.asm	/^f01059ea:	85 d2                	test   %edx,%edx$/;"	l
f01059ec	obj/kern/kernel.asm	/^f01059ec:	0f 84 51 01 00 00    	je     f0105b43 <debuginfo_eip+0x2e5>$/;"	l
f01059f2	obj/kern/kernel.asm	/^f01059f2:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01059f8	obj/kern/kernel.asm	/^f01059f8:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01059fb	obj/kern/kernel.asm	/^f01059fb:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01059ff	obj/kern/kernel.asm	/^f01059ff:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0105a06	obj/kern/kernel.asm	/^f0105a06:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0105a09	obj/kern/kernel.asm	/^f0105a09:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0105a0f	obj/kern/kernel.asm	/^f0105a0f:	e8 1c fd ff ff       	call   f0105730 <stab_binsearch>$/;"	l
f0105a14	obj/kern/kernel.asm	/^f0105a14:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105a17	obj/kern/kernel.asm	/^f0105a17:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0105a1a	obj/kern/kernel.asm	/^f0105a1a:	89 4d b4             	mov    %ecx,-0x4c(%ebp)$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105a1f	obj/kern/kernel.asm	/^f0105a1f:	7f 31                	jg     f0105a52 <debuginfo_eip+0x1f4>$/;"	l
f0105a21	obj/kern/kernel.asm	/^f0105a21:	6b c2 0c             	imul   $0xc,%edx,%eax$/;"	l
f0105a24	obj/kern/kernel.asm	/^f0105a24:	03 45 c0             	add    -0x40(%ebp),%eax$/;"	l
f0105a27	obj/kern/kernel.asm	/^f0105a27:	8b 08                	mov    (%eax),%ecx$/;"	l
f0105a29	obj/kern/kernel.asm	/^f0105a29:	89 4d bc             	mov    %ecx,-0x44(%ebp)$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	89 f9                	mov    %edi,%ecx$/;"	l
f0105a2e	obj/kern/kernel.asm	/^f0105a2e:	2b 4d c4             	sub    -0x3c(%ebp),%ecx$/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	39 4d bc             	cmp    %ecx,-0x44(%ebp)$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	73 09                	jae    f0105a3f <debuginfo_eip+0x1e1>$/;"	l
f0105a36	obj/kern/kernel.asm	/^f0105a36:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0105a39	obj/kern/kernel.asm	/^f0105a39:	03 4d bc             	add    -0x44(%ebp),%ecx$/;"	l
f0105a3c	obj/kern/kernel.asm	/^f0105a3c:	89 4b 08             	mov    %ecx,0x8(%ebx)$/;"	l
f0105a3f	obj/kern/kernel.asm	/^f0105a3f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0105a42	obj/kern/kernel.asm	/^f0105a42:	89 43 10             	mov    %eax,0x10(%ebx)$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	29 c6                	sub    %eax,%esi$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
f0105a4d	obj/kern/kernel.asm	/^f0105a4d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105a50	obj/kern/kernel.asm	/^f0105a50:	eb 0f                	jmp    f0105a61 <debuginfo_eip+0x203>$/;"	l
f0105a52	obj/kern/kernel.asm	/^f0105a52:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105a58	obj/kern/kernel.asm	/^f0105a58:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105a5b	obj/kern/kernel.asm	/^f0105a5b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105a5e	obj/kern/kernel.asm	/^f0105a5e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105a61	obj/kern/kernel.asm	/^f0105a61:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0105a68	obj/kern/kernel.asm	/^f0105a68:	00 $/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0105a6c	obj/kern/kernel.asm	/^f0105a6c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a6f	obj/kern/kernel.asm	/^f0105a6f:	e8 16 0b 00 00       	call   f010658a <strfind>$/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0105a7a	obj/kern/kernel.asm	/^f0105a7a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105a7e	obj/kern/kernel.asm	/^f0105a7e:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0105a88	obj/kern/kernel.asm	/^f0105a88:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0105a8b	obj/kern/kernel.asm	/^f0105a8b:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	e8 9d fc ff ff       	call   f0105730 <stab_binsearch>$/;"	l
f0105a93	obj/kern/kernel.asm	/^f0105a93:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0105a9e	obj/kern/kernel.asm	/^f0105a9e:	0f 8f 9f 00 00 00    	jg     f0105b43 <debuginfo_eip+0x2e5>$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	6b d2 0c             	imul   $0xc,%edx,%edx$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0105aaa	obj/kern/kernel.asm	/^f0105aaa:	0f b7 44 11 06       	movzwl 0x6(%ecx,%edx,1),%eax$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f0105ab2	obj/kern/kernel.asm	/^f0105ab2:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0105ab5	obj/kern/kernel.asm	/^f0105ab5:	89 75 bc             	mov    %esi,-0x44(%ebp)$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105abb	obj/kern/kernel.asm	/^f0105abb:	8d 54 11 08          	lea    0x8(%ecx,%edx,1),%edx$/;"	l
f0105abf	obj/kern/kernel.asm	/^f0105abf:	eb 06                	jmp    f0105ac7 <debuginfo_eip+0x269>$/;"	l
f0105ac1	obj/kern/kernel.asm	/^f0105ac1:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105ac7	obj/kern/kernel.asm	/^f0105ac7:	39 45 bc             	cmp    %eax,-0x44(%ebp)$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	7f 1d                	jg     f0105ae9 <debuginfo_eip+0x28b>$/;"	l
f0105acc	obj/kern/kernel.asm	/^f0105acc:	0f b6 4a fc          	movzbl -0x4(%edx),%ecx$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3:	74 7b                	je     f0105b50 <debuginfo_eip+0x2f2>$/;"	l
f0105ad5	obj/kern/kernel.asm	/^f0105ad5:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	75 e7                	jne    f0105ac1 <debuginfo_eip+0x263>$/;"	l
f0105ada	obj/kern/kernel.asm	/^f0105ada:	83 3a 00             	cmpl   $0x0,(%edx)$/;"	l
f0105add	obj/kern/kernel.asm	/^f0105add:	74 e2                	je     f0105ac1 <debuginfo_eip+0x263>$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	eb 6f                	jmp    f0105b53 <debuginfo_eip+0x2f5>$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	03 45 c4             	add    -0x3c(%ebp),%eax$/;"	l
f0105ae7	obj/kern/kernel.asm	/^f0105ae7:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105aec	obj/kern/kernel.asm	/^f0105aec:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0105aef	obj/kern/kernel.asm	/^f0105aef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105af6	obj/kern/kernel.asm	/^f0105af6:	7d 4b                	jge    f0105b43 <debuginfo_eip+0x2e5>$/;"	l
f0105af8	obj/kern/kernel.asm	/^f0105af8:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0105afb	obj/kern/kernel.asm	/^f0105afb:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105afe	obj/kern/kernel.asm	/^f0105afe:	6b d0 0c             	imul   $0xc,%eax,%edx$/;"	l
f0105b01	obj/kern/kernel.asm	/^f0105b01:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f0105b04	obj/kern/kernel.asm	/^f0105b04:	8d 54 16 04          	lea    0x4(%esi,%edx,1),%edx$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	89 ce                	mov    %ecx,%esi$/;"	l
f0105b0a	obj/kern/kernel.asm	/^f0105b0a:	eb 07                	jmp    f0105b13 <debuginfo_eip+0x2b5>$/;"	l
f0105b0c	obj/kern/kernel.asm	/^f0105b0c:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	39 c6                	cmp    %eax,%esi$/;"	l
f0105b15	obj/kern/kernel.asm	/^f0105b15:	7e 27                	jle    f0105b3e <debuginfo_eip+0x2e0>$/;"	l
f0105b17	obj/kern/kernel.asm	/^f0105b17:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0105b1a	obj/kern/kernel.asm	/^f0105b1a:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0105b1d	obj/kern/kernel.asm	/^f0105b1d:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0105b20	obj/kern/kernel.asm	/^f0105b20:	74 ea                	je     f0105b0c <debuginfo_eip+0x2ae>$/;"	l
f0105b22	obj/kern/kernel.asm	/^f0105b22:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b27	obj/kern/kernel.asm	/^f0105b27:	eb 1a                	jmp    f0105b43 <debuginfo_eip+0x2e5>$/;"	l
f0105b29	obj/kern/kernel.asm	/^f0105b29:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105b2e	obj/kern/kernel.asm	/^f0105b2e:	eb 13                	jmp    f0105b43 <debuginfo_eip+0x2e5>$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	eb 0c                	jmp    f0105b43 <debuginfo_eip+0x2e5>$/;"	l
f0105b37	obj/kern/kernel.asm	/^f0105b37:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	eb 05                	jmp    f0105b43 <debuginfo_eip+0x2e5>$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b43	obj/kern/kernel.asm	/^f0105b43:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0105b49	obj/kern/kernel.asm	/^f0105b49:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	89 ec                	mov    %ebp,%esp$/;"	l
f0105b4e	obj/kern/kernel.asm	/^f0105b4e:	5d                   	pop    %ebp$/;"	l
f0105b4f	obj/kern/kernel.asm	/^f0105b4f:	c3                   	ret    $/;"	l
f0105b50	obj/kern/kernel.asm	/^f0105b50:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105b53	obj/kern/kernel.asm	/^f0105b53:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0105b59	obj/kern/kernel.asm	/^f0105b59:	8b 04 02             	mov    (%edx,%eax,1),%eax$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	2b 7d c4             	sub    -0x3c(%ebp),%edi$/;"	l
f0105b5f	obj/kern/kernel.asm	/^f0105b5f:	39 f8                	cmp    %edi,%eax$/;"	l
f0105b61	obj/kern/kernel.asm	/^f0105b61:	72 81                	jb     f0105ae4 <debuginfo_eip+0x286>$/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63:	eb 84                	jmp    f0105ae9 <debuginfo_eip+0x28b>$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70 <printnum>:$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	55                   	push   %ebp$/;"	l
f0105b71	obj/kern/kernel.asm	/^f0105b71:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	57                   	push   %edi$/;"	l
f0105b74	obj/kern/kernel.asm	/^f0105b74:	56                   	push   %esi$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	53                   	push   %ebx$/;"	l
f0105b76	obj/kern/kernel.asm	/^f0105b76:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105b79	obj/kern/kernel.asm	/^f0105b79:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	89 d6                	mov    %edx,%esi$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b81	obj/kern/kernel.asm	/^f0105b81:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105b84	obj/kern/kernel.asm	/^f0105b84:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0105b8d	obj/kern/kernel.asm	/^f0105b8d:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f0105b90	obj/kern/kernel.asm	/^f0105b90:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	39 d0                	cmp    %edx,%eax$/;"	l
f0105b97	obj/kern/kernel.asm	/^f0105b97:	72 11                	jb     f0105baa <printnum+0x3a>$/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	39 4d 10             	cmp    %ecx,0x10(%ebp)$/;"	l
f0105b9f	obj/kern/kernel.asm	/^f0105b9f:	76 09                	jbe    f0105baa <printnum+0x3a>$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	85 db                	test   %ebx,%ebx$/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6:	7f 5d                	jg     f0105c05 <printnum+0x95>$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	eb 6c                	jmp    f0105c16 <printnum+0xa6>$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0105bae	obj/kern/kernel.asm	/^f0105bae:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105bb1	obj/kern/kernel.asm	/^f0105bb1:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0105bc0	obj/kern/kernel.asm	/^f0105bc0:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105bca	obj/kern/kernel.asm	/^f0105bca:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0105bd1	obj/kern/kernel.asm	/^f0105bd1:	00 $/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105bd5	obj/kern/kernel.asm	/^f0105bd5:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105bdf	obj/kern/kernel.asm	/^f0105bdf:	e8 ec 14 00 00       	call   f01070d0 <__udivdi3>$/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0105be7	obj/kern/kernel.asm	/^f0105be7:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105bee	obj/kern/kernel.asm	/^f0105bee:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105bf5	obj/kern/kernel.asm	/^f0105bf5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105bf9	obj/kern/kernel.asm	/^f0105bf9:	89 f2                	mov    %esi,%edx$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105bfe	obj/kern/kernel.asm	/^f0105bfe:	e8 6d ff ff ff       	call   f0105b70 <printnum>$/;"	l
f0105c03	obj/kern/kernel.asm	/^f0105c03:	eb 11                	jmp    f0105c16 <printnum+0xa6>$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105c09	obj/kern/kernel.asm	/^f0105c09:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105c0c	obj/kern/kernel.asm	/^f0105c0c:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0105c0f	obj/kern/kernel.asm	/^f0105c0f:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	85 db                	test   %ebx,%ebx$/;"	l
f0105c14	obj/kern/kernel.asm	/^f0105c14:	7f ef                	jg     f0105c05 <printnum+0x95>$/;"	l
f0105c16	obj/kern/kernel.asm	/^f0105c16:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0105c1e	obj/kern/kernel.asm	/^f0105c1e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105c21	obj/kern/kernel.asm	/^f0105c21:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0105c2c	obj/kern/kernel.asm	/^f0105c2c:	00 $/;"	l
f0105c2d	obj/kern/kernel.asm	/^f0105c2d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105c36	obj/kern/kernel.asm	/^f0105c36:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	e8 a1 15 00 00       	call   f01071e0 <__umoddi3>$/;"	l
f0105c3f	obj/kern/kernel.asm	/^f0105c3f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105c43	obj/kern/kernel.asm	/^f0105c43:	0f be 80 aa 89 10 f0 	movsbl -0xfef7656(%eax),%eax$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	5b                   	pop    %ebx$/;"	l
f0105c54	obj/kern/kernel.asm	/^f0105c54:	5e                   	pop    %esi$/;"	l
f0105c55	obj/kern/kernel.asm	/^f0105c55:	5f                   	pop    %edi$/;"	l
f0105c56	obj/kern/kernel.asm	/^f0105c56:	5d                   	pop    %ebp$/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	c3                   	ret    $/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58 <getuint>:$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	55                   	push   %ebp$/;"	l
f0105c59	obj/kern/kernel.asm	/^f0105c59:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c5b	obj/kern/kernel.asm	/^f0105c5b:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105c5e	obj/kern/kernel.asm	/^f0105c5e:	7e 0e                	jle    f0105c6e <getuint+0x16>$/;"	l
f0105c60	obj/kern/kernel.asm	/^f0105c60:	8b 10                	mov    (%eax),%edx$/;"	l
f0105c62	obj/kern/kernel.asm	/^f0105c62:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105c67	obj/kern/kernel.asm	/^f0105c67:	8b 02                	mov    (%edx),%eax$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	eb 22                	jmp    f0105c90 <getuint+0x38>$/;"	l
f0105c6e	obj/kern/kernel.asm	/^f0105c6e:	85 d2                	test   %edx,%edx$/;"	l
f0105c70	obj/kern/kernel.asm	/^f0105c70:	74 10                	je     f0105c82 <getuint+0x2a>$/;"	l
f0105c72	obj/kern/kernel.asm	/^f0105c72:	8b 10                	mov    (%eax),%edx$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105c77	obj/kern/kernel.asm	/^f0105c77:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105c79	obj/kern/kernel.asm	/^f0105c79:	8b 02                	mov    (%edx),%eax$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	eb 0e                	jmp    f0105c90 <getuint+0x38>$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	8b 10                	mov    (%eax),%edx$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105c87	obj/kern/kernel.asm	/^f0105c87:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105c89	obj/kern/kernel.asm	/^f0105c89:	8b 02                	mov    (%edx),%eax$/;"	l
f0105c8b	obj/kern/kernel.asm	/^f0105c8b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105c90	obj/kern/kernel.asm	/^f0105c90:	5d                   	pop    %ebp$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	c3                   	ret    $/;"	l
f0105c92	obj/kern/kernel.asm	/^f0105c92 <sprintputch>:$/;"	l
f0105c92	obj/kern/kernel.asm	/^f0105c92:	55                   	push   %ebp$/;"	l
f0105c93	obj/kern/kernel.asm	/^f0105c93:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c95	obj/kern/kernel.asm	/^f0105c95:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c98	obj/kern/kernel.asm	/^f0105c98:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	8b 10                	mov    (%eax),%edx$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105ca1	obj/kern/kernel.asm	/^f0105ca1:	73 0a                	jae    f0105cad <sprintputch+0x1b>$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	88 0a                	mov    %cl,(%edx)$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105cab	obj/kern/kernel.asm	/^f0105cab:	89 10                	mov    %edx,(%eax)$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	5d                   	pop    %ebp$/;"	l
f0105cae	obj/kern/kernel.asm	/^f0105cae:	c3                   	ret    $/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf <printfmt>:$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	55                   	push   %ebp$/;"	l
f0105cb0	obj/kern/kernel.asm	/^f0105cb0:	89 e5                	mov    %esp,%ebp$/;"	l
f0105cb2	obj/kern/kernel.asm	/^f0105cb2:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105cb8	obj/kern/kernel.asm	/^f0105cb8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105cbf	obj/kern/kernel.asm	/^f0105cbf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105cc3	obj/kern/kernel.asm	/^f0105cc3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ccd	obj/kern/kernel.asm	/^f0105ccd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	e8 02 00 00 00       	call   f0105cd7 <vprintfmt>$/;"	l
f0105cd5	obj/kern/kernel.asm	/^f0105cd5:	c9                   	leave  $/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	c3                   	ret    $/;"	l
f0105cd7	obj/kern/kernel.asm	/^f0105cd7 <vprintfmt>:$/;"	l
f0105cd7	obj/kern/kernel.asm	/^f0105cd7:	55                   	push   %ebp$/;"	l
f0105cd8	obj/kern/kernel.asm	/^f0105cd8:	89 e5                	mov    %esp,%ebp$/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	57                   	push   %edi$/;"	l
f0105cdb	obj/kern/kernel.asm	/^f0105cdb:	56                   	push   %esi$/;"	l
f0105cdc	obj/kern/kernel.asm	/^f0105cdc:	53                   	push   %ebx$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105ce3	obj/kern/kernel.asm	/^f0105ce3:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105ce6	obj/kern/kernel.asm	/^f0105ce6:	eb 12                	jmp    f0105cfa <vprintfmt+0x23>$/;"	l
f0105ce8	obj/kern/kernel.asm	/^f0105ce8:	85 c0                	test   %eax,%eax$/;"	l
f0105cea	obj/kern/kernel.asm	/^f0105cea:	0f 84 97 05 00 00    	je     f0106287 <vprintfmt+0x5b0>$/;"	l
f0105cf0	obj/kern/kernel.asm	/^f0105cf0:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0105cfd	obj/kern/kernel.asm	/^f0105cfd:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105d03	obj/kern/kernel.asm	/^f0105d03:	75 e3                	jne    f0105ce8 <vprintfmt+0x11>$/;"	l
f0105d05	obj/kern/kernel.asm	/^f0105d05:	c6 45 c8 20          	movb   $0x20,-0x38(%ebp)$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105d1c	obj/kern/kernel.asm	/^f0105d1c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105d21	obj/kern/kernel.asm	/^f0105d21:	89 75 c4             	mov    %esi,-0x3c(%ebp)$/;"	l
f0105d24	obj/kern/kernel.asm	/^f0105d24:	eb 2b                	jmp    f0105d51 <vprintfmt+0x7a>$/;"	l
f0105d26	obj/kern/kernel.asm	/^f0105d26:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	c6 45 c8 2d          	movb   $0x2d,-0x38(%ebp)$/;"	l
f0105d2d	obj/kern/kernel.asm	/^f0105d2d:	eb 22                	jmp    f0105d51 <vprintfmt+0x7a>$/;"	l
f0105d2f	obj/kern/kernel.asm	/^f0105d2f:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0105d32	obj/kern/kernel.asm	/^f0105d32:	c6 45 c8 30          	movb   $0x30,-0x38(%ebp)$/;"	l
f0105d36	obj/kern/kernel.asm	/^f0105d36:	eb 19                	jmp    f0105d51 <vprintfmt+0x7a>$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	eb 0d                	jmp    f0105d51 <vprintfmt+0x7a>$/;"	l
f0105d44	obj/kern/kernel.asm	/^f0105d44:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105d4a	obj/kern/kernel.asm	/^f0105d4a:	c7 45 c4 ff ff ff ff 	movl   $0xffffffff,-0x3c(%ebp)$/;"	l
f0105d51	obj/kern/kernel.asm	/^f0105d51:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0105d54	obj/kern/kernel.asm	/^f0105d54:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0105d57	obj/kern/kernel.asm	/^f0105d57:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0105d5a	obj/kern/kernel.asm	/^f0105d5a:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	3c 55                	cmp    $0x55,%al$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	0f 87 ff 04 00 00    	ja     f0106267 <vprintfmt+0x590>$/;"	l
f0105d68	obj/kern/kernel.asm	/^f0105d68:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105d6b	obj/kern/kernel.asm	/^f0105d6b:	ff 24 85 08 8b 10 f0 	jmp    *-0xfef74f8(,%eax,4)$/;"	l
f0105d72	obj/kern/kernel.asm	/^f0105d72:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0105d7b	obj/kern/kernel.asm	/^f0105d7b:	0f be 02             	movsbl (%edx),%eax$/;"	l
f0105d7e	obj/kern/kernel.asm	/^f0105d7e:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0105d81	obj/kern/kernel.asm	/^f0105d81:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0105d87	obj/kern/kernel.asm	/^f0105d87:	77 4e                	ja     f0105dd7 <vprintfmt+0x100>$/;"	l
f0105d89	obj/kern/kernel.asm	/^f0105d89:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	8d 14 b6             	lea    (%esi,%esi,4),%edx$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	8d 74 50 d0          	lea    -0x30(%eax,%edx,2),%esi$/;"	l
f0105d96	obj/kern/kernel.asm	/^f0105d96:	0f be 03             	movsbl (%ebx),%eax$/;"	l
f0105d99	obj/kern/kernel.asm	/^f0105d99:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0105d9c	obj/kern/kernel.asm	/^f0105d9c:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	76 eb                	jbe    f0105d8c <vprintfmt+0xb5>$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	89 75 c4             	mov    %esi,-0x3c(%ebp)$/;"	l
f0105da4	obj/kern/kernel.asm	/^f0105da4:	eb 31                	jmp    f0105dd7 <vprintfmt+0x100>$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105da9	obj/kern/kernel.asm	/^f0105da9:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105dac	obj/kern/kernel.asm	/^f0105dac:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	8b 00                	mov    (%eax),%eax$/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	eb 1e                	jmp    f0105dd7 <vprintfmt+0x100>$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd:	0f 88 75 ff ff ff    	js     f0105d38 <vprintfmt+0x61>$/;"	l
f0105dc3	obj/kern/kernel.asm	/^f0105dc3:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	eb 89                	jmp    f0105d51 <vprintfmt+0x7a>$/;"	l
f0105dc8	obj/kern/kernel.asm	/^f0105dc8:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)$/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2:	e9 7a ff ff ff       	jmp    f0105d51 <vprintfmt+0x7a>$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	0f 89 70 ff ff ff    	jns    f0105d51 <vprintfmt+0x7a>$/;"	l
f0105de1	obj/kern/kernel.asm	/^f0105de1:	e9 5e ff ff ff       	jmp    f0105d44 <vprintfmt+0x6d>$/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0105dec	obj/kern/kernel.asm	/^f0105dec:	e9 60 ff ff ff       	jmp    f0105d51 <vprintfmt+0x7a>$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105df4	obj/kern/kernel.asm	/^f0105df4:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105df7	obj/kern/kernel.asm	/^f0105df7:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105dfa	obj/kern/kernel.asm	/^f0105dfa:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105dfe	obj/kern/kernel.asm	/^f0105dfe:	8b 00                	mov    (%eax),%eax$/;"	l
f0105e00	obj/kern/kernel.asm	/^f0105e00:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e03	obj/kern/kernel.asm	/^f0105e03:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e06	obj/kern/kernel.asm	/^f0105e06:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0105e09	obj/kern/kernel.asm	/^f0105e09:	e9 ec fe ff ff       	jmp    f0105cfa <vprintfmt+0x23>$/;"	l
f0105e0e	obj/kern/kernel.asm	/^f0105e0e:	0f b7 05 00 8b 10 f0 	movzwl 0xf0108b00,%eax$/;"	l
f0105e15	obj/kern/kernel.asm	/^f0105e15:	66 89 45 e3          	mov    %ax,-0x1d(%ebp)$/;"	l
f0105e19	obj/kern/kernel.asm	/^f0105e19:	66 c7 45 e5 00 00    	movw   $0x0,-0x1b(%ebp)$/;"	l
f0105e1f	obj/kern/kernel.asm	/^f0105e1f:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)$/;"	l
f0105e2a	obj/kern/kernel.asm	/^f0105e2a:	00 $/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105e32	obj/kern/kernel.asm	/^f0105e32:	8d 45 e3             	lea    -0x1d(%ebp),%eax$/;"	l
f0105e35	obj/kern/kernel.asm	/^f0105e35:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e38	obj/kern/kernel.asm	/^f0105e38:	e8 d3 07 00 00       	call   f0106610 <memmove>$/;"	l
f0105e3d	obj/kern/kernel.asm	/^f0105e3d:	89 f3                	mov    %esi,%ebx$/;"	l
f0105e3f	obj/kern/kernel.asm	/^f0105e3f:	83 c3 03             	add    $0x3,%ebx$/;"	l
f0105e42	obj/kern/kernel.asm	/^f0105e42:	c7 44 24 04 c2 89 10 	movl   $0xf01089c2,0x4(%esp)$/;"	l
f0105e49	obj/kern/kernel.asm	/^f0105e49:	f0 $/;"	l
f0105e4a	obj/kern/kernel.asm	/^f0105e4a:	8d 55 e3             	lea    -0x1d(%ebp),%edx$/;"	l
f0105e4d	obj/kern/kernel.asm	/^f0105e4d:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	e8 83 06 00 00       	call   f01064d8 <strcmp>$/;"	l
f0105e55	obj/kern/kernel.asm	/^f0105e55:	85 c0                	test   %eax,%eax$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	75 0a                	jne    f0105e63 <vprintfmt+0x18c>$/;"	l
f0105e59	obj/kern/kernel.asm	/^f0105e59:	c7 05 64 8a 1d f0 04 	movl   $0x4,0xf01d8a64$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	00 00 00 $/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	c7 44 24 04 c6 89 10 	movl   $0xf01089c6,0x4(%esp)$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	f0 $/;"	l
f0105e6b	obj/kern/kernel.asm	/^f0105e6b:	8d 75 e3             	lea    -0x1d(%ebp),%esi$/;"	l
f0105e6e	obj/kern/kernel.asm	/^f0105e6e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105e71	obj/kern/kernel.asm	/^f0105e71:	e8 62 06 00 00       	call   f01064d8 <strcmp>$/;"	l
f0105e76	obj/kern/kernel.asm	/^f0105e76:	85 c0                	test   %eax,%eax$/;"	l
f0105e78	obj/kern/kernel.asm	/^f0105e78:	75 0a                	jne    f0105e84 <vprintfmt+0x1ad>$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	c7 05 64 8a 1d f0 02 	movl   $0x2,0xf01d8a64$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	00 00 00 $/;"	l
f0105e84	obj/kern/kernel.asm	/^f0105e84:	c7 44 24 04 ca 89 10 	movl   $0xf01089ca,0x4(%esp)$/;"	l
f0105e8b	obj/kern/kernel.asm	/^f0105e8b:	f0 $/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	8d 45 e3             	lea    -0x1d(%ebp),%eax$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	e8 41 06 00 00       	call   f01064d8 <strcmp>$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	85 c0                	test   %eax,%eax$/;"	l
f0105e99	obj/kern/kernel.asm	/^f0105e99:	75 0a                	jne    f0105ea5 <vprintfmt+0x1ce>$/;"	l
f0105e9b	obj/kern/kernel.asm	/^f0105e9b:	c7 05 64 8a 1d f0 01 	movl   $0x1,0xf01d8a64$/;"	l
f0105ea2	obj/kern/kernel.asm	/^f0105ea2:	00 00 00 $/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	c7 44 24 04 ce 89 10 	movl   $0xf01089ce,0x4(%esp)$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	f0 $/;"	l
f0105ead	obj/kern/kernel.asm	/^f0105ead:	8d 55 e3             	lea    -0x1d(%ebp),%edx$/;"	l
f0105eb0	obj/kern/kernel.asm	/^f0105eb0:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	e8 20 06 00 00       	call   f01064d8 <strcmp>$/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	85 c0                	test   %eax,%eax$/;"	l
f0105eba	obj/kern/kernel.asm	/^f0105eba:	75 0a                	jne    f0105ec6 <vprintfmt+0x1ef>$/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc:	c7 05 64 8a 1d f0 07 	movl   $0x7,0xf01d8a64$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	00 00 00 $/;"	l
f0105ec6	obj/kern/kernel.asm	/^f0105ec6:	c7 44 24 04 d2 89 10 	movl   $0xf01089d2,0x4(%esp)$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	f0 $/;"	l
f0105ece	obj/kern/kernel.asm	/^f0105ece:	8d 75 e3             	lea    -0x1d(%ebp),%esi$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	e8 ff 05 00 00       	call   f01064d8 <strcmp>$/;"	l
f0105ed9	obj/kern/kernel.asm	/^f0105ed9:	85 c0                	test   %eax,%eax$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	0f 85 19 fe ff ff    	jne    f0105cfa <vprintfmt+0x23>$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	c7 05 64 8a 1d f0 00 	movl   $0x0,0xf01d8a64$/;"	l
f0105ee8	obj/kern/kernel.asm	/^f0105ee8:	00 00 00 $/;"	l
f0105eeb	obj/kern/kernel.asm	/^f0105eeb:	e9 0a fe ff ff       	jmp    f0105cfa <vprintfmt+0x23>$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0:	0f b7 05 00 8b 10 f0 	movzwl 0xf0108b00,%eax$/;"	l
f0105ef7	obj/kern/kernel.asm	/^f0105ef7:	66 89 45 e3          	mov    %ax,-0x1d(%ebp)$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	66 c7 45 e5 00 00    	movw   $0x0,-0x1b(%ebp)$/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f0105f05	obj/kern/kernel.asm	/^f0105f05:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	00 $/;"	l
f0105f0d	obj/kern/kernel.asm	/^f0105f0d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0105f10	obj/kern/kernel.asm	/^f0105f10:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105f14	obj/kern/kernel.asm	/^f0105f14:	8d 55 e3             	lea    -0x1d(%ebp),%edx$/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105f1a	obj/kern/kernel.asm	/^f0105f1a:	e8 f1 06 00 00       	call   f0106610 <memmove>$/;"	l
f0105f1f	obj/kern/kernel.asm	/^f0105f1f:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	83 c3 03             	add    $0x3,%ebx$/;"	l
f0105f25	obj/kern/kernel.asm	/^f0105f25:	c7 44 24 04 c2 89 10 	movl   $0xf01089c2,0x4(%esp)$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	f0 $/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	8d 75 e3             	lea    -0x1d(%ebp),%esi$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105f33	obj/kern/kernel.asm	/^f0105f33:	e8 a0 05 00 00       	call   f01064d8 <strcmp>$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	85 c0                	test   %eax,%eax$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	75 0a                	jne    f0105f46 <vprintfmt+0x26f>$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	c7 05 7c 33 12 f0 04 	movl   $0x4,0xf012337c$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	00 00 00 $/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	c7 44 24 04 c6 89 10 	movl   $0xf01089c6,0x4(%esp)$/;"	l
f0105f4d	obj/kern/kernel.asm	/^f0105f4d:	f0 $/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	8d 45 e3             	lea    -0x1d(%ebp),%eax$/;"	l
f0105f51	obj/kern/kernel.asm	/^f0105f51:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f54	obj/kern/kernel.asm	/^f0105f54:	e8 7f 05 00 00       	call   f01064d8 <strcmp>$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	85 c0                	test   %eax,%eax$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	75 0a                	jne    f0105f67 <vprintfmt+0x290>$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	c7 05 7c 33 12 f0 02 	movl   $0x2,0xf012337c$/;"	l
f0105f64	obj/kern/kernel.asm	/^f0105f64:	00 00 00 $/;"	l
f0105f67	obj/kern/kernel.asm	/^f0105f67:	c7 44 24 04 ca 89 10 	movl   $0xf01089ca,0x4(%esp)$/;"	l
f0105f6e	obj/kern/kernel.asm	/^f0105f6e:	f0 $/;"	l
f0105f6f	obj/kern/kernel.asm	/^f0105f6f:	8d 55 e3             	lea    -0x1d(%ebp),%edx$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105f75	obj/kern/kernel.asm	/^f0105f75:	e8 5e 05 00 00       	call   f01064d8 <strcmp>$/;"	l
f0105f7a	obj/kern/kernel.asm	/^f0105f7a:	85 c0                	test   %eax,%eax$/;"	l
f0105f7c	obj/kern/kernel.asm	/^f0105f7c:	75 0a                	jne    f0105f88 <vprintfmt+0x2b1>$/;"	l
f0105f7e	obj/kern/kernel.asm	/^f0105f7e:	c7 05 7c 33 12 f0 01 	movl   $0x1,0xf012337c$/;"	l
f0105f85	obj/kern/kernel.asm	/^f0105f85:	00 00 00 $/;"	l
f0105f88	obj/kern/kernel.asm	/^f0105f88:	c7 44 24 04 ce 89 10 	movl   $0xf01089ce,0x4(%esp)$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	f0 $/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	8d 75 e3             	lea    -0x1d(%ebp),%esi$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	e8 3d 05 00 00       	call   f01064d8 <strcmp>$/;"	l
f0105f9b	obj/kern/kernel.asm	/^f0105f9b:	85 c0                	test   %eax,%eax$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	75 0a                	jne    f0105fa9 <vprintfmt+0x2d2>$/;"	l
f0105f9f	obj/kern/kernel.asm	/^f0105f9f:	c7 05 7c 33 12 f0 07 	movl   $0x7,0xf012337c$/;"	l
f0105fa6	obj/kern/kernel.asm	/^f0105fa6:	00 00 00 $/;"	l
f0105fa9	obj/kern/kernel.asm	/^f0105fa9:	c7 44 24 04 d2 89 10 	movl   $0xf01089d2,0x4(%esp)$/;"	l
f0105fb0	obj/kern/kernel.asm	/^f0105fb0:	f0 $/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	8d 45 e3             	lea    -0x1d(%ebp),%eax$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105fb7	obj/kern/kernel.asm	/^f0105fb7:	e8 1c 05 00 00       	call   f01064d8 <strcmp>$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	85 c0                	test   %eax,%eax$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	0f 85 36 fd ff ff    	jne    f0105cfa <vprintfmt+0x23>$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	c7 05 7c 33 12 f0 00 	movl   $0x0,0xf012337c$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	00 00 00 $/;"	l
f0105fce	obj/kern/kernel.asm	/^f0105fce:	e9 27 fd ff ff       	jmp    f0105cfa <vprintfmt+0x23>$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105fd9	obj/kern/kernel.asm	/^f0105fd9:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	8b 00                	mov    (%eax),%eax$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	89 c2                	mov    %eax,%edx$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	31 d0                	xor    %edx,%eax$/;"	l
f0105fe5	obj/kern/kernel.asm	/^f0105fe5:	29 d0                	sub    %edx,%eax$/;"	l
f0105fe7	obj/kern/kernel.asm	/^f0105fe7:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0105fea	obj/kern/kernel.asm	/^f0105fea:	7f 0b                	jg     f0105ff7 <vprintfmt+0x320>$/;"	l
f0105fec	obj/kern/kernel.asm	/^f0105fec:	8b 14 85 60 8c 10 f0 	mov    -0xfef73a0(,%eax,4),%edx$/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	85 d2                	test   %edx,%edx$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	75 23                	jne    f010601a <vprintfmt+0x343>$/;"	l
f0105ff7	obj/kern/kernel.asm	/^f0105ff7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	c7 44 24 08 d6 89 10 	movl   $0xf01089d6,0x8(%esp)$/;"	l
f0106002	obj/kern/kernel.asm	/^f0106002:	f0 $/;"	l
f0106003	obj/kern/kernel.asm	/^f0106003:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106007	obj/kern/kernel.asm	/^f0106007:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	e8 9d fc ff ff       	call   f0105caf <printfmt>$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	e9 e0 fc ff ff       	jmp    f0105cfa <vprintfmt+0x23>$/;"	l
f010601a	obj/kern/kernel.asm	/^f010601a:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	c7 44 24 08 c9 81 10 	movl   $0xf01081c9,0x8(%esp)$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	f0 $/;"	l
f0106026	obj/kern/kernel.asm	/^f0106026:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010602a	obj/kern/kernel.asm	/^f010602a:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	e8 7a fc ff ff       	call   f0105caf <printfmt>$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038:	e9 bd fc ff ff       	jmp    f0105cfa <vprintfmt+0x23>$/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052:	8b 00                	mov    (%eax),%eax$/;"	l
f0106054	obj/kern/kernel.asm	/^f0106054:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	85 c0                	test   %eax,%eax$/;"	l
f0106059	obj/kern/kernel.asm	/^f0106059:	b8 bb 89 10 f0       	mov    $0xf01089bb,%eax$/;"	l
f010605e	obj/kern/kernel.asm	/^f010605e:	0f 45 45 c4          	cmovne -0x3c(%ebp),%eax$/;"	l
f0106062	obj/kern/kernel.asm	/^f0106062:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
f0106069	obj/kern/kernel.asm	/^f0106069:	7e 06                	jle    f0106071 <vprintfmt+0x39a>$/;"	l
f010606b	obj/kern/kernel.asm	/^f010606b:	80 7d c8 2d          	cmpb   $0x2d,-0x38(%ebp)$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	75 19                	jne    f010608a <vprintfmt+0x3b3>$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074:	0f be 02             	movsbl (%edx),%eax$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	83 c2 01             	add    $0x1,%edx$/;"	l
f010607a	obj/kern/kernel.asm	/^f010607a:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	85 c0                	test   %eax,%eax$/;"	l
f010607f	obj/kern/kernel.asm	/^f010607f:	0f 85 97 00 00 00    	jne    f010611c <vprintfmt+0x445>$/;"	l
f0106085	obj/kern/kernel.asm	/^f0106085:	e9 84 00 00 00       	jmp    f010610e <vprintfmt+0x437>$/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106094	obj/kern/kernel.asm	/^f0106094:	e8 62 03 00 00       	call   f01063fb <strnlen>$/;"	l
f0106099	obj/kern/kernel.asm	/^f0106099:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f010609c	obj/kern/kernel.asm	/^f010609c:	29 c2                	sub    %eax,%edx$/;"	l
f010609e	obj/kern/kernel.asm	/^f010609e:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01060a1	obj/kern/kernel.asm	/^f01060a1:	85 d2                	test   %edx,%edx$/;"	l
f01060a3	obj/kern/kernel.asm	/^f01060a3:	7e cc                	jle    f0106071 <vprintfmt+0x39a>$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	0f be 45 c8          	movsbl -0x38(%ebp),%eax$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	89 75 c0             	mov    %esi,-0x40(%ebp)$/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac:	89 5d bc             	mov    %ebx,-0x44(%ebp)$/;"	l
f01060af	obj/kern/kernel.asm	/^f01060af:	89 d3                	mov    %edx,%ebx$/;"	l
f01060b1	obj/kern/kernel.asm	/^f01060b1:	89 c6                	mov    %eax,%esi$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01060bd	obj/kern/kernel.asm	/^f01060bd:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	85 db                	test   %ebx,%ebx$/;"	l
f01060c2	obj/kern/kernel.asm	/^f01060c2:	7f ef                	jg     f01060b3 <vprintfmt+0x3dc>$/;"	l
f01060c4	obj/kern/kernel.asm	/^f01060c4:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f01060c7	obj/kern/kernel.asm	/^f01060c7:	8b 5d bc             	mov    -0x44(%ebp),%ebx$/;"	l
f01060ca	obj/kern/kernel.asm	/^f01060ca:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f01060d1	obj/kern/kernel.asm	/^f01060d1:	eb 9e                	jmp    f0106071 <vprintfmt+0x39a>$/;"	l
f01060d3	obj/kern/kernel.asm	/^f01060d3:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7:	74 18                	je     f01060f1 <vprintfmt+0x41a>$/;"	l
f01060d9	obj/kern/kernel.asm	/^f01060d9:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01060dc	obj/kern/kernel.asm	/^f01060dc:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f01060df	obj/kern/kernel.asm	/^f01060df:	76 10                	jbe    f01060f1 <vprintfmt+0x41a>$/;"	l
f01060e1	obj/kern/kernel.asm	/^f01060e1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01060e5	obj/kern/kernel.asm	/^f01060e5:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01060ef	obj/kern/kernel.asm	/^f01060ef:	eb 0a                	jmp    f01060fb <vprintfmt+0x424>$/;"	l
f01060f1	obj/kern/kernel.asm	/^f01060f1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01060f8	obj/kern/kernel.asm	/^f01060f8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01060fb	obj/kern/kernel.asm	/^f01060fb:	83 6d d4 01          	subl   $0x1,-0x2c(%ebp)$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	0f be 03             	movsbl (%ebx),%eax$/;"	l
f0106102	obj/kern/kernel.asm	/^f0106102:	85 c0                	test   %eax,%eax$/;"	l
f0106104	obj/kern/kernel.asm	/^f0106104:	74 05                	je     f010610b <vprintfmt+0x434>$/;"	l
f0106106	obj/kern/kernel.asm	/^f0106106:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0106109	obj/kern/kernel.asm	/^f0106109:	eb 17                	jmp    f0106122 <vprintfmt+0x44b>$/;"	l
f010610b	obj/kern/kernel.asm	/^f010610b:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112:	7f 1c                	jg     f0106130 <vprintfmt+0x459>$/;"	l
f0106114	obj/kern/kernel.asm	/^f0106114:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0106117	obj/kern/kernel.asm	/^f0106117:	e9 de fb ff ff       	jmp    f0105cfa <vprintfmt+0x23>$/;"	l
f010611c	obj/kern/kernel.asm	/^f010611c:	89 5d c4             	mov    %ebx,-0x3c(%ebp)$/;"	l
f010611f	obj/kern/kernel.asm	/^f010611f:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	85 f6                	test   %esi,%esi$/;"	l
f0106124	obj/kern/kernel.asm	/^f0106124:	78 ad                	js     f01060d3 <vprintfmt+0x3fc>$/;"	l
f0106126	obj/kern/kernel.asm	/^f0106126:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106129	obj/kern/kernel.asm	/^f0106129:	79 a8                	jns    f01060d3 <vprintfmt+0x3fc>$/;"	l
f010612b	obj/kern/kernel.asm	/^f010612b:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	eb de                	jmp    f010610e <vprintfmt+0x437>$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f0106136	obj/kern/kernel.asm	/^f0106136:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0106139	obj/kern/kernel.asm	/^f0106139:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010613d	obj/kern/kernel.asm	/^f010613d:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0106144	obj/kern/kernel.asm	/^f0106144:	ff d6                	call   *%esi$/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106149	obj/kern/kernel.asm	/^f0106149:	85 db                	test   %ebx,%ebx$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	7f ec                	jg     f0106139 <vprintfmt+0x462>$/;"	l
f010614d	obj/kern/kernel.asm	/^f010614d:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150:	e9 a5 fb ff ff       	jmp    f0105cfa <vprintfmt+0x23>$/;"	l
f0106155	obj/kern/kernel.asm	/^f0106155:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	7e 10                	jle    f010616a <vprintfmt+0x493>$/;"	l
f010615a	obj/kern/kernel.asm	/^f010615a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0106160	obj/kern/kernel.asm	/^f0106160:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106163	obj/kern/kernel.asm	/^f0106163:	8b 18                	mov    (%eax),%ebx$/;"	l
f0106165	obj/kern/kernel.asm	/^f0106165:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	eb 26                	jmp    f0106190 <vprintfmt+0x4b9>$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	85 c9                	test   %ecx,%ecx$/;"	l
f010616c	obj/kern/kernel.asm	/^f010616c:	74 12                	je     f0106180 <vprintfmt+0x4a9>$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106171	obj/kern/kernel.asm	/^f0106171:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106177	obj/kern/kernel.asm	/^f0106177:	8b 18                	mov    (%eax),%ebx$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	89 de                	mov    %ebx,%esi$/;"	l
f010617b	obj/kern/kernel.asm	/^f010617b:	c1 fe 1f             	sar    $0x1f,%esi$/;"	l
f010617e	obj/kern/kernel.asm	/^f010617e:	eb 10                	jmp    f0106190 <vprintfmt+0x4b9>$/;"	l
f0106180	obj/kern/kernel.asm	/^f0106180:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106183	obj/kern/kernel.asm	/^f0106183:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106186	obj/kern/kernel.asm	/^f0106186:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106189	obj/kern/kernel.asm	/^f0106189:	8b 18                	mov    (%eax),%ebx$/;"	l
f010618b	obj/kern/kernel.asm	/^f010618b:	89 de                	mov    %ebx,%esi$/;"	l
f010618d	obj/kern/kernel.asm	/^f010618d:	c1 fe 1f             	sar    $0x1f,%esi$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106195	obj/kern/kernel.asm	/^f0106195:	85 f6                	test   %esi,%esi$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	0f 89 8c 00 00 00    	jns    f0106229 <vprintfmt+0x552>$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01061a1	obj/kern/kernel.asm	/^f01061a1:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f01061a8	obj/kern/kernel.asm	/^f01061a8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	f7 db                	neg    %ebx$/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	83 d6 00             	adc    $0x0,%esi$/;"	l
f01061b0	obj/kern/kernel.asm	/^f01061b0:	f7 de                	neg    %esi$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	eb 70                	jmp    f0106229 <vprintfmt+0x552>$/;"	l
f01061b9	obj/kern/kernel.asm	/^f01061b9:	89 ca                	mov    %ecx,%edx$/;"	l
f01061bb	obj/kern/kernel.asm	/^f01061bb:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01061be	obj/kern/kernel.asm	/^f01061be:	e8 95 fa ff ff       	call   f0105c58 <getuint>$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	89 c3                	mov    %eax,%ebx$/;"	l
f01061c5	obj/kern/kernel.asm	/^f01061c5:	89 d6                	mov    %edx,%esi$/;"	l
f01061c7	obj/kern/kernel.asm	/^f01061c7:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01061cc	obj/kern/kernel.asm	/^f01061cc:	eb 5b                	jmp    f0106229 <vprintfmt+0x552>$/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	89 ca                	mov    %ecx,%edx$/;"	l
f01061d0	obj/kern/kernel.asm	/^f01061d0:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	e8 80 fa ff ff       	call   f0105c58 <getuint>$/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	89 c3                	mov    %eax,%ebx$/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da:	89 d6                	mov    %edx,%esi$/;"	l
f01061dc	obj/kern/kernel.asm	/^f01061dc:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1:	eb 46                	jmp    f0106229 <vprintfmt+0x552>$/;"	l
f01061e3	obj/kern/kernel.asm	/^f01061e3:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01061e7	obj/kern/kernel.asm	/^f01061e7:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01061f5	obj/kern/kernel.asm	/^f01061f5:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f01061fc	obj/kern/kernel.asm	/^f01061fc:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106202	obj/kern/kernel.asm	/^f0106202:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106208	obj/kern/kernel.asm	/^f0106208:	8b 18                	mov    (%eax),%ebx$/;"	l
f010620a	obj/kern/kernel.asm	/^f010620a:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	eb 13                	jmp    f0106229 <vprintfmt+0x552>$/;"	l
f0106216	obj/kern/kernel.asm	/^f0106216:	89 ca                	mov    %ecx,%edx$/;"	l
f0106218	obj/kern/kernel.asm	/^f0106218:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010621b	obj/kern/kernel.asm	/^f010621b:	e8 38 fa ff ff       	call   f0105c58 <getuint>$/;"	l
f0106220	obj/kern/kernel.asm	/^f0106220:	89 c3                	mov    %eax,%ebx$/;"	l
f0106222	obj/kern/kernel.asm	/^f0106222:	89 d6                	mov    %edx,%esi$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0106229	obj/kern/kernel.asm	/^f0106229:	0f be 55 c8          	movsbl -0x38(%ebp),%edx$/;"	l
f010622d	obj/kern/kernel.asm	/^f010622d:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0106231	obj/kern/kernel.asm	/^f0106231:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0106234	obj/kern/kernel.asm	/^f0106234:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106238	obj/kern/kernel.asm	/^f0106238:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010623c	obj/kern/kernel.asm	/^f010623c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010623f	obj/kern/kernel.asm	/^f010623f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	89 fa                	mov    %edi,%edx$/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106248	obj/kern/kernel.asm	/^f0106248:	e8 23 f9 ff ff       	call   f0105b70 <printnum>$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	e9 a5 fa ff ff       	jmp    f0105cfa <vprintfmt+0x23>$/;"	l
f0106255	obj/kern/kernel.asm	/^f0106255:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010625c	obj/kern/kernel.asm	/^f010625c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010625f	obj/kern/kernel.asm	/^f010625f:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0106262	obj/kern/kernel.asm	/^f0106262:	e9 93 fa ff ff       	jmp    f0105cfa <vprintfmt+0x23>$/;"	l
f0106267	obj/kern/kernel.asm	/^f0106267:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010626b	obj/kern/kernel.asm	/^f010626b:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0106272	obj/kern/kernel.asm	/^f0106272:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106275	obj/kern/kernel.asm	/^f0106275:	eb 02                	jmp    f0106279 <vprintfmt+0x5a2>$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	89 c3                	mov    %eax,%ebx$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f010627c	obj/kern/kernel.asm	/^f010627c:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	75 f5                	jne    f0106277 <vprintfmt+0x5a0>$/;"	l
f0106282	obj/kern/kernel.asm	/^f0106282:	e9 73 fa ff ff       	jmp    f0105cfa <vprintfmt+0x23>$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f010628a	obj/kern/kernel.asm	/^f010628a:	5b                   	pop    %ebx$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	5e                   	pop    %esi$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	5f                   	pop    %edi$/;"	l
f010628d	obj/kern/kernel.asm	/^f010628d:	5d                   	pop    %ebp$/;"	l
f010628e	obj/kern/kernel.asm	/^f010628e:	c3                   	ret    $/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f <vsnprintf>:$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	55                   	push   %ebp$/;"	l
f0106290	obj/kern/kernel.asm	/^f0106290:	89 e5                	mov    %esp,%ebp$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106298	obj/kern/kernel.asm	/^f0106298:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010629b	obj/kern/kernel.asm	/^f010629b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010629e	obj/kern/kernel.asm	/^f010629e:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01062a2	obj/kern/kernel.asm	/^f01062a2:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01062ac	obj/kern/kernel.asm	/^f01062ac:	85 c0                	test   %eax,%eax$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	74 30                	je     f01062e0 <vsnprintf+0x51>$/;"	l
f01062b0	obj/kern/kernel.asm	/^f01062b0:	85 d2                	test   %edx,%edx$/;"	l
f01062b2	obj/kern/kernel.asm	/^f01062b2:	7e 2c                	jle    f01062e0 <vsnprintf+0x51>$/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01062bb	obj/kern/kernel.asm	/^f01062bb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01062c2	obj/kern/kernel.asm	/^f01062c2:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01062c9	obj/kern/kernel.asm	/^f01062c9:	c7 04 24 92 5c 10 f0 	movl   $0xf0105c92,(%esp)$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	e8 02 fa ff ff       	call   f0105cd7 <vprintfmt>$/;"	l
f01062d5	obj/kern/kernel.asm	/^f01062d5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	eb 05                	jmp    f01062e5 <vsnprintf+0x56>$/;"	l
f01062e0	obj/kern/kernel.asm	/^f01062e0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01062e5	obj/kern/kernel.asm	/^f01062e5:	c9                   	leave  $/;"	l
f01062e6	obj/kern/kernel.asm	/^f01062e6:	c3                   	ret    $/;"	l
f01062e7	obj/kern/kernel.asm	/^f01062e7 <snprintf>:$/;"	l
f01062e7	obj/kern/kernel.asm	/^f01062e7:	55                   	push   %ebp$/;"	l
f01062e8	obj/kern/kernel.asm	/^f01062e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01062ea	obj/kern/kernel.asm	/^f01062ea:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01062ed	obj/kern/kernel.asm	/^f01062ed:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01062fb	obj/kern/kernel.asm	/^f01062fb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106302	obj/kern/kernel.asm	/^f0106302:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106305	obj/kern/kernel.asm	/^f0106305:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106308	obj/kern/kernel.asm	/^f0106308:	e8 82 ff ff ff       	call   f010628f <vsnprintf>$/;"	l
f010630d	obj/kern/kernel.asm	/^f010630d:	c9                   	leave  $/;"	l
f010630e	obj/kern/kernel.asm	/^f010630e:	c3                   	ret    $/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310 <readline>:$/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310:	55                   	push   %ebp$/;"	l
f0106311	obj/kern/kernel.asm	/^f0106311:	89 e5                	mov    %esp,%ebp$/;"	l
f0106313	obj/kern/kernel.asm	/^f0106313:	57                   	push   %edi$/;"	l
f0106314	obj/kern/kernel.asm	/^f0106314:	56                   	push   %esi$/;"	l
f0106315	obj/kern/kernel.asm	/^f0106315:	53                   	push   %ebx$/;"	l
f0106316	obj/kern/kernel.asm	/^f0106316:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106319	obj/kern/kernel.asm	/^f0106319:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	85 c0                	test   %eax,%eax$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	74 10                	je     f0106330 <readline+0x20>$/;"	l
f0106320	obj/kern/kernel.asm	/^f0106320:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106324	obj/kern/kernel.asm	/^f0106324:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	e8 6a dd ff ff       	call   f010409a <cprintf>$/;"	l
f0106330	obj/kern/kernel.asm	/^f0106330:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	e8 b5 a4 ff ff       	call   f01007f1 <iscons>$/;"	l
f010633c	obj/kern/kernel.asm	/^f010633c:	89 c7                	mov    %eax,%edi$/;"	l
f010633e	obj/kern/kernel.asm	/^f010633e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106343	obj/kern/kernel.asm	/^f0106343:	e8 98 a4 ff ff       	call   f01007e0 <getchar>$/;"	l
f0106348	obj/kern/kernel.asm	/^f0106348:	89 c3                	mov    %eax,%ebx$/;"	l
f010634a	obj/kern/kernel.asm	/^f010634a:	85 c0                	test   %eax,%eax$/;"	l
f010634c	obj/kern/kernel.asm	/^f010634c:	79 17                	jns    f0106365 <readline+0x55>$/;"	l
f010634e	obj/kern/kernel.asm	/^f010634e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106352	obj/kern/kernel.asm	/^f0106352:	c7 04 24 bf 8c 10 f0 	movl   $0xf0108cbf,(%esp)$/;"	l
f0106359	obj/kern/kernel.asm	/^f0106359:	e8 3c dd ff ff       	call   f010409a <cprintf>$/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106363	obj/kern/kernel.asm	/^f0106363:	eb 6d                	jmp    f01063d2 <readline+0xc2>$/;"	l
f0106365	obj/kern/kernel.asm	/^f0106365:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0106368	obj/kern/kernel.asm	/^f0106368:	74 05                	je     f010636f <readline+0x5f>$/;"	l
f010636a	obj/kern/kernel.asm	/^f010636a:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f010636d	obj/kern/kernel.asm	/^f010636d:	75 19                	jne    f0106388 <readline+0x78>$/;"	l
f010636f	obj/kern/kernel.asm	/^f010636f:	85 f6                	test   %esi,%esi$/;"	l
f0106371	obj/kern/kernel.asm	/^f0106371:	7e 15                	jle    f0106388 <readline+0x78>$/;"	l
f0106373	obj/kern/kernel.asm	/^f0106373:	85 ff                	test   %edi,%edi$/;"	l
f0106375	obj/kern/kernel.asm	/^f0106375:	74 0c                	je     f0106383 <readline+0x73>$/;"	l
f0106377	obj/kern/kernel.asm	/^f0106377:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f010637e	obj/kern/kernel.asm	/^f010637e:	e8 4d a4 ff ff       	call   f01007d0 <cputchar>$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106386	obj/kern/kernel.asm	/^f0106386:	eb bb                	jmp    f0106343 <readline+0x33>$/;"	l
f0106388	obj/kern/kernel.asm	/^f0106388:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f010638b	obj/kern/kernel.asm	/^f010638b:	7e 1f                	jle    f01063ac <readline+0x9c>$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0106393	obj/kern/kernel.asm	/^f0106393:	7f 17                	jg     f01063ac <readline+0x9c>$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	85 ff                	test   %edi,%edi$/;"	l
f0106397	obj/kern/kernel.asm	/^f0106397:	74 08                	je     f01063a1 <readline+0x91>$/;"	l
f0106399	obj/kern/kernel.asm	/^f0106399:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010639c	obj/kern/kernel.asm	/^f010639c:	e8 2f a4 ff ff       	call   f01007d0 <cputchar>$/;"	l
f01063a1	obj/kern/kernel.asm	/^f01063a1:	88 9e 80 8a 1d f0    	mov    %bl,-0xfe27580(%esi)$/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	83 c6 01             	add    $0x1,%esi$/;"	l
f01063aa	obj/kern/kernel.asm	/^f01063aa:	eb 97                	jmp    f0106343 <readline+0x33>$/;"	l
f01063ac	obj/kern/kernel.asm	/^f01063ac:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f01063af	obj/kern/kernel.asm	/^f01063af:	74 05                	je     f01063b6 <readline+0xa6>$/;"	l
f01063b1	obj/kern/kernel.asm	/^f01063b1:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f01063b4	obj/kern/kernel.asm	/^f01063b4:	75 8d                	jne    f0106343 <readline+0x33>$/;"	l
f01063b6	obj/kern/kernel.asm	/^f01063b6:	85 ff                	test   %edi,%edi$/;"	l
f01063b8	obj/kern/kernel.asm	/^f01063b8:	74 0c                	je     f01063c6 <readline+0xb6>$/;"	l
f01063ba	obj/kern/kernel.asm	/^f01063ba:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f01063c1	obj/kern/kernel.asm	/^f01063c1:	e8 0a a4 ff ff       	call   f01007d0 <cputchar>$/;"	l
f01063c6	obj/kern/kernel.asm	/^f01063c6:	c6 86 80 8a 1d f0 00 	movb   $0x0,-0xfe27580(%esi)$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	b8 80 8a 1d f0       	mov    $0xf01d8a80,%eax$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01063d5	obj/kern/kernel.asm	/^f01063d5:	5b                   	pop    %ebx$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	5e                   	pop    %esi$/;"	l
f01063d7	obj/kern/kernel.asm	/^f01063d7:	5f                   	pop    %edi$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	5d                   	pop    %ebp$/;"	l
f01063d9	obj/kern/kernel.asm	/^f01063d9:	c3                   	ret    $/;"	l
f01063da	obj/kern/kernel.asm	/^f01063da:	00 00                	add    %al,(%eax)$/;"	l
f01063dc	obj/kern/kernel.asm	/^f01063dc:	00 00                	add    %al,(%eax)$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0 <strlen>:$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	55                   	push   %ebp$/;"	l
f01063e1	obj/kern/kernel.asm	/^f01063e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01063e6	obj/kern/kernel.asm	/^f01063e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01063eb	obj/kern/kernel.asm	/^f01063eb:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f01063ee	obj/kern/kernel.asm	/^f01063ee:	74 09                	je     f01063f9 <strlen+0x19>$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01063f3	obj/kern/kernel.asm	/^f01063f3:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01063f7	obj/kern/kernel.asm	/^f01063f7:	75 f7                	jne    f01063f0 <strlen+0x10>$/;"	l
f01063f9	obj/kern/kernel.asm	/^f01063f9:	5d                   	pop    %ebp$/;"	l
f01063fa	obj/kern/kernel.asm	/^f01063fa:	c3                   	ret    $/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb <strnlen>:$/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb:	55                   	push   %ebp$/;"	l
f01063fc	obj/kern/kernel.asm	/^f01063fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01063fe	obj/kern/kernel.asm	/^f01063fe:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0106401	obj/kern/kernel.asm	/^f0106401:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409:	85 d2                	test   %edx,%edx$/;"	l
f010640b	obj/kern/kernel.asm	/^f010640b:	74 12                	je     f010641f <strnlen+0x24>$/;"	l
f010640d	obj/kern/kernel.asm	/^f010640d:	80 39 00             	cmpb   $0x0,(%ecx)$/;"	l
f0106410	obj/kern/kernel.asm	/^f0106410:	74 0d                	je     f010641f <strnlen+0x24>$/;"	l
f0106412	obj/kern/kernel.asm	/^f0106412:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	39 d0                	cmp    %edx,%eax$/;"	l
f0106417	obj/kern/kernel.asm	/^f0106417:	74 06                	je     f010641f <strnlen+0x24>$/;"	l
f0106419	obj/kern/kernel.asm	/^f0106419:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f010641d	obj/kern/kernel.asm	/^f010641d:	75 f3                	jne    f0106412 <strnlen+0x17>$/;"	l
f010641f	obj/kern/kernel.asm	/^f010641f:	5d                   	pop    %ebp$/;"	l
f0106420	obj/kern/kernel.asm	/^f0106420:	c3                   	ret    $/;"	l
f0106421	obj/kern/kernel.asm	/^f0106421 <strcpy>:$/;"	l
f0106421	obj/kern/kernel.asm	/^f0106421:	55                   	push   %ebp$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422:	89 e5                	mov    %esp,%ebp$/;"	l
f0106424	obj/kern/kernel.asm	/^f0106424:	53                   	push   %ebx$/;"	l
f0106425	obj/kern/kernel.asm	/^f0106425:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106428	obj/kern/kernel.asm	/^f0106428:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010642b	obj/kern/kernel.asm	/^f010642b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f0106434	obj/kern/kernel.asm	/^f0106434:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f0106437	obj/kern/kernel.asm	/^f0106437:	83 c2 01             	add    $0x1,%edx$/;"	l
f010643a	obj/kern/kernel.asm	/^f010643a:	84 c9                	test   %cl,%cl$/;"	l
f010643c	obj/kern/kernel.asm	/^f010643c:	75 f2                	jne    f0106430 <strcpy+0xf>$/;"	l
f010643e	obj/kern/kernel.asm	/^f010643e:	5b                   	pop    %ebx$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	5d                   	pop    %ebp$/;"	l
f0106440	obj/kern/kernel.asm	/^f0106440:	c3                   	ret    $/;"	l
f0106441	obj/kern/kernel.asm	/^f0106441 <strcat>:$/;"	l
f0106441	obj/kern/kernel.asm	/^f0106441:	55                   	push   %ebp$/;"	l
f0106442	obj/kern/kernel.asm	/^f0106442:	89 e5                	mov    %esp,%ebp$/;"	l
f0106444	obj/kern/kernel.asm	/^f0106444:	53                   	push   %ebx$/;"	l
f0106445	obj/kern/kernel.asm	/^f0106445:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106448	obj/kern/kernel.asm	/^f0106448:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010644b	obj/kern/kernel.asm	/^f010644b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010644e	obj/kern/kernel.asm	/^f010644e:	e8 8d ff ff ff       	call   f01063e0 <strlen>$/;"	l
f0106453	obj/kern/kernel.asm	/^f0106453:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106456	obj/kern/kernel.asm	/^f0106456:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010645a	obj/kern/kernel.asm	/^f010645a:	8d 04 03             	lea    (%ebx,%eax,1),%eax$/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106460	obj/kern/kernel.asm	/^f0106460:	e8 bc ff ff ff       	call   f0106421 <strcpy>$/;"	l
f0106465	obj/kern/kernel.asm	/^f0106465:	89 d8                	mov    %ebx,%eax$/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467:	83 c4 08             	add    $0x8,%esp$/;"	l
f010646a	obj/kern/kernel.asm	/^f010646a:	5b                   	pop    %ebx$/;"	l
f010646b	obj/kern/kernel.asm	/^f010646b:	5d                   	pop    %ebp$/;"	l
f010646c	obj/kern/kernel.asm	/^f010646c:	c3                   	ret    $/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d <strncpy>:$/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d:	55                   	push   %ebp$/;"	l
f010646e	obj/kern/kernel.asm	/^f010646e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106470	obj/kern/kernel.asm	/^f0106470:	56                   	push   %esi$/;"	l
f0106471	obj/kern/kernel.asm	/^f0106471:	53                   	push   %ebx$/;"	l
f0106472	obj/kern/kernel.asm	/^f0106472:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106475	obj/kern/kernel.asm	/^f0106475:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106478	obj/kern/kernel.asm	/^f0106478:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010647b	obj/kern/kernel.asm	/^f010647b:	85 f6                	test   %esi,%esi$/;"	l
f010647d	obj/kern/kernel.asm	/^f010647d:	74 18                	je     f0106497 <strncpy+0x2a>$/;"	l
f010647f	obj/kern/kernel.asm	/^f010647f:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0106484	obj/kern/kernel.asm	/^f0106484:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0106487	obj/kern/kernel.asm	/^f0106487:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f010648d	obj/kern/kernel.asm	/^f010648d:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f0106490	obj/kern/kernel.asm	/^f0106490:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106493	obj/kern/kernel.asm	/^f0106493:	39 ce                	cmp    %ecx,%esi$/;"	l
f0106495	obj/kern/kernel.asm	/^f0106495:	77 ed                	ja     f0106484 <strncpy+0x17>$/;"	l
f0106497	obj/kern/kernel.asm	/^f0106497:	5b                   	pop    %ebx$/;"	l
f0106498	obj/kern/kernel.asm	/^f0106498:	5e                   	pop    %esi$/;"	l
f0106499	obj/kern/kernel.asm	/^f0106499:	5d                   	pop    %ebp$/;"	l
f010649a	obj/kern/kernel.asm	/^f010649a:	c3                   	ret    $/;"	l
f010649b	obj/kern/kernel.asm	/^f010649b <strlcpy>:$/;"	l
f010649b	obj/kern/kernel.asm	/^f010649b:	55                   	push   %ebp$/;"	l
f010649c	obj/kern/kernel.asm	/^f010649c:	89 e5                	mov    %esp,%ebp$/;"	l
f010649e	obj/kern/kernel.asm	/^f010649e:	56                   	push   %esi$/;"	l
f010649f	obj/kern/kernel.asm	/^f010649f:	53                   	push   %ebx$/;"	l
f01064a0	obj/kern/kernel.asm	/^f01064a0:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01064a3	obj/kern/kernel.asm	/^f01064a3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01064a6	obj/kern/kernel.asm	/^f01064a6:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01064a9	obj/kern/kernel.asm	/^f01064a9:	89 f0                	mov    %esi,%eax$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	85 c9                	test   %ecx,%ecx$/;"	l
f01064ad	obj/kern/kernel.asm	/^f01064ad:	74 23                	je     f01064d2 <strlcpy+0x37>$/;"	l
f01064af	obj/kern/kernel.asm	/^f01064af:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	74 1b                	je     f01064cf <strlcpy+0x34>$/;"	l
f01064b4	obj/kern/kernel.asm	/^f01064b4:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01064b7	obj/kern/kernel.asm	/^f01064b7:	84 db                	test   %bl,%bl$/;"	l
f01064b9	obj/kern/kernel.asm	/^f01064b9:	74 14                	je     f01064cf <strlcpy+0x34>$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	88 18                	mov    %bl,(%eax)$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	83 c0 01             	add    $0x1,%eax$/;"	l
f01064c0	obj/kern/kernel.asm	/^f01064c0:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01064c3	obj/kern/kernel.asm	/^f01064c3:	74 0a                	je     f01064cf <strlcpy+0x34>$/;"	l
f01064c5	obj/kern/kernel.asm	/^f01064c5:	83 c2 01             	add    $0x1,%edx$/;"	l
f01064c8	obj/kern/kernel.asm	/^f01064c8:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01064cb	obj/kern/kernel.asm	/^f01064cb:	84 db                	test   %bl,%bl$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	75 ec                	jne    f01064bb <strlcpy+0x20>$/;"	l
f01064cf	obj/kern/kernel.asm	/^f01064cf:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01064d2	obj/kern/kernel.asm	/^f01064d2:	29 f0                	sub    %esi,%eax$/;"	l
f01064d4	obj/kern/kernel.asm	/^f01064d4:	5b                   	pop    %ebx$/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	5e                   	pop    %esi$/;"	l
f01064d6	obj/kern/kernel.asm	/^f01064d6:	5d                   	pop    %ebp$/;"	l
f01064d7	obj/kern/kernel.asm	/^f01064d7:	c3                   	ret    $/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8 <strcmp>:$/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	55                   	push   %ebp$/;"	l
f01064d9	obj/kern/kernel.asm	/^f01064d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01064db	obj/kern/kernel.asm	/^f01064db:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01064de	obj/kern/kernel.asm	/^f01064de:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01064e1	obj/kern/kernel.asm	/^f01064e1:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01064e4	obj/kern/kernel.asm	/^f01064e4:	84 c0                	test   %al,%al$/;"	l
f01064e6	obj/kern/kernel.asm	/^f01064e6:	74 15                	je     f01064fd <strcmp+0x25>$/;"	l
f01064e8	obj/kern/kernel.asm	/^f01064e8:	3a 02                	cmp    (%edx),%al$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	75 11                	jne    f01064fd <strcmp+0x25>$/;"	l
f01064ec	obj/kern/kernel.asm	/^f01064ec:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01064ef	obj/kern/kernel.asm	/^f01064ef:	83 c2 01             	add    $0x1,%edx$/;"	l
f01064f2	obj/kern/kernel.asm	/^f01064f2:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01064f5	obj/kern/kernel.asm	/^f01064f5:	84 c0                	test   %al,%al$/;"	l
f01064f7	obj/kern/kernel.asm	/^f01064f7:	74 04                	je     f01064fd <strcmp+0x25>$/;"	l
f01064f9	obj/kern/kernel.asm	/^f01064f9:	3a 02                	cmp    (%edx),%al$/;"	l
f01064fb	obj/kern/kernel.asm	/^f01064fb:	74 ef                	je     f01064ec <strcmp+0x14>$/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0106503	obj/kern/kernel.asm	/^f0106503:	29 d0                	sub    %edx,%eax$/;"	l
f0106505	obj/kern/kernel.asm	/^f0106505:	5d                   	pop    %ebp$/;"	l
f0106506	obj/kern/kernel.asm	/^f0106506:	c3                   	ret    $/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507 <strncmp>:$/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507:	55                   	push   %ebp$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508:	89 e5                	mov    %esp,%ebp$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	53                   	push   %ebx$/;"	l
f010650b	obj/kern/kernel.asm	/^f010650b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010650e	obj/kern/kernel.asm	/^f010650e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106511	obj/kern/kernel.asm	/^f0106511:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106519	obj/kern/kernel.asm	/^f0106519:	85 d2                	test   %edx,%edx$/;"	l
f010651b	obj/kern/kernel.asm	/^f010651b:	74 28                	je     f0106545 <strncmp+0x3e>$/;"	l
f010651d	obj/kern/kernel.asm	/^f010651d:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0106520	obj/kern/kernel.asm	/^f0106520:	84 c0                	test   %al,%al$/;"	l
f0106522	obj/kern/kernel.asm	/^f0106522:	74 24                	je     f0106548 <strncmp+0x41>$/;"	l
f0106524	obj/kern/kernel.asm	/^f0106524:	3a 03                	cmp    (%ebx),%al$/;"	l
f0106526	obj/kern/kernel.asm	/^f0106526:	75 20                	jne    f0106548 <strncmp+0x41>$/;"	l
f0106528	obj/kern/kernel.asm	/^f0106528:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	74 13                	je     f0106540 <strncmp+0x39>$/;"	l
f010652d	obj/kern/kernel.asm	/^f010652d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106530	obj/kern/kernel.asm	/^f0106530:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0106536	obj/kern/kernel.asm	/^f0106536:	84 c0                	test   %al,%al$/;"	l
f0106538	obj/kern/kernel.asm	/^f0106538:	74 0e                	je     f0106548 <strncmp+0x41>$/;"	l
f010653a	obj/kern/kernel.asm	/^f010653a:	3a 03                	cmp    (%ebx),%al$/;"	l
f010653c	obj/kern/kernel.asm	/^f010653c:	74 ea                	je     f0106528 <strncmp+0x21>$/;"	l
f010653e	obj/kern/kernel.asm	/^f010653e:	eb 08                	jmp    f0106548 <strncmp+0x41>$/;"	l
f0106540	obj/kern/kernel.asm	/^f0106540:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106545	obj/kern/kernel.asm	/^f0106545:	5b                   	pop    %ebx$/;"	l
f0106546	obj/kern/kernel.asm	/^f0106546:	5d                   	pop    %ebp$/;"	l
f0106547	obj/kern/kernel.asm	/^f0106547:	c3                   	ret    $/;"	l
f0106548	obj/kern/kernel.asm	/^f0106548:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f010654e	obj/kern/kernel.asm	/^f010654e:	29 d0                	sub    %edx,%eax$/;"	l
f0106550	obj/kern/kernel.asm	/^f0106550:	eb f3                	jmp    f0106545 <strncmp+0x3e>$/;"	l
f0106552	obj/kern/kernel.asm	/^f0106552 <strchr>:$/;"	l
f0106552	obj/kern/kernel.asm	/^f0106552:	55                   	push   %ebp$/;"	l
f0106553	obj/kern/kernel.asm	/^f0106553:	89 e5                	mov    %esp,%ebp$/;"	l
f0106555	obj/kern/kernel.asm	/^f0106555:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106558	obj/kern/kernel.asm	/^f0106558:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f010655c	obj/kern/kernel.asm	/^f010655c:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	84 d2                	test   %dl,%dl$/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	74 20                	je     f0106583 <strchr+0x31>$/;"	l
f0106563	obj/kern/kernel.asm	/^f0106563:	38 ca                	cmp    %cl,%dl$/;"	l
f0106565	obj/kern/kernel.asm	/^f0106565:	75 0b                	jne    f0106572 <strchr+0x20>$/;"	l
f0106567	obj/kern/kernel.asm	/^f0106567:	eb 1f                	jmp    f0106588 <strchr+0x36>$/;"	l
f0106569	obj/kern/kernel.asm	/^f0106569:	38 ca                	cmp    %cl,%dl$/;"	l
f010656b	obj/kern/kernel.asm	/^f010656b:	90                   	nop$/;"	l
f010656c	obj/kern/kernel.asm	/^f010656c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106570	obj/kern/kernel.asm	/^f0106570:	74 16                	je     f0106588 <strchr+0x36>$/;"	l
f0106572	obj/kern/kernel.asm	/^f0106572:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106575	obj/kern/kernel.asm	/^f0106575:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106578	obj/kern/kernel.asm	/^f0106578:	84 d2                	test   %dl,%dl$/;"	l
f010657a	obj/kern/kernel.asm	/^f010657a:	75 ed                	jne    f0106569 <strchr+0x17>$/;"	l
f010657c	obj/kern/kernel.asm	/^f010657c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	eb 05                	jmp    f0106588 <strchr+0x36>$/;"	l
f0106583	obj/kern/kernel.asm	/^f0106583:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106588	obj/kern/kernel.asm	/^f0106588:	5d                   	pop    %ebp$/;"	l
f0106589	obj/kern/kernel.asm	/^f0106589:	c3                   	ret    $/;"	l
f010658a	obj/kern/kernel.asm	/^f010658a <strfind>:$/;"	l
f010658a	obj/kern/kernel.asm	/^f010658a:	55                   	push   %ebp$/;"	l
f010658b	obj/kern/kernel.asm	/^f010658b:	89 e5                	mov    %esp,%ebp$/;"	l
f010658d	obj/kern/kernel.asm	/^f010658d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106590	obj/kern/kernel.asm	/^f0106590:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106594	obj/kern/kernel.asm	/^f0106594:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597:	84 d2                	test   %dl,%dl$/;"	l
f0106599	obj/kern/kernel.asm	/^f0106599:	74 14                	je     f01065af <strfind+0x25>$/;"	l
f010659b	obj/kern/kernel.asm	/^f010659b:	38 ca                	cmp    %cl,%dl$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	75 06                	jne    f01065a5 <strfind+0x1b>$/;"	l
f010659f	obj/kern/kernel.asm	/^f010659f:	eb 0e                	jmp    f01065af <strfind+0x25>$/;"	l
f01065a1	obj/kern/kernel.asm	/^f01065a1:	38 ca                	cmp    %cl,%dl$/;"	l
f01065a3	obj/kern/kernel.asm	/^f01065a3:	74 0a                	je     f01065af <strfind+0x25>$/;"	l
f01065a5	obj/kern/kernel.asm	/^f01065a5:	83 c0 01             	add    $0x1,%eax$/;"	l
f01065a8	obj/kern/kernel.asm	/^f01065a8:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01065ab	obj/kern/kernel.asm	/^f01065ab:	84 d2                	test   %dl,%dl$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	75 f2                	jne    f01065a1 <strfind+0x17>$/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	5d                   	pop    %ebp$/;"	l
f01065b0	obj/kern/kernel.asm	/^f01065b0:	c3                   	ret    $/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1 <memset>:$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	55                   	push   %ebp$/;"	l
f01065b2	obj/kern/kernel.asm	/^f01065b2:	89 e5                	mov    %esp,%ebp$/;"	l
f01065b4	obj/kern/kernel.asm	/^f01065b4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01065b7	obj/kern/kernel.asm	/^f01065b7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01065ba	obj/kern/kernel.asm	/^f01065ba:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01065be	obj/kern/kernel.asm	/^f01065be:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01065c5	obj/kern/kernel.asm	/^f01065c5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01065c8	obj/kern/kernel.asm	/^f01065c8:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01065cb	obj/kern/kernel.asm	/^f01065cb:	85 c9                	test   %ecx,%ecx$/;"	l
f01065cd	obj/kern/kernel.asm	/^f01065cd:	74 30                	je     f01065ff <memset+0x4e>$/;"	l
f01065cf	obj/kern/kernel.asm	/^f01065cf:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01065d5	obj/kern/kernel.asm	/^f01065d5:	75 25                	jne    f01065fc <memset+0x4b>$/;"	l
f01065d7	obj/kern/kernel.asm	/^f01065d7:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01065da	obj/kern/kernel.asm	/^f01065da:	75 20                	jne    f01065fc <memset+0x4b>$/;"	l
f01065dc	obj/kern/kernel.asm	/^f01065dc:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01065df	obj/kern/kernel.asm	/^f01065df:	89 d3                	mov    %edx,%ebx$/;"	l
f01065e1	obj/kern/kernel.asm	/^f01065e1:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01065e4	obj/kern/kernel.asm	/^f01065e4:	89 d6                	mov    %edx,%esi$/;"	l
f01065e6	obj/kern/kernel.asm	/^f01065e6:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01065e9	obj/kern/kernel.asm	/^f01065e9:	89 d0                	mov    %edx,%eax$/;"	l
f01065eb	obj/kern/kernel.asm	/^f01065eb:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01065ee	obj/kern/kernel.asm	/^f01065ee:	09 f0                	or     %esi,%eax$/;"	l
f01065f0	obj/kern/kernel.asm	/^f01065f0:	09 d0                	or     %edx,%eax$/;"	l
f01065f2	obj/kern/kernel.asm	/^f01065f2:	09 d8                	or     %ebx,%eax$/;"	l
f01065f4	obj/kern/kernel.asm	/^f01065f4:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01065f7	obj/kern/kernel.asm	/^f01065f7:	fc                   	cld    $/;"	l
f01065f8	obj/kern/kernel.asm	/^f01065f8:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01065fa	obj/kern/kernel.asm	/^f01065fa:	eb 03                	jmp    f01065ff <memset+0x4e>$/;"	l
f01065fc	obj/kern/kernel.asm	/^f01065fc:	fc                   	cld    $/;"	l
f01065fd	obj/kern/kernel.asm	/^f01065fd:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	89 f8                	mov    %edi,%eax$/;"	l
f0106601	obj/kern/kernel.asm	/^f0106601:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f0106604	obj/kern/kernel.asm	/^f0106604:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0106608	obj/kern/kernel.asm	/^f0106608:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f010660c	obj/kern/kernel.asm	/^f010660c:	89 ec                	mov    %ebp,%esp$/;"	l
f010660e	obj/kern/kernel.asm	/^f010660e:	5d                   	pop    %ebp$/;"	l
f010660f	obj/kern/kernel.asm	/^f010660f:	c3                   	ret    $/;"	l
f0106610	obj/kern/kernel.asm	/^f0106610 <memmove>:$/;"	l
f0106610	obj/kern/kernel.asm	/^f0106610:	55                   	push   %ebp$/;"	l
f0106611	obj/kern/kernel.asm	/^f0106611:	89 e5                	mov    %esp,%ebp$/;"	l
f0106613	obj/kern/kernel.asm	/^f0106613:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106616	obj/kern/kernel.asm	/^f0106616:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0106619	obj/kern/kernel.asm	/^f0106619:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010661d	obj/kern/kernel.asm	/^f010661d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106620	obj/kern/kernel.asm	/^f0106620:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106623	obj/kern/kernel.asm	/^f0106623:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106626	obj/kern/kernel.asm	/^f0106626:	39 c6                	cmp    %eax,%esi$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628:	73 36                	jae    f0106660 <memmove+0x50>$/;"	l
f010662a	obj/kern/kernel.asm	/^f010662a:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	39 d0                	cmp    %edx,%eax$/;"	l
f010662f	obj/kern/kernel.asm	/^f010662f:	73 2f                	jae    f0106660 <memmove+0x50>$/;"	l
f0106631	obj/kern/kernel.asm	/^f0106631:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0106634	obj/kern/kernel.asm	/^f0106634:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0106637	obj/kern/kernel.asm	/^f0106637:	75 1b                	jne    f0106654 <memmove+0x44>$/;"	l
f0106639	obj/kern/kernel.asm	/^f0106639:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	75 13                	jne    f0106654 <memmove+0x44>$/;"	l
f0106641	obj/kern/kernel.asm	/^f0106641:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106644	obj/kern/kernel.asm	/^f0106644:	75 0e                	jne    f0106654 <memmove+0x44>$/;"	l
f0106646	obj/kern/kernel.asm	/^f0106646:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0106649	obj/kern/kernel.asm	/^f0106649:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010664f	obj/kern/kernel.asm	/^f010664f:	fd                   	std    $/;"	l
f0106650	obj/kern/kernel.asm	/^f0106650:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106652	obj/kern/kernel.asm	/^f0106652:	eb 09                	jmp    f010665d <memmove+0x4d>$/;"	l
f0106654	obj/kern/kernel.asm	/^f0106654:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106657	obj/kern/kernel.asm	/^f0106657:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f010665a	obj/kern/kernel.asm	/^f010665a:	fd                   	std    $/;"	l
f010665b	obj/kern/kernel.asm	/^f010665b:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010665d	obj/kern/kernel.asm	/^f010665d:	fc                   	cld    $/;"	l
f010665e	obj/kern/kernel.asm	/^f010665e:	eb 20                	jmp    f0106680 <memmove+0x70>$/;"	l
f0106660	obj/kern/kernel.asm	/^f0106660:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0106666	obj/kern/kernel.asm	/^f0106666:	75 13                	jne    f010667b <memmove+0x6b>$/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668:	a8 03                	test   $0x3,%al$/;"	l
f010666a	obj/kern/kernel.asm	/^f010666a:	75 0f                	jne    f010667b <memmove+0x6b>$/;"	l
f010666c	obj/kern/kernel.asm	/^f010666c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010666f	obj/kern/kernel.asm	/^f010666f:	75 0a                	jne    f010667b <memmove+0x6b>$/;"	l
f0106671	obj/kern/kernel.asm	/^f0106671:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106674	obj/kern/kernel.asm	/^f0106674:	89 c7                	mov    %eax,%edi$/;"	l
f0106676	obj/kern/kernel.asm	/^f0106676:	fc                   	cld    $/;"	l
f0106677	obj/kern/kernel.asm	/^f0106677:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106679	obj/kern/kernel.asm	/^f0106679:	eb 05                	jmp    f0106680 <memmove+0x70>$/;"	l
f010667b	obj/kern/kernel.asm	/^f010667b:	89 c7                	mov    %eax,%edi$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	fc                   	cld    $/;"	l
f010667e	obj/kern/kernel.asm	/^f010667e:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0106683	obj/kern/kernel.asm	/^f0106683:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0106687	obj/kern/kernel.asm	/^f0106687:	89 ec                	mov    %ebp,%esp$/;"	l
f0106689	obj/kern/kernel.asm	/^f0106689:	5d                   	pop    %ebp$/;"	l
f010668a	obj/kern/kernel.asm	/^f010668a:	c3                   	ret    $/;"	l
f010668b	obj/kern/kernel.asm	/^f010668b <memcpy>:$/;"	l
f010668b	obj/kern/kernel.asm	/^f010668b:	55                   	push   %ebp$/;"	l
f010668c	obj/kern/kernel.asm	/^f010668c:	89 e5                	mov    %esp,%ebp$/;"	l
f010668e	obj/kern/kernel.asm	/^f010668e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106691	obj/kern/kernel.asm	/^f0106691:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106694	obj/kern/kernel.asm	/^f0106694:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106698	obj/kern/kernel.asm	/^f0106698:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010669f	obj/kern/kernel.asm	/^f010669f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01066a5	obj/kern/kernel.asm	/^f01066a5:	e8 66 ff ff ff       	call   f0106610 <memmove>$/;"	l
f01066aa	obj/kern/kernel.asm	/^f01066aa:	c9                   	leave  $/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	c3                   	ret    $/;"	l
f01066ac	obj/kern/kernel.asm	/^f01066ac <memcmp>:$/;"	l
f01066ac	obj/kern/kernel.asm	/^f01066ac:	55                   	push   %ebp$/;"	l
f01066ad	obj/kern/kernel.asm	/^f01066ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01066af	obj/kern/kernel.asm	/^f01066af:	57                   	push   %edi$/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0:	56                   	push   %esi$/;"	l
f01066b1	obj/kern/kernel.asm	/^f01066b1:	53                   	push   %ebx$/;"	l
f01066b2	obj/kern/kernel.asm	/^f01066b2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01066b5	obj/kern/kernel.asm	/^f01066b5:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01066b8	obj/kern/kernel.asm	/^f01066b8:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01066bb	obj/kern/kernel.asm	/^f01066bb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01066c0	obj/kern/kernel.asm	/^f01066c0:	85 ff                	test   %edi,%edi$/;"	l
f01066c2	obj/kern/kernel.asm	/^f01066c2:	74 38                	je     f01066fc <memcmp+0x50>$/;"	l
f01066c4	obj/kern/kernel.asm	/^f01066c4:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01066c7	obj/kern/kernel.asm	/^f01066c7:	0f b6 0e             	movzbl (%esi),%ecx$/;"	l
f01066ca	obj/kern/kernel.asm	/^f01066ca:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01066cd	obj/kern/kernel.asm	/^f01066cd:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01066d2	obj/kern/kernel.asm	/^f01066d2:	38 c8                	cmp    %cl,%al$/;"	l
f01066d4	obj/kern/kernel.asm	/^f01066d4:	74 1d                	je     f01066f3 <memcmp+0x47>$/;"	l
f01066d6	obj/kern/kernel.asm	/^f01066d6:	eb 11                	jmp    f01066e9 <memcmp+0x3d>$/;"	l
f01066d8	obj/kern/kernel.asm	/^f01066d8:	0f b6 44 13 01       	movzbl 0x1(%ebx,%edx,1),%eax$/;"	l
f01066dd	obj/kern/kernel.asm	/^f01066dd:	0f b6 4c 16 01       	movzbl 0x1(%esi,%edx,1),%ecx$/;"	l
f01066e2	obj/kern/kernel.asm	/^f01066e2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01066e5	obj/kern/kernel.asm	/^f01066e5:	38 c8                	cmp    %cl,%al$/;"	l
f01066e7	obj/kern/kernel.asm	/^f01066e7:	74 0a                	je     f01066f3 <memcmp+0x47>$/;"	l
f01066e9	obj/kern/kernel.asm	/^f01066e9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01066ec	obj/kern/kernel.asm	/^f01066ec:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f01066ef	obj/kern/kernel.asm	/^f01066ef:	29 c8                	sub    %ecx,%eax$/;"	l
f01066f1	obj/kern/kernel.asm	/^f01066f1:	eb 09                	jmp    f01066fc <memcmp+0x50>$/;"	l
f01066f3	obj/kern/kernel.asm	/^f01066f3:	39 fa                	cmp    %edi,%edx$/;"	l
f01066f5	obj/kern/kernel.asm	/^f01066f5:	75 e1                	jne    f01066d8 <memcmp+0x2c>$/;"	l
f01066f7	obj/kern/kernel.asm	/^f01066f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01066fc	obj/kern/kernel.asm	/^f01066fc:	5b                   	pop    %ebx$/;"	l
f01066fd	obj/kern/kernel.asm	/^f01066fd:	5e                   	pop    %esi$/;"	l
f01066fe	obj/kern/kernel.asm	/^f01066fe:	5f                   	pop    %edi$/;"	l
f01066ff	obj/kern/kernel.asm	/^f01066ff:	5d                   	pop    %ebp$/;"	l
f0106700	obj/kern/kernel.asm	/^f0106700:	c3                   	ret    $/;"	l
f0106701	obj/kern/kernel.asm	/^f0106701 <memfind>:$/;"	l
f0106701	obj/kern/kernel.asm	/^f0106701:	55                   	push   %ebp$/;"	l
f0106702	obj/kern/kernel.asm	/^f0106702:	89 e5                	mov    %esp,%ebp$/;"	l
f0106704	obj/kern/kernel.asm	/^f0106704:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106707	obj/kern/kernel.asm	/^f0106707:	89 c2                	mov    %eax,%edx$/;"	l
f0106709	obj/kern/kernel.asm	/^f0106709:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f010670c	obj/kern/kernel.asm	/^f010670c:	39 d0                	cmp    %edx,%eax$/;"	l
f010670e	obj/kern/kernel.asm	/^f010670e:	73 15                	jae    f0106725 <memfind+0x24>$/;"	l
f0106710	obj/kern/kernel.asm	/^f0106710:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106714	obj/kern/kernel.asm	/^f0106714:	38 08                	cmp    %cl,(%eax)$/;"	l
f0106716	obj/kern/kernel.asm	/^f0106716:	75 06                	jne    f010671e <memfind+0x1d>$/;"	l
f0106718	obj/kern/kernel.asm	/^f0106718:	eb 0b                	jmp    f0106725 <memfind+0x24>$/;"	l
f010671a	obj/kern/kernel.asm	/^f010671a:	38 08                	cmp    %cl,(%eax)$/;"	l
f010671c	obj/kern/kernel.asm	/^f010671c:	74 07                	je     f0106725 <memfind+0x24>$/;"	l
f010671e	obj/kern/kernel.asm	/^f010671e:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106721	obj/kern/kernel.asm	/^f0106721:	39 c2                	cmp    %eax,%edx$/;"	l
f0106723	obj/kern/kernel.asm	/^f0106723:	77 f5                	ja     f010671a <memfind+0x19>$/;"	l
f0106725	obj/kern/kernel.asm	/^f0106725:	5d                   	pop    %ebp$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	c3                   	ret    $/;"	l
f0106727	obj/kern/kernel.asm	/^f0106727 <strtol>:$/;"	l
f0106727	obj/kern/kernel.asm	/^f0106727:	55                   	push   %ebp$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	89 e5                	mov    %esp,%ebp$/;"	l
f010672a	obj/kern/kernel.asm	/^f010672a:	57                   	push   %edi$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	56                   	push   %esi$/;"	l
f010672c	obj/kern/kernel.asm	/^f010672c:	53                   	push   %ebx$/;"	l
f010672d	obj/kern/kernel.asm	/^f010672d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0106733	obj/kern/kernel.asm	/^f0106733:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106736	obj/kern/kernel.asm	/^f0106736:	3c 20                	cmp    $0x20,%al$/;"	l
f0106738	obj/kern/kernel.asm	/^f0106738:	74 04                	je     f010673e <strtol+0x17>$/;"	l
f010673a	obj/kern/kernel.asm	/^f010673a:	3c 09                	cmp    $0x9,%al$/;"	l
f010673c	obj/kern/kernel.asm	/^f010673c:	75 0e                	jne    f010674c <strtol+0x25>$/;"	l
f010673e	obj/kern/kernel.asm	/^f010673e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106741	obj/kern/kernel.asm	/^f0106741:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106744	obj/kern/kernel.asm	/^f0106744:	3c 20                	cmp    $0x20,%al$/;"	l
f0106746	obj/kern/kernel.asm	/^f0106746:	74 f6                	je     f010673e <strtol+0x17>$/;"	l
f0106748	obj/kern/kernel.asm	/^f0106748:	3c 09                	cmp    $0x9,%al$/;"	l
f010674a	obj/kern/kernel.asm	/^f010674a:	74 f2                	je     f010673e <strtol+0x17>$/;"	l
f010674c	obj/kern/kernel.asm	/^f010674c:	3c 2b                	cmp    $0x2b,%al$/;"	l
f010674e	obj/kern/kernel.asm	/^f010674e:	75 0a                	jne    f010675a <strtol+0x33>$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106753	obj/kern/kernel.asm	/^f0106753:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106758	obj/kern/kernel.asm	/^f0106758:	eb 10                	jmp    f010676a <strtol+0x43>$/;"	l
f010675a	obj/kern/kernel.asm	/^f010675a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0106761	obj/kern/kernel.asm	/^f0106761:	75 07                	jne    f010676a <strtol+0x43>$/;"	l
f0106763	obj/kern/kernel.asm	/^f0106763:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106766	obj/kern/kernel.asm	/^f0106766:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f010676a	obj/kern/kernel.asm	/^f010676a:	85 db                	test   %ebx,%ebx$/;"	l
f010676c	obj/kern/kernel.asm	/^f010676c:	0f 94 c0             	sete   %al$/;"	l
f010676f	obj/kern/kernel.asm	/^f010676f:	74 05                	je     f0106776 <strtol+0x4f>$/;"	l
f0106771	obj/kern/kernel.asm	/^f0106771:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0106774	obj/kern/kernel.asm	/^f0106774:	75 15                	jne    f010678b <strtol+0x64>$/;"	l
f0106776	obj/kern/kernel.asm	/^f0106776:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106779	obj/kern/kernel.asm	/^f0106779:	75 10                	jne    f010678b <strtol+0x64>$/;"	l
f010677b	obj/kern/kernel.asm	/^f010677b:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f010677f	obj/kern/kernel.asm	/^f010677f:	75 0a                	jne    f010678b <strtol+0x64>$/;"	l
f0106781	obj/kern/kernel.asm	/^f0106781:	83 c2 02             	add    $0x2,%edx$/;"	l
f0106784	obj/kern/kernel.asm	/^f0106784:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0106789	obj/kern/kernel.asm	/^f0106789:	eb 13                	jmp    f010679e <strtol+0x77>$/;"	l
f010678b	obj/kern/kernel.asm	/^f010678b:	84 c0                	test   %al,%al$/;"	l
f010678d	obj/kern/kernel.asm	/^f010678d:	74 0f                	je     f010679e <strtol+0x77>$/;"	l
f010678f	obj/kern/kernel.asm	/^f010678f:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0106794	obj/kern/kernel.asm	/^f0106794:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106797	obj/kern/kernel.asm	/^f0106797:	75 05                	jne    f010679e <strtol+0x77>$/;"	l
f0106799	obj/kern/kernel.asm	/^f0106799:	83 c2 01             	add    $0x1,%edx$/;"	l
f010679c	obj/kern/kernel.asm	/^f010679c:	b3 08                	mov    $0x8,%bl$/;"	l
f010679e	obj/kern/kernel.asm	/^f010679e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01067a3	obj/kern/kernel.asm	/^f01067a3:	89 de                	mov    %ebx,%esi$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01067a8	obj/kern/kernel.asm	/^f01067a8:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f01067ab	obj/kern/kernel.asm	/^f01067ab:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f01067ae	obj/kern/kernel.asm	/^f01067ae:	77 08                	ja     f01067b8 <strtol+0x91>$/;"	l
f01067b0	obj/kern/kernel.asm	/^f01067b0:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01067b3	obj/kern/kernel.asm	/^f01067b3:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f01067b6	obj/kern/kernel.asm	/^f01067b6:	eb 1e                	jmp    f01067d6 <strtol+0xaf>$/;"	l
f01067b8	obj/kern/kernel.asm	/^f01067b8:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
f01067bb	obj/kern/kernel.asm	/^f01067bb:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01067be	obj/kern/kernel.asm	/^f01067be:	77 08                	ja     f01067c8 <strtol+0xa1>$/;"	l
f01067c0	obj/kern/kernel.asm	/^f01067c0:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01067c3	obj/kern/kernel.asm	/^f01067c3:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f01067c6	obj/kern/kernel.asm	/^f01067c6:	eb 0e                	jmp    f01067d6 <strtol+0xaf>$/;"	l
f01067c8	obj/kern/kernel.asm	/^f01067c8:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
f01067cb	obj/kern/kernel.asm	/^f01067cb:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01067ce	obj/kern/kernel.asm	/^f01067ce:	77 15                	ja     f01067e5 <strtol+0xbe>$/;"	l
f01067d0	obj/kern/kernel.asm	/^f01067d0:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01067d3	obj/kern/kernel.asm	/^f01067d3:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f01067d6	obj/kern/kernel.asm	/^f01067d6:	39 f1                	cmp    %esi,%ecx$/;"	l
f01067d8	obj/kern/kernel.asm	/^f01067d8:	7d 0f                	jge    f01067e9 <strtol+0xc2>$/;"	l
f01067da	obj/kern/kernel.asm	/^f01067da:	83 c2 01             	add    $0x1,%edx$/;"	l
f01067dd	obj/kern/kernel.asm	/^f01067dd:	0f af c6             	imul   %esi,%eax$/;"	l
f01067e0	obj/kern/kernel.asm	/^f01067e0:	8d 04 01             	lea    (%ecx,%eax,1),%eax$/;"	l
f01067e3	obj/kern/kernel.asm	/^f01067e3:	eb c0                	jmp    f01067a5 <strtol+0x7e>$/;"	l
f01067e5	obj/kern/kernel.asm	/^f01067e5:	89 c1                	mov    %eax,%ecx$/;"	l
f01067e7	obj/kern/kernel.asm	/^f01067e7:	eb 02                	jmp    f01067eb <strtol+0xc4>$/;"	l
f01067e9	obj/kern/kernel.asm	/^f01067e9:	89 c1                	mov    %eax,%ecx$/;"	l
f01067eb	obj/kern/kernel.asm	/^f01067eb:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01067ef	obj/kern/kernel.asm	/^f01067ef:	74 05                	je     f01067f6 <strtol+0xcf>$/;"	l
f01067f1	obj/kern/kernel.asm	/^f01067f1:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01067f4	obj/kern/kernel.asm	/^f01067f4:	89 13                	mov    %edx,(%ebx)$/;"	l
f01067f6	obj/kern/kernel.asm	/^f01067f6:	89 ca                	mov    %ecx,%edx$/;"	l
f01067f8	obj/kern/kernel.asm	/^f01067f8:	f7 da                	neg    %edx$/;"	l
f01067fa	obj/kern/kernel.asm	/^f01067fa:	85 ff                	test   %edi,%edi$/;"	l
f01067fc	obj/kern/kernel.asm	/^f01067fc:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f01067ff	obj/kern/kernel.asm	/^f01067ff:	5b                   	pop    %ebx$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800:	5e                   	pop    %esi$/;"	l
f0106801	obj/kern/kernel.asm	/^f0106801:	5f                   	pop    %edi$/;"	l
f0106802	obj/kern/kernel.asm	/^f0106802:	5d                   	pop    %ebp$/;"	l
f0106803	obj/kern/kernel.asm	/^f0106803:	c3                   	ret    $/;"	l
f0106804	obj/kern/kernel.asm	/^f0106804 <mpentry_start>:$/;"	l
f0106804	obj/kern/kernel.asm	/^f0106804:	fa                   	cli    $/;"	l
f0106805	obj/kern/kernel.asm	/^f0106805:	31 c0                	xor    %eax,%eax$/;"	l
f0106807	obj/kern/kernel.asm	/^f0106807:	8e d8                	mov    %eax,%ds$/;"	l
f0106809	obj/kern/kernel.asm	/^f0106809:	8e c0                	mov    %eax,%es$/;"	l
f010680b	obj/kern/kernel.asm	/^f010680b:	8e d0                	mov    %eax,%ss$/;"	l
f010680d	obj/kern/kernel.asm	/^f010680d:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0106810	obj/kern/kernel.asm	/^f0106810:	74 70                	je     f0106882 <sum+0x2>$/;"	l
f0106812	obj/kern/kernel.asm	/^f0106812:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106815	obj/kern/kernel.asm	/^f0106815:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0106819	obj/kern/kernel.asm	/^f0106819:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010681c	obj/kern/kernel.asm	/^f010681c:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0106822	obj/kern/kernel.asm	/^f0106822:	08 00                	or     %al,(%eax)$/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824 <start32>:$/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0106828	obj/kern/kernel.asm	/^f0106828:	8e d8                	mov    %eax,%ds$/;"	l
f010682a	obj/kern/kernel.asm	/^f010682a:	8e c0                	mov    %eax,%es$/;"	l
f010682c	obj/kern/kernel.asm	/^f010682c:	8e d0                	mov    %eax,%ss$/;"	l
f010682e	obj/kern/kernel.asm	/^f010682e:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0106832	obj/kern/kernel.asm	/^f0106832:	8e e0                	mov    %eax,%fs$/;"	l
f0106834	obj/kern/kernel.asm	/^f0106834:	8e e8                	mov    %eax,%gs$/;"	l
f0106836	obj/kern/kernel.asm	/^f0106836:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f010683b	obj/kern/kernel.asm	/^f010683b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010683e	obj/kern/kernel.asm	/^f010683e:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106841	obj/kern/kernel.asm	/^f0106841:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0106846	obj/kern/kernel.asm	/^f0106846:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106849	obj/kern/kernel.asm	/^f0106849:	8b 25 84 8e 1d f0    	mov    0xf01d8e84,%esp$/;"	l
f010684f	obj/kern/kernel.asm	/^f010684f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0106854	obj/kern/kernel.asm	/^f0106854:	b8 a8 00 10 f0       	mov    $0xf01000a8,%eax$/;"	l
f0106859	obj/kern/kernel.asm	/^f0106859:	ff d0                	call   *%eax$/;"	l
f010685b	obj/kern/kernel.asm	/^f010685b <spin>:$/;"	l
f010685b	obj/kern/kernel.asm	/^f010685b:	eb fe                	jmp    f010685b <spin>$/;"	l
f010685d	obj/kern/kernel.asm	/^f010685d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106860	obj/kern/kernel.asm	/^f0106860 <gdt>:$/;"	l
f0106868	obj/kern/kernel.asm	/^f0106868:	ff                   	(bad)  $/;"	l
f0106869	obj/kern/kernel.asm	/^f0106869:	ff 00                	incl   (%eax)$/;"	l
f010686b	obj/kern/kernel.asm	/^f010686b:	00 00                	add    %al,(%eax)$/;"	l
f010686d	obj/kern/kernel.asm	/^f010686d:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106874	obj/kern/kernel.asm	/^f0106874:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0106878	obj/kern/kernel.asm	/^f0106878 <gdtdesc>:$/;"	l
f0106878	obj/kern/kernel.asm	/^f0106878:	17                   	pop    %ss$/;"	l
f0106879	obj/kern/kernel.asm	/^f0106879:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f010687e	obj/kern/kernel.asm	/^f010687e <mpentry_end>:$/;"	l
f010687e	obj/kern/kernel.asm	/^f010687e:	90                   	nop$/;"	l
f0106880	obj/kern/kernel.asm	/^f0106880 <sum>:$/;"	l
f0106880	obj/kern/kernel.asm	/^f0106880:	55                   	push   %ebp$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	89 e5                	mov    %esp,%ebp$/;"	l
f0106883	obj/kern/kernel.asm	/^f0106883:	56                   	push   %esi$/;"	l
f0106884	obj/kern/kernel.asm	/^f0106884:	53                   	push   %ebx$/;"	l
f0106885	obj/kern/kernel.asm	/^f0106885:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010688a	obj/kern/kernel.asm	/^f010688a:	85 d2                	test   %edx,%edx$/;"	l
f010688c	obj/kern/kernel.asm	/^f010688c:	7e 12                	jle    f01068a0 <sum+0x20>$/;"	l
f010688e	obj/kern/kernel.asm	/^f010688e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0106893	obj/kern/kernel.asm	/^f0106893:	0f b6 34 08          	movzbl (%eax,%ecx,1),%esi$/;"	l
f0106897	obj/kern/kernel.asm	/^f0106897:	01 f3                	add    %esi,%ebx$/;"	l
f0106899	obj/kern/kernel.asm	/^f0106899:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010689c	obj/kern/kernel.asm	/^f010689c:	39 d1                	cmp    %edx,%ecx$/;"	l
f010689e	obj/kern/kernel.asm	/^f010689e:	75 f3                	jne    f0106893 <sum+0x13>$/;"	l
f01068a0	obj/kern/kernel.asm	/^f01068a0:	89 d8                	mov    %ebx,%eax$/;"	l
f01068a2	obj/kern/kernel.asm	/^f01068a2:	5b                   	pop    %ebx$/;"	l
f01068a3	obj/kern/kernel.asm	/^f01068a3:	5e                   	pop    %esi$/;"	l
f01068a4	obj/kern/kernel.asm	/^f01068a4:	5d                   	pop    %ebp$/;"	l
f01068a5	obj/kern/kernel.asm	/^f01068a5:	c3                   	ret    $/;"	l
f01068a6	obj/kern/kernel.asm	/^f01068a6 <mpsearch1>:$/;"	l
f01068a6	obj/kern/kernel.asm	/^f01068a6:	55                   	push   %ebp$/;"	l
f01068a7	obj/kern/kernel.asm	/^f01068a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01068a9	obj/kern/kernel.asm	/^f01068a9:	56                   	push   %esi$/;"	l
f01068aa	obj/kern/kernel.asm	/^f01068aa:	53                   	push   %ebx$/;"	l
f01068ab	obj/kern/kernel.asm	/^f01068ab:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01068ae	obj/kern/kernel.asm	/^f01068ae:	8b 0d 88 8e 1d f0    	mov    0xf01d8e88,%ecx$/;"	l
f01068b4	obj/kern/kernel.asm	/^f01068b4:	89 c3                	mov    %eax,%ebx$/;"	l
f01068b6	obj/kern/kernel.asm	/^f01068b6:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01068b9	obj/kern/kernel.asm	/^f01068b9:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01068bb	obj/kern/kernel.asm	/^f01068bb:	72 20                	jb     f01068dd <mpsearch1+0x37>$/;"	l
f01068bd	obj/kern/kernel.asm	/^f01068bd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01068c1	obj/kern/kernel.asm	/^f01068c1:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f01068c8	obj/kern/kernel.asm	/^f01068c8:	f0 $/;"	l
f01068c9	obj/kern/kernel.asm	/^f01068c9:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01068d0	obj/kern/kernel.asm	/^f01068d0:	00 $/;"	l
f01068d1	obj/kern/kernel.asm	/^f01068d1:	c7 04 24 5d 8e 10 f0 	movl   $0xf0108e5d,(%esp)$/;"	l
f01068d8	obj/kern/kernel.asm	/^f01068d8:	e8 63 97 ff ff       	call   f0100040 <_panic>$/;"	l
f01068dd	obj/kern/kernel.asm	/^f01068dd:	8d 34 02             	lea    (%edx,%eax,1),%esi$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	89 f2                	mov    %esi,%edx$/;"	l
f01068e2	obj/kern/kernel.asm	/^f01068e2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	39 d1                	cmp    %edx,%ecx$/;"	l
f01068e7	obj/kern/kernel.asm	/^f01068e7:	77 20                	ja     f0106909 <mpsearch1+0x63>$/;"	l
f01068e9	obj/kern/kernel.asm	/^f01068e9:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01068ed	obj/kern/kernel.asm	/^f01068ed:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f01068f4	obj/kern/kernel.asm	/^f01068f4:	f0 $/;"	l
f01068f5	obj/kern/kernel.asm	/^f01068f5:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01068fc	obj/kern/kernel.asm	/^f01068fc:	00 $/;"	l
f01068fd	obj/kern/kernel.asm	/^f01068fd:	c7 04 24 5d 8e 10 f0 	movl   $0xf0108e5d,(%esp)$/;"	l
f0106904	obj/kern/kernel.asm	/^f0106904:	e8 37 97 ff ff       	call   f0100040 <_panic>$/;"	l
f0106909	obj/kern/kernel.asm	/^f0106909:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f010690f	obj/kern/kernel.asm	/^f010690f:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f0106915	obj/kern/kernel.asm	/^f0106915:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106917	obj/kern/kernel.asm	/^f0106917:	73 3a                	jae    f0106953 <mpsearch1+0xad>$/;"	l
f0106919	obj/kern/kernel.asm	/^f0106919:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106920	obj/kern/kernel.asm	/^f0106920:	00 $/;"	l
f0106921	obj/kern/kernel.asm	/^f0106921:	c7 44 24 04 6d 8e 10 	movl   $0xf0108e6d,0x4(%esp)$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	f0 $/;"	l
f0106929	obj/kern/kernel.asm	/^f0106929:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010692c	obj/kern/kernel.asm	/^f010692c:	e8 7b fd ff ff       	call   f01066ac <memcmp>$/;"	l
f0106931	obj/kern/kernel.asm	/^f0106931:	85 c0                	test   %eax,%eax$/;"	l
f0106933	obj/kern/kernel.asm	/^f0106933:	75 10                	jne    f0106945 <mpsearch1+0x9f>$/;"	l
f0106935	obj/kern/kernel.asm	/^f0106935:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	89 d8                	mov    %ebx,%eax$/;"	l
f010693c	obj/kern/kernel.asm	/^f010693c:	e8 3f ff ff ff       	call   f0106880 <sum>$/;"	l
f0106941	obj/kern/kernel.asm	/^f0106941:	84 c0                	test   %al,%al$/;"	l
f0106943	obj/kern/kernel.asm	/^f0106943:	74 13                	je     f0106958 <mpsearch1+0xb2>$/;"	l
f0106945	obj/kern/kernel.asm	/^f0106945:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0106948	obj/kern/kernel.asm	/^f0106948:	39 de                	cmp    %ebx,%esi$/;"	l
f010694a	obj/kern/kernel.asm	/^f010694a:	77 cd                	ja     f0106919 <mpsearch1+0x73>$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106951	obj/kern/kernel.asm	/^f0106951:	eb 05                	jmp    f0106958 <mpsearch1+0xb2>$/;"	l
f0106953	obj/kern/kernel.asm	/^f0106953:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106958	obj/kern/kernel.asm	/^f0106958:	89 d8                	mov    %ebx,%eax$/;"	l
f010695a	obj/kern/kernel.asm	/^f010695a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010695d	obj/kern/kernel.asm	/^f010695d:	5b                   	pop    %ebx$/;"	l
f010695e	obj/kern/kernel.asm	/^f010695e:	5e                   	pop    %esi$/;"	l
f010695f	obj/kern/kernel.asm	/^f010695f:	5d                   	pop    %ebp$/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960:	c3                   	ret    $/;"	l
f0106961	obj/kern/kernel.asm	/^f0106961 <mp_init>:$/;"	l
f0106961	obj/kern/kernel.asm	/^f0106961:	55                   	push   %ebp$/;"	l
f0106962	obj/kern/kernel.asm	/^f0106962:	89 e5                	mov    %esp,%ebp$/;"	l
f0106964	obj/kern/kernel.asm	/^f0106964:	57                   	push   %edi$/;"	l
f0106965	obj/kern/kernel.asm	/^f0106965:	56                   	push   %esi$/;"	l
f0106966	obj/kern/kernel.asm	/^f0106966:	53                   	push   %ebx$/;"	l
f0106967	obj/kern/kernel.asm	/^f0106967:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010696a	obj/kern/kernel.asm	/^f010696a:	c7 05 c0 93 1d f0 20 	movl   $0xf01d9020,0xf01d93c0$/;"	l
f0106971	obj/kern/kernel.asm	/^f0106971:	90 1d f0 $/;"	l
f0106974	obj/kern/kernel.asm	/^f0106974:	83 3d 88 8e 1d f0 00 	cmpl   $0x0,0xf01d8e88$/;"	l
f010697b	obj/kern/kernel.asm	/^f010697b:	75 24                	jne    f01069a1 <mp_init+0x40>$/;"	l
f010697d	obj/kern/kernel.asm	/^f010697d:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0106984	obj/kern/kernel.asm	/^f0106984:	00 $/;"	l
f0106985	obj/kern/kernel.asm	/^f0106985:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c:	f0 $/;"	l
f010698d	obj/kern/kernel.asm	/^f010698d:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0106994	obj/kern/kernel.asm	/^f0106994:	00 $/;"	l
f0106995	obj/kern/kernel.asm	/^f0106995:	c7 04 24 5d 8e 10 f0 	movl   $0xf0108e5d,(%esp)$/;"	l
f010699c	obj/kern/kernel.asm	/^f010699c:	e8 9f 96 ff ff       	call   f0100040 <_panic>$/;"	l
f01069a1	obj/kern/kernel.asm	/^f01069a1:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f01069a8	obj/kern/kernel.asm	/^f01069a8:	85 c0                	test   %eax,%eax$/;"	l
f01069aa	obj/kern/kernel.asm	/^f01069aa:	74 16                	je     f01069c2 <mp_init+0x61>$/;"	l
f01069ac	obj/kern/kernel.asm	/^f01069ac:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01069af	obj/kern/kernel.asm	/^f01069af:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01069b4	obj/kern/kernel.asm	/^f01069b4:	e8 ed fe ff ff       	call   f01068a6 <mpsearch1>$/;"	l
f01069b9	obj/kern/kernel.asm	/^f01069b9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01069bc	obj/kern/kernel.asm	/^f01069bc:	85 c0                	test   %eax,%eax$/;"	l
f01069be	obj/kern/kernel.asm	/^f01069be:	75 3c                	jne    f01069fc <mp_init+0x9b>$/;"	l
f01069c0	obj/kern/kernel.asm	/^f01069c0:	eb 20                	jmp    f01069e2 <mp_init+0x81>$/;"	l
f01069c2	obj/kern/kernel.asm	/^f01069c2:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f01069c9	obj/kern/kernel.asm	/^f01069c9:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01069cc	obj/kern/kernel.asm	/^f01069cc:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f01069d1	obj/kern/kernel.asm	/^f01069d1:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01069d6	obj/kern/kernel.asm	/^f01069d6:	e8 cb fe ff ff       	call   f01068a6 <mpsearch1>$/;"	l
f01069db	obj/kern/kernel.asm	/^f01069db:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01069de	obj/kern/kernel.asm	/^f01069de:	85 c0                	test   %eax,%eax$/;"	l
f01069e0	obj/kern/kernel.asm	/^f01069e0:	75 1a                	jne    f01069fc <mp_init+0x9b>$/;"	l
f01069e2	obj/kern/kernel.asm	/^f01069e2:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01069e7	obj/kern/kernel.asm	/^f01069e7:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	e8 b5 fe ff ff       	call   f01068a6 <mpsearch1>$/;"	l
f01069f1	obj/kern/kernel.asm	/^f01069f1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01069f4	obj/kern/kernel.asm	/^f01069f4:	85 c0                	test   %eax,%eax$/;"	l
f01069f6	obj/kern/kernel.asm	/^f01069f6:	0f 84 26 02 00 00    	je     f0106c22 <mp_init+0x2c1>$/;"	l
f01069fc	obj/kern/kernel.asm	/^f01069fc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01069ff	obj/kern/kernel.asm	/^f01069ff:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0106a02	obj/kern/kernel.asm	/^f0106a02:	85 ff                	test   %edi,%edi$/;"	l
f0106a04	obj/kern/kernel.asm	/^f0106a04:	74 06                	je     f0106a0c <mp_init+0xab>$/;"	l
f0106a06	obj/kern/kernel.asm	/^f0106a06:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106a0a	obj/kern/kernel.asm	/^f0106a0a:	74 11                	je     f0106a1d <mp_init+0xbc>$/;"	l
f0106a0c	obj/kern/kernel.asm	/^f0106a0c:	c7 04 24 d0 8c 10 f0 	movl   $0xf0108cd0,(%esp)$/;"	l
f0106a13	obj/kern/kernel.asm	/^f0106a13:	e8 82 d6 ff ff       	call   f010409a <cprintf>$/;"	l
f0106a18	obj/kern/kernel.asm	/^f0106a18:	e9 05 02 00 00       	jmp    f0106c22 <mp_init+0x2c1>$/;"	l
f0106a1d	obj/kern/kernel.asm	/^f0106a1d:	89 f8                	mov    %edi,%eax$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0106a22	obj/kern/kernel.asm	/^f0106a22:	3b 05 88 8e 1d f0    	cmp    0xf01d8e88,%eax$/;"	l
f0106a28	obj/kern/kernel.asm	/^f0106a28:	72 20                	jb     f0106a4a <mp_init+0xe9>$/;"	l
f0106a2a	obj/kern/kernel.asm	/^f0106a2a:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106a2e	obj/kern/kernel.asm	/^f0106a2e:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0106a35	obj/kern/kernel.asm	/^f0106a35:	f0 $/;"	l
f0106a36	obj/kern/kernel.asm	/^f0106a36:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0106a3d	obj/kern/kernel.asm	/^f0106a3d:	00 $/;"	l
f0106a3e	obj/kern/kernel.asm	/^f0106a3e:	c7 04 24 5d 8e 10 f0 	movl   $0xf0108e5d,(%esp)$/;"	l
f0106a45	obj/kern/kernel.asm	/^f0106a45:	e8 f6 95 ff ff       	call   f0100040 <_panic>$/;"	l
f0106a4a	obj/kern/kernel.asm	/^f0106a4a:	81 ef 00 00 00 10    	sub    $0x10000000,%edi$/;"	l
f0106a50	obj/kern/kernel.asm	/^f0106a50:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106a57	obj/kern/kernel.asm	/^f0106a57:	00 $/;"	l
f0106a58	obj/kern/kernel.asm	/^f0106a58:	c7 44 24 04 72 8e 10 	movl   $0xf0108e72,0x4(%esp)$/;"	l
f0106a5f	obj/kern/kernel.asm	/^f0106a5f:	f0 $/;"	l
f0106a60	obj/kern/kernel.asm	/^f0106a60:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106a63	obj/kern/kernel.asm	/^f0106a63:	e8 44 fc ff ff       	call   f01066ac <memcmp>$/;"	l
f0106a68	obj/kern/kernel.asm	/^f0106a68:	85 c0                	test   %eax,%eax$/;"	l
f0106a6a	obj/kern/kernel.asm	/^f0106a6a:	74 11                	je     f0106a7d <mp_init+0x11c>$/;"	l
f0106a6c	obj/kern/kernel.asm	/^f0106a6c:	c7 04 24 00 8d 10 f0 	movl   $0xf0108d00,(%esp)$/;"	l
f0106a73	obj/kern/kernel.asm	/^f0106a73:	e8 22 d6 ff ff       	call   f010409a <cprintf>$/;"	l
f0106a78	obj/kern/kernel.asm	/^f0106a78:	e9 a5 01 00 00       	jmp    f0106c22 <mp_init+0x2c1>$/;"	l
f0106a7d	obj/kern/kernel.asm	/^f0106a7d:	0f b7 5f 04          	movzwl 0x4(%edi),%ebx$/;"	l
f0106a81	obj/kern/kernel.asm	/^f0106a81:	0f b7 d3             	movzwl %bx,%edx$/;"	l
f0106a84	obj/kern/kernel.asm	/^f0106a84:	89 f8                	mov    %edi,%eax$/;"	l
f0106a86	obj/kern/kernel.asm	/^f0106a86:	e8 f5 fd ff ff       	call   f0106880 <sum>$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	84 c0                	test   %al,%al$/;"	l
f0106a8d	obj/kern/kernel.asm	/^f0106a8d:	74 11                	je     f0106aa0 <mp_init+0x13f>$/;"	l
f0106a8f	obj/kern/kernel.asm	/^f0106a8f:	c7 04 24 34 8d 10 f0 	movl   $0xf0108d34,(%esp)$/;"	l
f0106a96	obj/kern/kernel.asm	/^f0106a96:	e8 ff d5 ff ff       	call   f010409a <cprintf>$/;"	l
f0106a9b	obj/kern/kernel.asm	/^f0106a9b:	e9 82 01 00 00       	jmp    f0106c22 <mp_init+0x2c1>$/;"	l
f0106aa0	obj/kern/kernel.asm	/^f0106aa0:	0f b6 47 06          	movzbl 0x6(%edi),%eax$/;"	l
f0106aa4	obj/kern/kernel.asm	/^f0106aa4:	3c 01                	cmp    $0x1,%al$/;"	l
f0106aa6	obj/kern/kernel.asm	/^f0106aa6:	74 1c                	je     f0106ac4 <mp_init+0x163>$/;"	l
f0106aa8	obj/kern/kernel.asm	/^f0106aa8:	3c 04                	cmp    $0x4,%al$/;"	l
f0106aaa	obj/kern/kernel.asm	/^f0106aaa:	74 18                	je     f0106ac4 <mp_init+0x163>$/;"	l
f0106aac	obj/kern/kernel.asm	/^f0106aac:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106ab3	obj/kern/kernel.asm	/^f0106ab3:	c7 04 24 58 8d 10 f0 	movl   $0xf0108d58,(%esp)$/;"	l
f0106aba	obj/kern/kernel.asm	/^f0106aba:	e8 db d5 ff ff       	call   f010409a <cprintf>$/;"	l
f0106abf	obj/kern/kernel.asm	/^f0106abf:	e9 5e 01 00 00       	jmp    f0106c22 <mp_init+0x2c1>$/;"	l
f0106ac4	obj/kern/kernel.asm	/^f0106ac4:	0f b7 57 28          	movzwl 0x28(%edi),%edx$/;"	l
f0106ac8	obj/kern/kernel.asm	/^f0106ac8:	0f b7 c3             	movzwl %bx,%eax$/;"	l
f0106acb	obj/kern/kernel.asm	/^f0106acb:	8d 04 07             	lea    (%edi,%eax,1),%eax$/;"	l
f0106ace	obj/kern/kernel.asm	/^f0106ace:	e8 ad fd ff ff       	call   f0106880 <sum>$/;"	l
f0106ad3	obj/kern/kernel.asm	/^f0106ad3:	3a 47 2a             	cmp    0x2a(%edi),%al$/;"	l
f0106ad6	obj/kern/kernel.asm	/^f0106ad6:	74 11                	je     f0106ae9 <mp_init+0x188>$/;"	l
f0106ad8	obj/kern/kernel.asm	/^f0106ad8:	c7 04 24 78 8d 10 f0 	movl   $0xf0108d78,(%esp)$/;"	l
f0106adf	obj/kern/kernel.asm	/^f0106adf:	e8 b6 d5 ff ff       	call   f010409a <cprintf>$/;"	l
f0106ae4	obj/kern/kernel.asm	/^f0106ae4:	e9 39 01 00 00       	jmp    f0106c22 <mp_init+0x2c1>$/;"	l
f0106ae9	obj/kern/kernel.asm	/^f0106ae9:	85 ff                	test   %edi,%edi$/;"	l
f0106aeb	obj/kern/kernel.asm	/^f0106aeb:	0f 84 31 01 00 00    	je     f0106c22 <mp_init+0x2c1>$/;"	l
f0106af1	obj/kern/kernel.asm	/^f0106af1:	c7 05 00 90 1d f0 01 	movl   $0x1,0xf01d9000$/;"	l
f0106af8	obj/kern/kernel.asm	/^f0106af8:	00 00 00 $/;"	l
f0106afb	obj/kern/kernel.asm	/^f0106afb:	8b 47 24             	mov    0x24(%edi),%eax$/;"	l
f0106afe	obj/kern/kernel.asm	/^f0106afe:	a3 00 a0 21 f0       	mov    %eax,0xf021a000$/;"	l
f0106b03	obj/kern/kernel.asm	/^f0106b03:	66 83 7f 22 00       	cmpw   $0x0,0x22(%edi)$/;"	l
f0106b08	obj/kern/kernel.asm	/^f0106b08:	0f 84 99 00 00 00    	je     f0106ba7 <mp_init+0x246>$/;"	l
f0106b0e	obj/kern/kernel.asm	/^f0106b0e:	8d 5f 2c             	lea    0x2c(%edi),%ebx$/;"	l
f0106b11	obj/kern/kernel.asm	/^f0106b11:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106b16	obj/kern/kernel.asm	/^f0106b16:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0106b19	obj/kern/kernel.asm	/^f0106b19:	84 c0                	test   %al,%al$/;"	l
f0106b1b	obj/kern/kernel.asm	/^f0106b1b:	74 06                	je     f0106b23 <mp_init+0x1c2>$/;"	l
f0106b1d	obj/kern/kernel.asm	/^f0106b1d:	3c 04                	cmp    $0x4,%al$/;"	l
f0106b1f	obj/kern/kernel.asm	/^f0106b1f:	77 56                	ja     f0106b77 <mp_init+0x216>$/;"	l
f0106b21	obj/kern/kernel.asm	/^f0106b21:	eb 4f                	jmp    f0106b72 <mp_init+0x211>$/;"	l
f0106b23	obj/kern/kernel.asm	/^f0106b23:	89 da                	mov    %ebx,%edx$/;"	l
f0106b25	obj/kern/kernel.asm	/^f0106b25:	f6 43 03 02          	testb  $0x2,0x3(%ebx)$/;"	l
f0106b29	obj/kern/kernel.asm	/^f0106b29:	74 11                	je     f0106b3c <mp_init+0x1db>$/;"	l
f0106b2b	obj/kern/kernel.asm	/^f0106b2b:	6b 05 c4 93 1d f0 74 	imul   $0x74,0xf01d93c4,%eax$/;"	l
f0106b32	obj/kern/kernel.asm	/^f0106b32:	05 20 90 1d f0       	add    $0xf01d9020,%eax$/;"	l
f0106b37	obj/kern/kernel.asm	/^f0106b37:	a3 c0 93 1d f0       	mov    %eax,0xf01d93c0$/;"	l
f0106b3c	obj/kern/kernel.asm	/^f0106b3c:	a1 c4 93 1d f0       	mov    0xf01d93c4,%eax$/;"	l
f0106b41	obj/kern/kernel.asm	/^f0106b41:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106b44	obj/kern/kernel.asm	/^f0106b44:	7f 13                	jg     f0106b59 <mp_init+0x1f8>$/;"	l
f0106b46	obj/kern/kernel.asm	/^f0106b46:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0106b49	obj/kern/kernel.asm	/^f0106b49:	88 82 20 90 1d f0    	mov    %al,-0xfe26fe0(%edx)$/;"	l
f0106b4f	obj/kern/kernel.asm	/^f0106b4f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106b52	obj/kern/kernel.asm	/^f0106b52:	a3 c4 93 1d f0       	mov    %eax,0xf01d93c4$/;"	l
f0106b57	obj/kern/kernel.asm	/^f0106b57:	eb 14                	jmp    f0106b6d <mp_init+0x20c>$/;"	l
f0106b59	obj/kern/kernel.asm	/^f0106b59:	0f b6 42 01          	movzbl 0x1(%edx),%eax$/;"	l
f0106b5d	obj/kern/kernel.asm	/^f0106b5d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106b61	obj/kern/kernel.asm	/^f0106b61:	c7 04 24 a8 8d 10 f0 	movl   $0xf0108da8,(%esp)$/;"	l
f0106b68	obj/kern/kernel.asm	/^f0106b68:	e8 2d d5 ff ff       	call   f010409a <cprintf>$/;"	l
f0106b6d	obj/kern/kernel.asm	/^f0106b6d:	83 c3 14             	add    $0x14,%ebx$/;"	l
f0106b70	obj/kern/kernel.asm	/^f0106b70:	eb 26                	jmp    f0106b98 <mp_init+0x237>$/;"	l
f0106b72	obj/kern/kernel.asm	/^f0106b72:	83 c3 08             	add    $0x8,%ebx$/;"	l
f0106b75	obj/kern/kernel.asm	/^f0106b75:	eb 21                	jmp    f0106b98 <mp_init+0x237>$/;"	l
f0106b77	obj/kern/kernel.asm	/^f0106b77:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106b7a	obj/kern/kernel.asm	/^f0106b7a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106b7e	obj/kern/kernel.asm	/^f0106b7e:	c7 04 24 d0 8d 10 f0 	movl   $0xf0108dd0,(%esp)$/;"	l
f0106b85	obj/kern/kernel.asm	/^f0106b85:	e8 10 d5 ff ff       	call   f010409a <cprintf>$/;"	l
f0106b8a	obj/kern/kernel.asm	/^f0106b8a:	c7 05 00 90 1d f0 00 	movl   $0x0,0xf01d9000$/;"	l
f0106b91	obj/kern/kernel.asm	/^f0106b91:	00 00 00 $/;"	l
f0106b94	obj/kern/kernel.asm	/^f0106b94:	0f b7 77 22          	movzwl 0x22(%edi),%esi$/;"	l
f0106b98	obj/kern/kernel.asm	/^f0106b98:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106b9b	obj/kern/kernel.asm	/^f0106b9b:	0f b7 47 22          	movzwl 0x22(%edi),%eax$/;"	l
f0106b9f	obj/kern/kernel.asm	/^f0106b9f:	39 f0                	cmp    %esi,%eax$/;"	l
f0106ba1	obj/kern/kernel.asm	/^f0106ba1:	0f 87 6f ff ff ff    	ja     f0106b16 <mp_init+0x1b5>$/;"	l
f0106ba7	obj/kern/kernel.asm	/^f0106ba7:	a1 c0 93 1d f0       	mov    0xf01d93c0,%eax$/;"	l
f0106bac	obj/kern/kernel.asm	/^f0106bac:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106bb3	obj/kern/kernel.asm	/^f0106bb3:	83 3d 00 90 1d f0 00 	cmpl   $0x0,0xf01d9000$/;"	l
f0106bba	obj/kern/kernel.asm	/^f0106bba:	75 22                	jne    f0106bde <mp_init+0x27d>$/;"	l
f0106bbc	obj/kern/kernel.asm	/^f0106bbc:	c7 05 c4 93 1d f0 01 	movl   $0x1,0xf01d93c4$/;"	l
f0106bc3	obj/kern/kernel.asm	/^f0106bc3:	00 00 00 $/;"	l
f0106bc6	obj/kern/kernel.asm	/^f0106bc6:	c7 05 00 a0 21 f0 00 	movl   $0x0,0xf021a000$/;"	l
f0106bcd	obj/kern/kernel.asm	/^f0106bcd:	00 00 00 $/;"	l
f0106bd0	obj/kern/kernel.asm	/^f0106bd0:	c7 04 24 f0 8d 10 f0 	movl   $0xf0108df0,(%esp)$/;"	l
f0106bd7	obj/kern/kernel.asm	/^f0106bd7:	e8 be d4 ff ff       	call   f010409a <cprintf>$/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc:	eb 44                	jmp    f0106c22 <mp_init+0x2c1>$/;"	l
f0106bde	obj/kern/kernel.asm	/^f0106bde:	8b 15 c4 93 1d f0    	mov    0xf01d93c4,%edx$/;"	l
f0106be4	obj/kern/kernel.asm	/^f0106be4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106be8	obj/kern/kernel.asm	/^f0106be8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106beb	obj/kern/kernel.asm	/^f0106beb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106bef	obj/kern/kernel.asm	/^f0106bef:	c7 04 24 77 8e 10 f0 	movl   $0xf0108e77,(%esp)$/;"	l
f0106bf6	obj/kern/kernel.asm	/^f0106bf6:	e8 9f d4 ff ff       	call   f010409a <cprintf>$/;"	l
f0106bfb	obj/kern/kernel.asm	/^f0106bfb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106bfe	obj/kern/kernel.asm	/^f0106bfe:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106c02	obj/kern/kernel.asm	/^f0106c02:	74 1e                	je     f0106c22 <mp_init+0x2c1>$/;"	l
f0106c04	obj/kern/kernel.asm	/^f0106c04:	c7 04 24 1c 8e 10 f0 	movl   $0xf0108e1c,(%esp)$/;"	l
f0106c0b	obj/kern/kernel.asm	/^f0106c0b:	e8 8a d4 ff ff       	call   f010409a <cprintf>$/;"	l
f0106c10	obj/kern/kernel.asm	/^f0106c10:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0106c15	obj/kern/kernel.asm	/^f0106c15:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106c1a	obj/kern/kernel.asm	/^f0106c1a:	ee                   	out    %al,(%dx)$/;"	l
f0106c1b	obj/kern/kernel.asm	/^f0106c1b:	b2 23                	mov    $0x23,%dl$/;"	l
f0106c1d	obj/kern/kernel.asm	/^f0106c1d:	ec                   	in     (%dx),%al$/;"	l
f0106c1e	obj/kern/kernel.asm	/^f0106c1e:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106c21	obj/kern/kernel.asm	/^f0106c21:	ee                   	out    %al,(%dx)$/;"	l
f0106c22	obj/kern/kernel.asm	/^f0106c22:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0106c25	obj/kern/kernel.asm	/^f0106c25:	5b                   	pop    %ebx$/;"	l
f0106c26	obj/kern/kernel.asm	/^f0106c26:	5e                   	pop    %esi$/;"	l
f0106c27	obj/kern/kernel.asm	/^f0106c27:	5f                   	pop    %edi$/;"	l
f0106c28	obj/kern/kernel.asm	/^f0106c28:	5d                   	pop    %ebp$/;"	l
f0106c29	obj/kern/kernel.asm	/^f0106c29:	c3                   	ret    $/;"	l
f0106c2c	obj/kern/kernel.asm	/^f0106c2c <lapicw>:$/;"	l
f0106c2c	obj/kern/kernel.asm	/^f0106c2c:	55                   	push   %ebp$/;"	l
f0106c2d	obj/kern/kernel.asm	/^f0106c2d:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c2f	obj/kern/kernel.asm	/^f0106c2f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106c32	obj/kern/kernel.asm	/^f0106c32:	03 05 00 a0 21 f0    	add    0xf021a000,%eax$/;"	l
f0106c38	obj/kern/kernel.asm	/^f0106c38:	89 10                	mov    %edx,(%eax)$/;"	l
f0106c3a	obj/kern/kernel.asm	/^f0106c3a:	a1 00 a0 21 f0       	mov    0xf021a000,%eax$/;"	l
f0106c3f	obj/kern/kernel.asm	/^f0106c3f:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106c42	obj/kern/kernel.asm	/^f0106c42:	5d                   	pop    %ebp$/;"	l
f0106c43	obj/kern/kernel.asm	/^f0106c43:	c3                   	ret    $/;"	l
f0106c44	obj/kern/kernel.asm	/^f0106c44 <cpunum>:$/;"	l
f0106c44	obj/kern/kernel.asm	/^f0106c44:	55                   	push   %ebp$/;"	l
f0106c45	obj/kern/kernel.asm	/^f0106c45:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c47	obj/kern/kernel.asm	/^f0106c47:	8b 15 00 a0 21 f0    	mov    0xf021a000,%edx$/;"	l
f0106c4d	obj/kern/kernel.asm	/^f0106c4d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106c52	obj/kern/kernel.asm	/^f0106c52:	85 d2                	test   %edx,%edx$/;"	l
f0106c54	obj/kern/kernel.asm	/^f0106c54:	74 06                	je     f0106c5c <cpunum+0x18>$/;"	l
f0106c56	obj/kern/kernel.asm	/^f0106c56:	8b 42 20             	mov    0x20(%edx),%eax$/;"	l
f0106c59	obj/kern/kernel.asm	/^f0106c59:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0106c5c	obj/kern/kernel.asm	/^f0106c5c:	5d                   	pop    %ebp$/;"	l
f0106c5d	obj/kern/kernel.asm	/^f0106c5d:	c3                   	ret    $/;"	l
f0106c5e	obj/kern/kernel.asm	/^f0106c5e <lapic_init>:$/;"	l
f0106c5e	obj/kern/kernel.asm	/^f0106c5e:	55                   	push   %ebp$/;"	l
f0106c5f	obj/kern/kernel.asm	/^f0106c5f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c61	obj/kern/kernel.asm	/^f0106c61:	83 3d 00 a0 21 f0 00 	cmpl   $0x0,0xf021a000$/;"	l
f0106c68	obj/kern/kernel.asm	/^f0106c68:	0f 84 09 01 00 00    	je     f0106d77 <lapic_init+0x119>$/;"	l
f0106c6e	obj/kern/kernel.asm	/^f0106c6e:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0106c73	obj/kern/kernel.asm	/^f0106c73:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0106c78	obj/kern/kernel.asm	/^f0106c78:	e8 af ff ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106c7d	obj/kern/kernel.asm	/^f0106c7d:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0106c82	obj/kern/kernel.asm	/^f0106c82:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106c87	obj/kern/kernel.asm	/^f0106c87:	e8 a0 ff ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106c8c	obj/kern/kernel.asm	/^f0106c8c:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0106c91	obj/kern/kernel.asm	/^f0106c91:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106c96	obj/kern/kernel.asm	/^f0106c96:	e8 91 ff ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106c9b	obj/kern/kernel.asm	/^f0106c9b:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0106ca0	obj/kern/kernel.asm	/^f0106ca0:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106ca5	obj/kern/kernel.asm	/^f0106ca5:	e8 82 ff ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106caa	obj/kern/kernel.asm	/^f0106caa:	e8 95 ff ff ff       	call   f0106c44 <cpunum>$/;"	l
f0106caf	obj/kern/kernel.asm	/^f0106caf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106cb2	obj/kern/kernel.asm	/^f0106cb2:	05 20 90 1d f0       	add    $0xf01d9020,%eax$/;"	l
f0106cb7	obj/kern/kernel.asm	/^f0106cb7:	39 05 c0 93 1d f0    	cmp    %eax,0xf01d93c0$/;"	l
f0106cbd	obj/kern/kernel.asm	/^f0106cbd:	74 0f                	je     f0106cce <lapic_init+0x70>$/;"	l
f0106cbf	obj/kern/kernel.asm	/^f0106cbf:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106cc4	obj/kern/kernel.asm	/^f0106cc4:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106cc9	obj/kern/kernel.asm	/^f0106cc9:	e8 5e ff ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106cce	obj/kern/kernel.asm	/^f0106cce:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106cd3	obj/kern/kernel.asm	/^f0106cd3:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106cd8	obj/kern/kernel.asm	/^f0106cd8:	e8 4f ff ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106cdd	obj/kern/kernel.asm	/^f0106cdd:	a1 00 a0 21 f0       	mov    0xf021a000,%eax$/;"	l
f0106ce2	obj/kern/kernel.asm	/^f0106ce2:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0106ce5	obj/kern/kernel.asm	/^f0106ce5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106ce8	obj/kern/kernel.asm	/^f0106ce8:	3c 03                	cmp    $0x3,%al$/;"	l
f0106cea	obj/kern/kernel.asm	/^f0106cea:	76 0f                	jbe    f0106cfb <lapic_init+0x9d>$/;"	l
f0106cec	obj/kern/kernel.asm	/^f0106cec:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106cf1	obj/kern/kernel.asm	/^f0106cf1:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106cf6	obj/kern/kernel.asm	/^f0106cf6:	e8 31 ff ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106cfb	obj/kern/kernel.asm	/^f0106cfb:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0106d00	obj/kern/kernel.asm	/^f0106d00:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106d05	obj/kern/kernel.asm	/^f0106d05:	e8 22 ff ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106d0a	obj/kern/kernel.asm	/^f0106d0a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106d0f	obj/kern/kernel.asm	/^f0106d0f:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106d14	obj/kern/kernel.asm	/^f0106d14:	e8 13 ff ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106d19	obj/kern/kernel.asm	/^f0106d19:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106d1e	obj/kern/kernel.asm	/^f0106d1e:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106d23	obj/kern/kernel.asm	/^f0106d23:	e8 04 ff ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106d28	obj/kern/kernel.asm	/^f0106d28:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106d2d	obj/kern/kernel.asm	/^f0106d2d:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106d32	obj/kern/kernel.asm	/^f0106d32:	e8 f5 fe ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106d37	obj/kern/kernel.asm	/^f0106d37:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106d3c	obj/kern/kernel.asm	/^f0106d3c:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106d41	obj/kern/kernel.asm	/^f0106d41:	e8 e6 fe ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106d46	obj/kern/kernel.asm	/^f0106d46:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0106d4b	obj/kern/kernel.asm	/^f0106d4b:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106d50	obj/kern/kernel.asm	/^f0106d50:	e8 d7 fe ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106d55	obj/kern/kernel.asm	/^f0106d55:	8b 15 00 a0 21 f0    	mov    0xf021a000,%edx$/;"	l
f0106d5b	obj/kern/kernel.asm	/^f0106d5b:	81 c2 00 03 00 00    	add    $0x300,%edx$/;"	l
f0106d61	obj/kern/kernel.asm	/^f0106d61:	8b 02                	mov    (%edx),%eax$/;"	l
f0106d63	obj/kern/kernel.asm	/^f0106d63:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106d66	obj/kern/kernel.asm	/^f0106d66:	75 f9                	jne    f0106d61 <lapic_init+0x103>$/;"	l
f0106d68	obj/kern/kernel.asm	/^f0106d68:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106d6d	obj/kern/kernel.asm	/^f0106d6d:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106d72	obj/kern/kernel.asm	/^f0106d72:	e8 b5 fe ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106d77	obj/kern/kernel.asm	/^f0106d77:	5d                   	pop    %ebp$/;"	l
f0106d78	obj/kern/kernel.asm	/^f0106d78:	c3                   	ret    $/;"	l
f0106d79	obj/kern/kernel.asm	/^f0106d79 <lapic_eoi>:$/;"	l
f0106d79	obj/kern/kernel.asm	/^f0106d79:	55                   	push   %ebp$/;"	l
f0106d7a	obj/kern/kernel.asm	/^f0106d7a:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d7c	obj/kern/kernel.asm	/^f0106d7c:	83 3d 00 a0 21 f0 00 	cmpl   $0x0,0xf021a000$/;"	l
f0106d83	obj/kern/kernel.asm	/^f0106d83:	74 0f                	je     f0106d94 <lapic_eoi+0x1b>$/;"	l
f0106d85	obj/kern/kernel.asm	/^f0106d85:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106d8a	obj/kern/kernel.asm	/^f0106d8a:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106d8f	obj/kern/kernel.asm	/^f0106d8f:	e8 98 fe ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106d94	obj/kern/kernel.asm	/^f0106d94:	5d                   	pop    %ebp$/;"	l
f0106d95	obj/kern/kernel.asm	/^f0106d95:	c3                   	ret    $/;"	l
f0106d96	obj/kern/kernel.asm	/^f0106d96 <lapic_startap>:$/;"	l
f0106d96	obj/kern/kernel.asm	/^f0106d96:	55                   	push   %ebp$/;"	l
f0106d97	obj/kern/kernel.asm	/^f0106d97:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d99	obj/kern/kernel.asm	/^f0106d99:	56                   	push   %esi$/;"	l
f0106d9a	obj/kern/kernel.asm	/^f0106d9a:	53                   	push   %ebx$/;"	l
f0106d9b	obj/kern/kernel.asm	/^f0106d9b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106d9e	obj/kern/kernel.asm	/^f0106d9e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106da1	obj/kern/kernel.asm	/^f0106da1:	0f b6 5d 08          	movzbl 0x8(%ebp),%ebx$/;"	l
f0106da5	obj/kern/kernel.asm	/^f0106da5:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106daa	obj/kern/kernel.asm	/^f0106daa:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0106daf	obj/kern/kernel.asm	/^f0106daf:	ee                   	out    %al,(%dx)$/;"	l
f0106db0	obj/kern/kernel.asm	/^f0106db0:	b2 71                	mov    $0x71,%dl$/;"	l
f0106db2	obj/kern/kernel.asm	/^f0106db2:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106db7	obj/kern/kernel.asm	/^f0106db7:	ee                   	out    %al,(%dx)$/;"	l
f0106db8	obj/kern/kernel.asm	/^f0106db8:	83 3d 88 8e 1d f0 00 	cmpl   $0x0,0xf01d8e88$/;"	l
f0106dbf	obj/kern/kernel.asm	/^f0106dbf:	75 24                	jne    f0106de5 <lapic_startap+0x4f>$/;"	l
f0106dc1	obj/kern/kernel.asm	/^f0106dc1:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0106dc8	obj/kern/kernel.asm	/^f0106dc8:	00 $/;"	l
f0106dc9	obj/kern/kernel.asm	/^f0106dc9:	c7 44 24 08 88 73 10 	movl   $0xf0107388,0x8(%esp)$/;"	l
f0106dd0	obj/kern/kernel.asm	/^f0106dd0:	f0 $/;"	l
f0106dd1	obj/kern/kernel.asm	/^f0106dd1:	c7 44 24 04 93 00 00 	movl   $0x93,0x4(%esp)$/;"	l
f0106dd8	obj/kern/kernel.asm	/^f0106dd8:	00 $/;"	l
f0106dd9	obj/kern/kernel.asm	/^f0106dd9:	c7 04 24 94 8e 10 f0 	movl   $0xf0108e94,(%esp)$/;"	l
f0106de0	obj/kern/kernel.asm	/^f0106de0:	e8 5b 92 ff ff       	call   f0100040 <_panic>$/;"	l
f0106de5	obj/kern/kernel.asm	/^f0106de5:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0106dec	obj/kern/kernel.asm	/^f0106dec:	00 00 $/;"	l
f0106dee	obj/kern/kernel.asm	/^f0106dee:	89 f0                	mov    %esi,%eax$/;"	l
f0106df0	obj/kern/kernel.asm	/^f0106df0:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106df3	obj/kern/kernel.asm	/^f0106df3:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0106df9	obj/kern/kernel.asm	/^f0106df9:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f0106dfc	obj/kern/kernel.asm	/^f0106dfc:	89 da                	mov    %ebx,%edx$/;"	l
f0106dfe	obj/kern/kernel.asm	/^f0106dfe:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106e03	obj/kern/kernel.asm	/^f0106e03:	e8 24 fe ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106e08	obj/kern/kernel.asm	/^f0106e08:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0106e0d	obj/kern/kernel.asm	/^f0106e0d:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106e12	obj/kern/kernel.asm	/^f0106e12:	e8 15 fe ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106e17	obj/kern/kernel.asm	/^f0106e17:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0106e1c	obj/kern/kernel.asm	/^f0106e1c:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106e21	obj/kern/kernel.asm	/^f0106e21:	e8 06 fe ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106e26	obj/kern/kernel.asm	/^f0106e26:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0106e29	obj/kern/kernel.asm	/^f0106e29:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f0106e2f	obj/kern/kernel.asm	/^f0106e2f:	89 da                	mov    %ebx,%edx$/;"	l
f0106e31	obj/kern/kernel.asm	/^f0106e31:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106e36	obj/kern/kernel.asm	/^f0106e36:	e8 f1 fd ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106e3b	obj/kern/kernel.asm	/^f0106e3b:	89 f2                	mov    %esi,%edx$/;"	l
f0106e3d	obj/kern/kernel.asm	/^f0106e3d:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106e42	obj/kern/kernel.asm	/^f0106e42:	e8 e5 fd ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106e47	obj/kern/kernel.asm	/^f0106e47:	89 da                	mov    %ebx,%edx$/;"	l
f0106e49	obj/kern/kernel.asm	/^f0106e49:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106e4e	obj/kern/kernel.asm	/^f0106e4e:	e8 d9 fd ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106e53	obj/kern/kernel.asm	/^f0106e53:	89 f2                	mov    %esi,%edx$/;"	l
f0106e55	obj/kern/kernel.asm	/^f0106e55:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106e5a	obj/kern/kernel.asm	/^f0106e5a:	e8 cd fd ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106e5f	obj/kern/kernel.asm	/^f0106e5f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106e62	obj/kern/kernel.asm	/^f0106e62:	5b                   	pop    %ebx$/;"	l
f0106e63	obj/kern/kernel.asm	/^f0106e63:	5e                   	pop    %esi$/;"	l
f0106e64	obj/kern/kernel.asm	/^f0106e64:	5d                   	pop    %ebp$/;"	l
f0106e65	obj/kern/kernel.asm	/^f0106e65:	c3                   	ret    $/;"	l
f0106e66	obj/kern/kernel.asm	/^f0106e66 <lapic_ipi>:$/;"	l
f0106e66	obj/kern/kernel.asm	/^f0106e66:	55                   	push   %ebp$/;"	l
f0106e67	obj/kern/kernel.asm	/^f0106e67:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e69	obj/kern/kernel.asm	/^f0106e69:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106e6c	obj/kern/kernel.asm	/^f0106e6c:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106e72	obj/kern/kernel.asm	/^f0106e72:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106e77	obj/kern/kernel.asm	/^f0106e77:	e8 b0 fd ff ff       	call   f0106c2c <lapicw>$/;"	l
f0106e7c	obj/kern/kernel.asm	/^f0106e7c:	8b 15 00 a0 21 f0    	mov    0xf021a000,%edx$/;"	l
f0106e82	obj/kern/kernel.asm	/^f0106e82:	81 c2 00 03 00 00    	add    $0x300,%edx$/;"	l
f0106e88	obj/kern/kernel.asm	/^f0106e88:	8b 02                	mov    (%edx),%eax$/;"	l
f0106e8a	obj/kern/kernel.asm	/^f0106e8a:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106e8d	obj/kern/kernel.asm	/^f0106e8d:	75 f9                	jne    f0106e88 <lapic_ipi+0x22>$/;"	l
f0106e8f	obj/kern/kernel.asm	/^f0106e8f:	5d                   	pop    %ebp$/;"	l
f0106e90	obj/kern/kernel.asm	/^f0106e90:	c3                   	ret    $/;"	l
f0106e91	obj/kern/kernel.asm	/^f0106e91:	00 00                	add    %al,(%eax)$/;"	l
f0106e94	obj/kern/kernel.asm	/^f0106e94 <holding>:$/;"	l
f0106e94	obj/kern/kernel.asm	/^f0106e94:	55                   	push   %ebp$/;"	l
f0106e95	obj/kern/kernel.asm	/^f0106e95:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e97	obj/kern/kernel.asm	/^f0106e97:	53                   	push   %ebx$/;"	l
f0106e98	obj/kern/kernel.asm	/^f0106e98:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106e9b	obj/kern/kernel.asm	/^f0106e9b:	89 c2                	mov    %eax,%edx$/;"	l
f0106e9d	obj/kern/kernel.asm	/^f0106e9d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106ea2	obj/kern/kernel.asm	/^f0106ea2:	83 3a 00             	cmpl   $0x0,(%edx)$/;"	l
f0106ea5	obj/kern/kernel.asm	/^f0106ea5:	74 18                	je     f0106ebf <holding+0x2b>$/;"	l
f0106ea7	obj/kern/kernel.asm	/^f0106ea7:	8b 5a 08             	mov    0x8(%edx),%ebx$/;"	l
f0106eaa	obj/kern/kernel.asm	/^f0106eaa:	e8 95 fd ff ff       	call   f0106c44 <cpunum>$/;"	l
f0106eaf	obj/kern/kernel.asm	/^f0106eaf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106eb2	obj/kern/kernel.asm	/^f0106eb2:	05 20 90 1d f0       	add    $0xf01d9020,%eax$/;"	l
f0106eb7	obj/kern/kernel.asm	/^f0106eb7:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106eb9	obj/kern/kernel.asm	/^f0106eb9:	0f 94 c0             	sete   %al$/;"	l
f0106ebc	obj/kern/kernel.asm	/^f0106ebc:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106ebf	obj/kern/kernel.asm	/^f0106ebf:	83 c4 04             	add    $0x4,%esp$/;"	l
f0106ec2	obj/kern/kernel.asm	/^f0106ec2:	5b                   	pop    %ebx$/;"	l
f0106ec3	obj/kern/kernel.asm	/^f0106ec3:	5d                   	pop    %ebp$/;"	l
f0106ec4	obj/kern/kernel.asm	/^f0106ec4:	c3                   	ret    $/;"	l
f0106ec5	obj/kern/kernel.asm	/^f0106ec5 <__spin_initlock>:$/;"	l
f0106ec5	obj/kern/kernel.asm	/^f0106ec5:	55                   	push   %ebp$/;"	l
f0106ec6	obj/kern/kernel.asm	/^f0106ec6:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ec8	obj/kern/kernel.asm	/^f0106ec8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106ecb	obj/kern/kernel.asm	/^f0106ecb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106ed1	obj/kern/kernel.asm	/^f0106ed1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106ed4	obj/kern/kernel.asm	/^f0106ed4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106ed7	obj/kern/kernel.asm	/^f0106ed7:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106ede	obj/kern/kernel.asm	/^f0106ede:	5d                   	pop    %ebp$/;"	l
f0106edf	obj/kern/kernel.asm	/^f0106edf:	c3                   	ret    $/;"	l
f0106ee0	obj/kern/kernel.asm	/^f0106ee0 <spin_lock>:$/;"	l
f0106ee0	obj/kern/kernel.asm	/^f0106ee0:	55                   	push   %ebp$/;"	l
f0106ee1	obj/kern/kernel.asm	/^f0106ee1:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ee3	obj/kern/kernel.asm	/^f0106ee3:	53                   	push   %ebx$/;"	l
f0106ee4	obj/kern/kernel.asm	/^f0106ee4:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0106ee7	obj/kern/kernel.asm	/^f0106ee7:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106eea	obj/kern/kernel.asm	/^f0106eea:	89 d8                	mov    %ebx,%eax$/;"	l
f0106eec	obj/kern/kernel.asm	/^f0106eec:	e8 a3 ff ff ff       	call   f0106e94 <holding>$/;"	l
f0106ef1	obj/kern/kernel.asm	/^f0106ef1:	85 c0                	test   %eax,%eax$/;"	l
f0106ef3	obj/kern/kernel.asm	/^f0106ef3:	75 12                	jne    f0106f07 <spin_lock+0x27>$/;"	l
f0106ef5	obj/kern/kernel.asm	/^f0106ef5:	89 da                	mov    %ebx,%edx$/;"	l
f0106ef7	obj/kern/kernel.asm	/^f0106ef7:	b0 01                	mov    $0x1,%al$/;"	l
f0106ef9	obj/kern/kernel.asm	/^f0106ef9:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106efc	obj/kern/kernel.asm	/^f0106efc:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0106f01	obj/kern/kernel.asm	/^f0106f01:	85 c0                	test   %eax,%eax$/;"	l
f0106f03	obj/kern/kernel.asm	/^f0106f03:	75 2e                	jne    f0106f33 <spin_lock+0x53>$/;"	l
f0106f05	obj/kern/kernel.asm	/^f0106f05:	eb 37                	jmp    f0106f3e <spin_lock+0x5e>$/;"	l
f0106f07	obj/kern/kernel.asm	/^f0106f07:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106f0a	obj/kern/kernel.asm	/^f0106f0a:	e8 35 fd ff ff       	call   f0106c44 <cpunum>$/;"	l
f0106f0f	obj/kern/kernel.asm	/^f0106f0f:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0106f13	obj/kern/kernel.asm	/^f0106f13:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106f17	obj/kern/kernel.asm	/^f0106f17:	c7 44 24 08 a4 8e 10 	movl   $0xf0108ea4,0x8(%esp)$/;"	l
f0106f1e	obj/kern/kernel.asm	/^f0106f1e:	f0 $/;"	l
f0106f1f	obj/kern/kernel.asm	/^f0106f1f:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)$/;"	l
f0106f26	obj/kern/kernel.asm	/^f0106f26:	00 $/;"	l
f0106f27	obj/kern/kernel.asm	/^f0106f27:	c7 04 24 08 8f 10 f0 	movl   $0xf0108f08,(%esp)$/;"	l
f0106f2e	obj/kern/kernel.asm	/^f0106f2e:	e8 0d 91 ff ff       	call   f0100040 <_panic>$/;"	l
f0106f33	obj/kern/kernel.asm	/^f0106f33:	f3 90                	pause  $/;"	l
f0106f35	obj/kern/kernel.asm	/^f0106f35:	89 c8                	mov    %ecx,%eax$/;"	l
f0106f37	obj/kern/kernel.asm	/^f0106f37:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0106f3a	obj/kern/kernel.asm	/^f0106f3a:	85 c0                	test   %eax,%eax$/;"	l
f0106f3c	obj/kern/kernel.asm	/^f0106f3c:	75 f5                	jne    f0106f33 <spin_lock+0x53>$/;"	l
f0106f3e	obj/kern/kernel.asm	/^f0106f3e:	e8 01 fd ff ff       	call   f0106c44 <cpunum>$/;"	l
f0106f43	obj/kern/kernel.asm	/^f0106f43:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106f46	obj/kern/kernel.asm	/^f0106f46:	05 20 90 1d f0       	add    $0xf01d9020,%eax$/;"	l
f0106f4b	obj/kern/kernel.asm	/^f0106f4b:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0106f4e	obj/kern/kernel.asm	/^f0106f4e:	8d 4b 0c             	lea    0xc(%ebx),%ecx$/;"	l
f0106f51	obj/kern/kernel.asm	/^f0106f51:	89 e8                	mov    %ebp,%eax$/;"	l
f0106f53	obj/kern/kernel.asm	/^f0106f53:	8d 90 00 00 80 10    	lea    0x10800000(%eax),%edx$/;"	l
f0106f59	obj/kern/kernel.asm	/^f0106f59:	81 fa ff ff 7f 0e    	cmp    $0xe7fffff,%edx$/;"	l
f0106f5f	obj/kern/kernel.asm	/^f0106f5f:	76 3a                	jbe    f0106f9b <spin_lock+0xbb>$/;"	l
f0106f61	obj/kern/kernel.asm	/^f0106f61:	eb 31                	jmp    f0106f94 <spin_lock+0xb4>$/;"	l
f0106f63	obj/kern/kernel.asm	/^f0106f63:	8d 9a 00 00 80 10    	lea    0x10800000(%edx),%ebx$/;"	l
f0106f69	obj/kern/kernel.asm	/^f0106f69:	81 fb ff ff 7f 0e    	cmp    $0xe7fffff,%ebx$/;"	l
f0106f6f	obj/kern/kernel.asm	/^f0106f6f:	77 12                	ja     f0106f83 <spin_lock+0xa3>$/;"	l
f0106f71	obj/kern/kernel.asm	/^f0106f71:	8b 5a 04             	mov    0x4(%edx),%ebx$/;"	l
f0106f74	obj/kern/kernel.asm	/^f0106f74:	89 1c 81             	mov    %ebx,(%ecx,%eax,4)$/;"	l
f0106f77	obj/kern/kernel.asm	/^f0106f77:	8b 12                	mov    (%edx),%edx$/;"	l
f0106f79	obj/kern/kernel.asm	/^f0106f79:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106f7c	obj/kern/kernel.asm	/^f0106f7c:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0106f7f	obj/kern/kernel.asm	/^f0106f7f:	75 e2                	jne    f0106f63 <spin_lock+0x83>$/;"	l
f0106f81	obj/kern/kernel.asm	/^f0106f81:	eb 27                	jmp    f0106faa <spin_lock+0xca>$/;"	l
f0106f83	obj/kern/kernel.asm	/^f0106f83:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)$/;"	l
f0106f8a	obj/kern/kernel.asm	/^f0106f8a:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106f8d	obj/kern/kernel.asm	/^f0106f8d:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106f90	obj/kern/kernel.asm	/^f0106f90:	7e f1                	jle    f0106f83 <spin_lock+0xa3>$/;"	l
f0106f92	obj/kern/kernel.asm	/^f0106f92:	eb 16                	jmp    f0106faa <spin_lock+0xca>$/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106f99	obj/kern/kernel.asm	/^f0106f99:	eb e8                	jmp    f0106f83 <spin_lock+0xa3>$/;"	l
f0106f9b	obj/kern/kernel.asm	/^f0106f9b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0106f9e	obj/kern/kernel.asm	/^f0106f9e:	89 53 0c             	mov    %edx,0xc(%ebx)$/;"	l
f0106fa1	obj/kern/kernel.asm	/^f0106fa1:	8b 10                	mov    (%eax),%edx$/;"	l
f0106fa3	obj/kern/kernel.asm	/^f0106fa3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106fa8	obj/kern/kernel.asm	/^f0106fa8:	eb b9                	jmp    f0106f63 <spin_lock+0x83>$/;"	l
f0106faa	obj/kern/kernel.asm	/^f0106faa:	83 c4 24             	add    $0x24,%esp$/;"	l
f0106fad	obj/kern/kernel.asm	/^f0106fad:	5b                   	pop    %ebx$/;"	l
f0106fae	obj/kern/kernel.asm	/^f0106fae:	5d                   	pop    %ebp$/;"	l
f0106faf	obj/kern/kernel.asm	/^f0106faf:	c3                   	ret    $/;"	l
f0106fb0	obj/kern/kernel.asm	/^f0106fb0 <spin_unlock>:$/;"	l
f0106fb0	obj/kern/kernel.asm	/^f0106fb0:	55                   	push   %ebp$/;"	l
f0106fb1	obj/kern/kernel.asm	/^f0106fb1:	89 e5                	mov    %esp,%ebp$/;"	l
f0106fb3	obj/kern/kernel.asm	/^f0106fb3:	83 ec 78             	sub    $0x78,%esp$/;"	l
f0106fb6	obj/kern/kernel.asm	/^f0106fb6:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0106fb9	obj/kern/kernel.asm	/^f0106fb9:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0106fbc	obj/kern/kernel.asm	/^f0106fbc:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0106fbf	obj/kern/kernel.asm	/^f0106fbf:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106fc2	obj/kern/kernel.asm	/^f0106fc2:	89 d8                	mov    %ebx,%eax$/;"	l
f0106fc4	obj/kern/kernel.asm	/^f0106fc4:	e8 cb fe ff ff       	call   f0106e94 <holding>$/;"	l
f0106fc9	obj/kern/kernel.asm	/^f0106fc9:	85 c0                	test   %eax,%eax$/;"	l
f0106fcb	obj/kern/kernel.asm	/^f0106fcb:	0f 85 d5 00 00 00    	jne    f01070a6 <spin_unlock+0xf6>$/;"	l
f0106fd1	obj/kern/kernel.asm	/^f0106fd1:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0106fd8	obj/kern/kernel.asm	/^f0106fd8:	00 $/;"	l
f0106fd9	obj/kern/kernel.asm	/^f0106fd9:	8d 43 0c             	lea    0xc(%ebx),%eax$/;"	l
f0106fdc	obj/kern/kernel.asm	/^f0106fdc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106fe0	obj/kern/kernel.asm	/^f0106fe0:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f0106fe3	obj/kern/kernel.asm	/^f0106fe3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106fe6	obj/kern/kernel.asm	/^f0106fe6:	e8 25 f6 ff ff       	call   f0106610 <memmove>$/;"	l
f0106feb	obj/kern/kernel.asm	/^f0106feb:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0106fee	obj/kern/kernel.asm	/^f0106fee:	0f b6 30             	movzbl (%eax),%esi$/;"	l
f0106ff1	obj/kern/kernel.asm	/^f0106ff1:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106ff4	obj/kern/kernel.asm	/^f0106ff4:	e8 4b fc ff ff       	call   f0106c44 <cpunum>$/;"	l
f0106ff9	obj/kern/kernel.asm	/^f0106ff9:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106ffd	obj/kern/kernel.asm	/^f0106ffd:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0107001	obj/kern/kernel.asm	/^f0107001:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107005	obj/kern/kernel.asm	/^f0107005:	c7 04 24 d0 8e 10 f0 	movl   $0xf0108ed0,(%esp)$/;"	l
f010700c	obj/kern/kernel.asm	/^f010700c:	e8 89 d0 ff ff       	call   f010409a <cprintf>$/;"	l
f0107011	obj/kern/kernel.asm	/^f0107011:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0107014	obj/kern/kernel.asm	/^f0107014:	85 c0                	test   %eax,%eax$/;"	l
f0107016	obj/kern/kernel.asm	/^f0107016:	74 72                	je     f010708a <spin_unlock+0xda>$/;"	l
f0107018	obj/kern/kernel.asm	/^f0107018:	8d 5d a8             	lea    -0x58(%ebp),%ebx$/;"	l
f010701b	obj/kern/kernel.asm	/^f010701b:	8d 7d cc             	lea    -0x34(%ebp),%edi$/;"	l
f010701e	obj/kern/kernel.asm	/^f010701e:	8d 75 d0             	lea    -0x30(%ebp),%esi$/;"	l
f0107021	obj/kern/kernel.asm	/^f0107021:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0107025	obj/kern/kernel.asm	/^f0107025:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107028	obj/kern/kernel.asm	/^f0107028:	e8 31 e8 ff ff       	call   f010585e <debuginfo_eip>$/;"	l
f010702d	obj/kern/kernel.asm	/^f010702d:	85 c0                	test   %eax,%eax$/;"	l
f010702f	obj/kern/kernel.asm	/^f010702f:	78 39                	js     f010706a <spin_unlock+0xba>$/;"	l
f0107031	obj/kern/kernel.asm	/^f0107031:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107033	obj/kern/kernel.asm	/^f0107033:	89 c2                	mov    %eax,%edx$/;"	l
f0107035	obj/kern/kernel.asm	/^f0107035:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
f0107038	obj/kern/kernel.asm	/^f0107038:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f010703c	obj/kern/kernel.asm	/^f010703c:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010703f	obj/kern/kernel.asm	/^f010703f:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107043	obj/kern/kernel.asm	/^f0107043:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0107046	obj/kern/kernel.asm	/^f0107046:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f010704a	obj/kern/kernel.asm	/^f010704a:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010704d	obj/kern/kernel.asm	/^f010704d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0107051	obj/kern/kernel.asm	/^f0107051:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0107054	obj/kern/kernel.asm	/^f0107054:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0107058	obj/kern/kernel.asm	/^f0107058:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010705c	obj/kern/kernel.asm	/^f010705c:	c7 04 24 18 8f 10 f0 	movl   $0xf0108f18,(%esp)$/;"	l
f0107063	obj/kern/kernel.asm	/^f0107063:	e8 32 d0 ff ff       	call   f010409a <cprintf>$/;"	l
f0107068	obj/kern/kernel.asm	/^f0107068:	eb 12                	jmp    f010707c <spin_unlock+0xcc>$/;"	l
f010706a	obj/kern/kernel.asm	/^f010706a:	8b 03                	mov    (%ebx),%eax$/;"	l
f010706c	obj/kern/kernel.asm	/^f010706c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107070	obj/kern/kernel.asm	/^f0107070:	c7 04 24 2f 8f 10 f0 	movl   $0xf0108f2f,(%esp)$/;"	l
f0107077	obj/kern/kernel.asm	/^f0107077:	e8 1e d0 ff ff       	call   f010409a <cprintf>$/;"	l
f010707c	obj/kern/kernel.asm	/^f010707c:	39 fb                	cmp    %edi,%ebx$/;"	l
f010707e	obj/kern/kernel.asm	/^f010707e:	74 0a                	je     f010708a <spin_unlock+0xda>$/;"	l
f0107080	obj/kern/kernel.asm	/^f0107080:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107083	obj/kern/kernel.asm	/^f0107083:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0107086	obj/kern/kernel.asm	/^f0107086:	85 c0                	test   %eax,%eax$/;"	l
f0107088	obj/kern/kernel.asm	/^f0107088:	75 97                	jne    f0107021 <spin_unlock+0x71>$/;"	l
f010708a	obj/kern/kernel.asm	/^f010708a:	c7 44 24 08 37 8f 10 	movl   $0xf0108f37,0x8(%esp)$/;"	l
f0107091	obj/kern/kernel.asm	/^f0107091:	f0 $/;"	l
f0107092	obj/kern/kernel.asm	/^f0107092:	c7 44 24 04 68 00 00 	movl   $0x68,0x4(%esp)$/;"	l
f0107099	obj/kern/kernel.asm	/^f0107099:	00 $/;"	l
f010709a	obj/kern/kernel.asm	/^f010709a:	c7 04 24 08 8f 10 f0 	movl   $0xf0108f08,(%esp)$/;"	l
f01070a1	obj/kern/kernel.asm	/^f01070a1:	e8 9a 8f ff ff       	call   f0100040 <_panic>$/;"	l
f01070a6	obj/kern/kernel.asm	/^f01070a6:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)$/;"	l
f01070ad	obj/kern/kernel.asm	/^f01070ad:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)$/;"	l
f01070b4	obj/kern/kernel.asm	/^f01070b4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01070b9	obj/kern/kernel.asm	/^f01070b9:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f01070bc	obj/kern/kernel.asm	/^f01070bc:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01070bf	obj/kern/kernel.asm	/^f01070bf:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01070c2	obj/kern/kernel.asm	/^f01070c2:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01070c5	obj/kern/kernel.asm	/^f01070c5:	89 ec                	mov    %ebp,%esp$/;"	l
f01070c7	obj/kern/kernel.asm	/^f01070c7:	5d                   	pop    %ebp$/;"	l
f01070c8	obj/kern/kernel.asm	/^f01070c8:	c3                   	ret    $/;"	l
f01070c9	obj/kern/kernel.asm	/^f01070c9:	00 00                	add    %al,(%eax)$/;"	l
f01070cb	obj/kern/kernel.asm	/^f01070cb:	00 00                	add    %al,(%eax)$/;"	l
f01070cd	obj/kern/kernel.asm	/^f01070cd:	00 00                	add    %al,(%eax)$/;"	l
f01070d0	obj/kern/kernel.asm	/^f01070d0 <__udivdi3>:$/;"	l
f01070d0	obj/kern/kernel.asm	/^f01070d0:	55                   	push   %ebp$/;"	l
f01070d1	obj/kern/kernel.asm	/^f01070d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01070d3	obj/kern/kernel.asm	/^f01070d3:	57                   	push   %edi$/;"	l
f01070d4	obj/kern/kernel.asm	/^f01070d4:	56                   	push   %esi$/;"	l
f01070d5	obj/kern/kernel.asm	/^f01070d5:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01070d8	obj/kern/kernel.asm	/^f01070d8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01070db	obj/kern/kernel.asm	/^f01070db:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01070de	obj/kern/kernel.asm	/^f01070de:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01070e1	obj/kern/kernel.asm	/^f01070e1:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01070e4	obj/kern/kernel.asm	/^f01070e4:	85 c0                	test   %eax,%eax$/;"	l
f01070e6	obj/kern/kernel.asm	/^f01070e6:	89 75 e8             	mov    %esi,-0x18(%ebp)$/;"	l
f01070e9	obj/kern/kernel.asm	/^f01070e9:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01070ec	obj/kern/kernel.asm	/^f01070ec:	75 3a                	jne    f0107128 <__udivdi3+0x58>$/;"	l
f01070ee	obj/kern/kernel.asm	/^f01070ee:	39 f9                	cmp    %edi,%ecx$/;"	l
f01070f0	obj/kern/kernel.asm	/^f01070f0:	77 66                	ja     f0107158 <__udivdi3+0x88>$/;"	l
f01070f2	obj/kern/kernel.asm	/^f01070f2:	85 c9                	test   %ecx,%ecx$/;"	l
f01070f4	obj/kern/kernel.asm	/^f01070f4:	75 0b                	jne    f0107101 <__udivdi3+0x31>$/;"	l
f01070f6	obj/kern/kernel.asm	/^f01070f6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01070fb	obj/kern/kernel.asm	/^f01070fb:	31 d2                	xor    %edx,%edx$/;"	l
f01070fd	obj/kern/kernel.asm	/^f01070fd:	f7 f1                	div    %ecx$/;"	l
f01070ff	obj/kern/kernel.asm	/^f01070ff:	89 c1                	mov    %eax,%ecx$/;"	l
f0107101	obj/kern/kernel.asm	/^f0107101:	89 f8                	mov    %edi,%eax$/;"	l
f0107103	obj/kern/kernel.asm	/^f0107103:	31 d2                	xor    %edx,%edx$/;"	l
f0107105	obj/kern/kernel.asm	/^f0107105:	f7 f1                	div    %ecx$/;"	l
f0107107	obj/kern/kernel.asm	/^f0107107:	89 c7                	mov    %eax,%edi$/;"	l
f0107109	obj/kern/kernel.asm	/^f0107109:	89 f0                	mov    %esi,%eax$/;"	l
f010710b	obj/kern/kernel.asm	/^f010710b:	f7 f1                	div    %ecx$/;"	l
f010710d	obj/kern/kernel.asm	/^f010710d:	89 fa                	mov    %edi,%edx$/;"	l
f010710f	obj/kern/kernel.asm	/^f010710f:	89 c6                	mov    %eax,%esi$/;"	l
f0107111	obj/kern/kernel.asm	/^f0107111:	89 75 f0             	mov    %esi,-0x10(%ebp)$/;"	l
f0107114	obj/kern/kernel.asm	/^f0107114:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0107117	obj/kern/kernel.asm	/^f0107117:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010711a	obj/kern/kernel.asm	/^f010711a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010711d	obj/kern/kernel.asm	/^f010711d:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107120	obj/kern/kernel.asm	/^f0107120:	5e                   	pop    %esi$/;"	l
f0107121	obj/kern/kernel.asm	/^f0107121:	5f                   	pop    %edi$/;"	l
f0107122	obj/kern/kernel.asm	/^f0107122:	5d                   	pop    %ebp$/;"	l
f0107123	obj/kern/kernel.asm	/^f0107123:	c3                   	ret    $/;"	l
f0107124	obj/kern/kernel.asm	/^f0107124:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107128	obj/kern/kernel.asm	/^f0107128:	31 d2                	xor    %edx,%edx$/;"	l
f010712a	obj/kern/kernel.asm	/^f010712a:	31 f6                	xor    %esi,%esi$/;"	l
f010712c	obj/kern/kernel.asm	/^f010712c:	39 f8                	cmp    %edi,%eax$/;"	l
f010712e	obj/kern/kernel.asm	/^f010712e:	77 e1                	ja     f0107111 <__udivdi3+0x41>$/;"	l
f0107130	obj/kern/kernel.asm	/^f0107130:	0f bd d0             	bsr    %eax,%edx$/;"	l
f0107133	obj/kern/kernel.asm	/^f0107133:	83 f2 1f             	xor    $0x1f,%edx$/;"	l
f0107136	obj/kern/kernel.asm	/^f0107136:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0107139	obj/kern/kernel.asm	/^f0107139:	75 2d                	jne    f0107168 <__udivdi3+0x98>$/;"	l
f010713b	obj/kern/kernel.asm	/^f010713b:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f010713e	obj/kern/kernel.asm	/^f010713e:	39 4d f0             	cmp    %ecx,-0x10(%ebp)$/;"	l
f0107141	obj/kern/kernel.asm	/^f0107141:	76 06                	jbe    f0107149 <__udivdi3+0x79>$/;"	l
f0107143	obj/kern/kernel.asm	/^f0107143:	39 f8                	cmp    %edi,%eax$/;"	l
f0107145	obj/kern/kernel.asm	/^f0107145:	89 f2                	mov    %esi,%edx$/;"	l
f0107147	obj/kern/kernel.asm	/^f0107147:	73 c8                	jae    f0107111 <__udivdi3+0x41>$/;"	l
f0107149	obj/kern/kernel.asm	/^f0107149:	31 d2                	xor    %edx,%edx$/;"	l
f010714b	obj/kern/kernel.asm	/^f010714b:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0107150	obj/kern/kernel.asm	/^f0107150:	eb bf                	jmp    f0107111 <__udivdi3+0x41>$/;"	l
f0107152	obj/kern/kernel.asm	/^f0107152:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0107158	obj/kern/kernel.asm	/^f0107158:	89 f0                	mov    %esi,%eax$/;"	l
f010715a	obj/kern/kernel.asm	/^f010715a:	89 fa                	mov    %edi,%edx$/;"	l
f010715c	obj/kern/kernel.asm	/^f010715c:	f7 f1                	div    %ecx$/;"	l
f010715e	obj/kern/kernel.asm	/^f010715e:	31 d2                	xor    %edx,%edx$/;"	l
f0107160	obj/kern/kernel.asm	/^f0107160:	89 c6                	mov    %eax,%esi$/;"	l
f0107162	obj/kern/kernel.asm	/^f0107162:	eb ad                	jmp    f0107111 <__udivdi3+0x41>$/;"	l
f0107164	obj/kern/kernel.asm	/^f0107164:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107168	obj/kern/kernel.asm	/^f0107168:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f010716c	obj/kern/kernel.asm	/^f010716c:	89 c2                	mov    %eax,%edx$/;"	l
f010716e	obj/kern/kernel.asm	/^f010716e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0107173	obj/kern/kernel.asm	/^f0107173:	8b 75 f0             	mov    -0x10(%ebp),%esi$/;"	l
f0107176	obj/kern/kernel.asm	/^f0107176:	2b 45 ec             	sub    -0x14(%ebp),%eax$/;"	l
f0107179	obj/kern/kernel.asm	/^f0107179:	d3 e2                	shl    %cl,%edx$/;"	d
f010717b	obj/kern/kernel.asm	/^f010717b:	89 c1                	mov    %eax,%ecx$/;"	l
f010717d	obj/kern/kernel.asm	/^f010717d:	d3 ee                	shr    %cl,%esi$/;"	d
f010717f	obj/kern/kernel.asm	/^f010717f:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0107183	obj/kern/kernel.asm	/^f0107183:	09 d6                	or     %edx,%esi$/;"	l
f0107185	obj/kern/kernel.asm	/^f0107185:	89 fa                	mov    %edi,%edx$/;"	l
f0107187	obj/kern/kernel.asm	/^f0107187:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f010718a	obj/kern/kernel.asm	/^f010718a:	8b 75 f0             	mov    -0x10(%ebp),%esi$/;"	l
f010718d	obj/kern/kernel.asm	/^f010718d:	d3 e6                	shl    %cl,%esi$/;"	d
f010718f	obj/kern/kernel.asm	/^f010718f:	89 c1                	mov    %eax,%ecx$/;"	l
f0107191	obj/kern/kernel.asm	/^f0107191:	d3 ea                	shr    %cl,%edx$/;"	d
f0107193	obj/kern/kernel.asm	/^f0107193:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0107197	obj/kern/kernel.asm	/^f0107197:	89 75 f0             	mov    %esi,-0x10(%ebp)$/;"	l
f010719a	obj/kern/kernel.asm	/^f010719a:	8b 75 e8             	mov    -0x18(%ebp),%esi$/;"	l
f010719d	obj/kern/kernel.asm	/^f010719d:	d3 e7                	shl    %cl,%edi$/;"	d
f010719f	obj/kern/kernel.asm	/^f010719f:	89 c1                	mov    %eax,%ecx$/;"	l
f01071a1	obj/kern/kernel.asm	/^f01071a1:	d3 ee                	shr    %cl,%esi$/;"	d
f01071a3	obj/kern/kernel.asm	/^f01071a3:	09 fe                	or     %edi,%esi$/;"	l
f01071a5	obj/kern/kernel.asm	/^f01071a5:	89 f0                	mov    %esi,%eax$/;"	l
f01071a7	obj/kern/kernel.asm	/^f01071a7:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
f01071aa	obj/kern/kernel.asm	/^f01071aa:	89 d7                	mov    %edx,%edi$/;"	l
f01071ac	obj/kern/kernel.asm	/^f01071ac:	89 c6                	mov    %eax,%esi$/;"	l
f01071ae	obj/kern/kernel.asm	/^f01071ae:	f7 65 f0             	mull   -0x10(%ebp)$/;"	l
f01071b1	obj/kern/kernel.asm	/^f01071b1:	39 d7                	cmp    %edx,%edi$/;"	l
f01071b3	obj/kern/kernel.asm	/^f01071b3:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01071b6	obj/kern/kernel.asm	/^f01071b6:	72 12                	jb     f01071ca <__udivdi3+0xfa>$/;"	l
f01071b8	obj/kern/kernel.asm	/^f01071b8:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01071bb	obj/kern/kernel.asm	/^f01071bb:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f01071bf	obj/kern/kernel.asm	/^f01071bf:	d3 e2                	shl    %cl,%edx$/;"	d
f01071c1	obj/kern/kernel.asm	/^f01071c1:	39 c2                	cmp    %eax,%edx$/;"	l
f01071c3	obj/kern/kernel.asm	/^f01071c3:	73 08                	jae    f01071cd <__udivdi3+0xfd>$/;"	l
f01071c5	obj/kern/kernel.asm	/^f01071c5:	3b 7d e4             	cmp    -0x1c(%ebp),%edi$/;"	l
f01071c8	obj/kern/kernel.asm	/^f01071c8:	75 03                	jne    f01071cd <__udivdi3+0xfd>$/;"	l
f01071ca	obj/kern/kernel.asm	/^f01071ca:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01071cd	obj/kern/kernel.asm	/^f01071cd:	31 d2                	xor    %edx,%edx$/;"	l
f01071cf	obj/kern/kernel.asm	/^f01071cf:	e9 3d ff ff ff       	jmp    f0107111 <__udivdi3+0x41>$/;"	l
f01071e0	obj/kern/kernel.asm	/^f01071e0 <__umoddi3>:$/;"	l
f01071e0	obj/kern/kernel.asm	/^f01071e0:	55                   	push   %ebp$/;"	l
f01071e1	obj/kern/kernel.asm	/^f01071e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01071e3	obj/kern/kernel.asm	/^f01071e3:	57                   	push   %edi$/;"	l
f01071e4	obj/kern/kernel.asm	/^f01071e4:	56                   	push   %esi$/;"	l
f01071e5	obj/kern/kernel.asm	/^f01071e5:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01071e8	obj/kern/kernel.asm	/^f01071e8:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f01071eb	obj/kern/kernel.asm	/^f01071eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01071ee	obj/kern/kernel.asm	/^f01071ee:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01071f1	obj/kern/kernel.asm	/^f01071f1:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01071f4	obj/kern/kernel.asm	/^f01071f4:	85 ff                	test   %edi,%edi$/;"	l
f01071f6	obj/kern/kernel.asm	/^f01071f6:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f01071f9	obj/kern/kernel.asm	/^f01071f9:	89 4d f4             	mov    %ecx,-0xc(%ebp)$/;"	l
f01071fc	obj/kern/kernel.asm	/^f01071fc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01071ff	obj/kern/kernel.asm	/^f01071ff:	89 f2                	mov    %esi,%edx$/;"	l
f0107201	obj/kern/kernel.asm	/^f0107201:	75 15                	jne    f0107218 <__umoddi3+0x38>$/;"	l
f0107203	obj/kern/kernel.asm	/^f0107203:	39 f1                	cmp    %esi,%ecx$/;"	l
f0107205	obj/kern/kernel.asm	/^f0107205:	76 41                	jbe    f0107248 <__umoddi3+0x68>$/;"	l
f0107207	obj/kern/kernel.asm	/^f0107207:	f7 f1                	div    %ecx$/;"	l
f0107209	obj/kern/kernel.asm	/^f0107209:	89 d0                	mov    %edx,%eax$/;"	l
f010720b	obj/kern/kernel.asm	/^f010720b:	31 d2                	xor    %edx,%edx$/;"	l
f010720d	obj/kern/kernel.asm	/^f010720d:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107210	obj/kern/kernel.asm	/^f0107210:	5e                   	pop    %esi$/;"	l
f0107211	obj/kern/kernel.asm	/^f0107211:	5f                   	pop    %edi$/;"	l
f0107212	obj/kern/kernel.asm	/^f0107212:	5d                   	pop    %ebp$/;"	l
f0107213	obj/kern/kernel.asm	/^f0107213:	c3                   	ret    $/;"	l
f0107214	obj/kern/kernel.asm	/^f0107214:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107218	obj/kern/kernel.asm	/^f0107218:	39 f7                	cmp    %esi,%edi$/;"	l
f010721a	obj/kern/kernel.asm	/^f010721a:	77 4c                	ja     f0107268 <__umoddi3+0x88>$/;"	l
f010721c	obj/kern/kernel.asm	/^f010721c:	0f bd c7             	bsr    %edi,%eax$/;"	l
f010721f	obj/kern/kernel.asm	/^f010721f:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f0107222	obj/kern/kernel.asm	/^f0107222:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0107225	obj/kern/kernel.asm	/^f0107225:	75 51                	jne    f0107278 <__umoddi3+0x98>$/;"	l
f0107227	obj/kern/kernel.asm	/^f0107227:	3b 4d f0             	cmp    -0x10(%ebp),%ecx$/;"	l
f010722a	obj/kern/kernel.asm	/^f010722a:	0f 87 e8 00 00 00    	ja     f0107318 <__umoddi3+0x138>$/;"	l
f0107230	obj/kern/kernel.asm	/^f0107230:	89 f2                	mov    %esi,%edx$/;"	l
f0107232	obj/kern/kernel.asm	/^f0107232:	8b 75 f0             	mov    -0x10(%ebp),%esi$/;"	l
f0107235	obj/kern/kernel.asm	/^f0107235:	29 ce                	sub    %ecx,%esi$/;"	l
f0107237	obj/kern/kernel.asm	/^f0107237:	19 fa                	sbb    %edi,%edx$/;"	l
f0107239	obj/kern/kernel.asm	/^f0107239:	89 75 f0             	mov    %esi,-0x10(%ebp)$/;"	l
f010723c	obj/kern/kernel.asm	/^f010723c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010723f	obj/kern/kernel.asm	/^f010723f:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107242	obj/kern/kernel.asm	/^f0107242:	5e                   	pop    %esi$/;"	l
f0107243	obj/kern/kernel.asm	/^f0107243:	5f                   	pop    %edi$/;"	l
f0107244	obj/kern/kernel.asm	/^f0107244:	5d                   	pop    %ebp$/;"	l
f0107245	obj/kern/kernel.asm	/^f0107245:	c3                   	ret    $/;"	l
f0107246	obj/kern/kernel.asm	/^f0107246:	66 90                	xchg   %ax,%ax$/;"	l
f0107248	obj/kern/kernel.asm	/^f0107248:	85 c9                	test   %ecx,%ecx$/;"	l
f010724a	obj/kern/kernel.asm	/^f010724a:	75 0b                	jne    f0107257 <__umoddi3+0x77>$/;"	l
f010724c	obj/kern/kernel.asm	/^f010724c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107251	obj/kern/kernel.asm	/^f0107251:	31 d2                	xor    %edx,%edx$/;"	l
f0107253	obj/kern/kernel.asm	/^f0107253:	f7 f1                	div    %ecx$/;"	l
f0107255	obj/kern/kernel.asm	/^f0107255:	89 c1                	mov    %eax,%ecx$/;"	l
f0107257	obj/kern/kernel.asm	/^f0107257:	89 f0                	mov    %esi,%eax$/;"	l
f0107259	obj/kern/kernel.asm	/^f0107259:	31 d2                	xor    %edx,%edx$/;"	l
f010725b	obj/kern/kernel.asm	/^f010725b:	f7 f1                	div    %ecx$/;"	l
f010725d	obj/kern/kernel.asm	/^f010725d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0107260	obj/kern/kernel.asm	/^f0107260:	eb a5                	jmp    f0107207 <__umoddi3+0x27>$/;"	l
f0107262	obj/kern/kernel.asm	/^f0107262:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0107268	obj/kern/kernel.asm	/^f0107268:	89 f2                	mov    %esi,%edx$/;"	l
f010726a	obj/kern/kernel.asm	/^f010726a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010726d	obj/kern/kernel.asm	/^f010726d:	5e                   	pop    %esi$/;"	l
f010726e	obj/kern/kernel.asm	/^f010726e:	5f                   	pop    %edi$/;"	l
f010726f	obj/kern/kernel.asm	/^f010726f:	5d                   	pop    %ebp$/;"	l
f0107270	obj/kern/kernel.asm	/^f0107270:	c3                   	ret    $/;"	l
f0107271	obj/kern/kernel.asm	/^f0107271:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107278	obj/kern/kernel.asm	/^f0107278:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f010727c	obj/kern/kernel.asm	/^f010727c:	89 f2                	mov    %esi,%edx$/;"	l
f010727e	obj/kern/kernel.asm	/^f010727e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107281	obj/kern/kernel.asm	/^f0107281:	c7 45 f0 20 00 00 00 	movl   $0x20,-0x10(%ebp)$/;"	l
f0107288	obj/kern/kernel.asm	/^f0107288:	29 45 f0             	sub    %eax,-0x10(%ebp)$/;"	l
f010728b	obj/kern/kernel.asm	/^f010728b:	d3 e7                	shl    %cl,%edi$/;"	d
f010728d	obj/kern/kernel.asm	/^f010728d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107290	obj/kern/kernel.asm	/^f0107290:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0107294	obj/kern/kernel.asm	/^f0107294:	d3 e8                	shr    %cl,%eax$/;"	d
f0107296	obj/kern/kernel.asm	/^f0107296:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f010729a	obj/kern/kernel.asm	/^f010729a:	09 f8                	or     %edi,%eax$/;"	l
f010729c	obj/kern/kernel.asm	/^f010729c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010729f	obj/kern/kernel.asm	/^f010729f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01072a2	obj/kern/kernel.asm	/^f01072a2:	d3 e0                	shl    %cl,%eax$/;"	d
f01072a4	obj/kern/kernel.asm	/^f01072a4:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f01072a8	obj/kern/kernel.asm	/^f01072a8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01072ab	obj/kern/kernel.asm	/^f01072ab:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01072ae	obj/kern/kernel.asm	/^f01072ae:	d3 ea                	shr    %cl,%edx$/;"	d
f01072b0	obj/kern/kernel.asm	/^f01072b0:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f01072b4	obj/kern/kernel.asm	/^f01072b4:	d3 e6                	shl    %cl,%esi$/;"	d
f01072b6	obj/kern/kernel.asm	/^f01072b6:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f01072ba	obj/kern/kernel.asm	/^f01072ba:	d3 e8                	shr    %cl,%eax$/;"	d
f01072bc	obj/kern/kernel.asm	/^f01072bc:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f01072c0	obj/kern/kernel.asm	/^f01072c0:	09 f0                	or     %esi,%eax$/;"	l
f01072c2	obj/kern/kernel.asm	/^f01072c2:	8b 75 e8             	mov    -0x18(%ebp),%esi$/;"	l
f01072c5	obj/kern/kernel.asm	/^f01072c5:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
f01072c8	obj/kern/kernel.asm	/^f01072c8:	d3 e6                	shl    %cl,%esi$/;"	d
f01072ca	obj/kern/kernel.asm	/^f01072ca:	89 75 e8             	mov    %esi,-0x18(%ebp)$/;"	l
f01072cd	obj/kern/kernel.asm	/^f01072cd:	89 d6                	mov    %edx,%esi$/;"	l
f01072cf	obj/kern/kernel.asm	/^f01072cf:	f7 65 f4             	mull   -0xc(%ebp)$/;"	l
f01072d2	obj/kern/kernel.asm	/^f01072d2:	89 d7                	mov    %edx,%edi$/;"	l
f01072d4	obj/kern/kernel.asm	/^f01072d4:	89 c2                	mov    %eax,%edx$/;"	l
f01072d6	obj/kern/kernel.asm	/^f01072d6:	39 fe                	cmp    %edi,%esi$/;"	l
f01072d8	obj/kern/kernel.asm	/^f01072d8:	89 f9                	mov    %edi,%ecx$/;"	l
f01072da	obj/kern/kernel.asm	/^f01072da:	72 30                	jb     f010730c <__umoddi3+0x12c>$/;"	l
f01072dc	obj/kern/kernel.asm	/^f01072dc:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
f01072df	obj/kern/kernel.asm	/^f01072df:	72 27                	jb     f0107308 <__umoddi3+0x128>$/;"	l
f01072e1	obj/kern/kernel.asm	/^f01072e1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01072e4	obj/kern/kernel.asm	/^f01072e4:	29 d0                	sub    %edx,%eax$/;"	l
f01072e6	obj/kern/kernel.asm	/^f01072e6:	19 ce                	sbb    %ecx,%esi$/;"	l
f01072e8	obj/kern/kernel.asm	/^f01072e8:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f01072ec	obj/kern/kernel.asm	/^f01072ec:	89 f2                	mov    %esi,%edx$/;"	l
f01072ee	obj/kern/kernel.asm	/^f01072ee:	d3 e8                	shr    %cl,%eax$/;"	d
f01072f0	obj/kern/kernel.asm	/^f01072f0:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f01072f4	obj/kern/kernel.asm	/^f01072f4:	d3 e2                	shl    %cl,%edx$/;"	d
f01072f6	obj/kern/kernel.asm	/^f01072f6:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f01072fa	obj/kern/kernel.asm	/^f01072fa:	09 d0                	or     %edx,%eax$/;"	l
f01072fc	obj/kern/kernel.asm	/^f01072fc:	89 f2                	mov    %esi,%edx$/;"	l
f01072fe	obj/kern/kernel.asm	/^f01072fe:	d3 ea                	shr    %cl,%edx$/;"	d
f0107300	obj/kern/kernel.asm	/^f0107300:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107303	obj/kern/kernel.asm	/^f0107303:	5e                   	pop    %esi$/;"	l
f0107304	obj/kern/kernel.asm	/^f0107304:	5f                   	pop    %edi$/;"	l
f0107305	obj/kern/kernel.asm	/^f0107305:	5d                   	pop    %ebp$/;"	l
f0107306	obj/kern/kernel.asm	/^f0107306:	c3                   	ret    $/;"	l
f0107307	obj/kern/kernel.asm	/^f0107307:	90                   	nop$/;"	l
f0107308	obj/kern/kernel.asm	/^f0107308:	39 fe                	cmp    %edi,%esi$/;"	l
f010730a	obj/kern/kernel.asm	/^f010730a:	75 d5                	jne    f01072e1 <__umoddi3+0x101>$/;"	l
f010730c	obj/kern/kernel.asm	/^f010730c:	89 f9                	mov    %edi,%ecx$/;"	l
f010730e	obj/kern/kernel.asm	/^f010730e:	89 c2                	mov    %eax,%edx$/;"	l
f0107310	obj/kern/kernel.asm	/^f0107310:	2b 55 f4             	sub    -0xc(%ebp),%edx$/;"	l
f0107313	obj/kern/kernel.asm	/^f0107313:	1b 4d e4             	sbb    -0x1c(%ebp),%ecx$/;"	l
f0107316	obj/kern/kernel.asm	/^f0107316:	eb c9                	jmp    f01072e1 <__umoddi3+0x101>$/;"	l
f0107318	obj/kern/kernel.asm	/^f0107318:	39 f7                	cmp    %esi,%edi$/;"	l
f010731a	obj/kern/kernel.asm	/^f010731a:	0f 82 10 ff ff ff    	jb     f0107230 <__umoddi3+0x50>$/;"	l
f0107320	obj/kern/kernel.asm	/^f0107320:	e9 17 ff ff ff       	jmp    f010723c <__umoddi3+0x5c>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
fail	grade-functions.sh	/^fail () {$/;"	f
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/writemotd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/writemotd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon3	typeref:struct:Fd::__anon3::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_remove	fs/fs.c	/^file_remove(const char *path)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
firstIndex	obj/kern/kernel.asm	/^				firstIndex = index;$/;"	d
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
fontColor	lib/printfmt.c	/^int fontColor = WHITE;$/;"	v
fontColor	obj/fs/fs.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/fs/fs.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/fs/fs.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/fs/fs.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/fs/fs.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/kern/kernel.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/kern/kernel.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/kern/kernel.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/kern/kernel.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/kern/kernel.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/badsegment.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/badsegment.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/badsegment.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/badsegment.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/badsegment.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/breakpoint.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/breakpoint.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/breakpoint.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/breakpoint.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/breakpoint.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/buggyhello.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/buggyhello.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/buggyhello.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/buggyhello.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/buggyhello.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/buggyhello2.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/buggyhello2.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/buggyhello2.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/buggyhello2.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/buggyhello2.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/divzero.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/divzero.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/divzero.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/divzero.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/divzero.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/dumbfork.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/dumbfork.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/dumbfork.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/dumbfork.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/dumbfork.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/evilhello.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/evilhello.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/evilhello.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/evilhello.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/evilhello.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/fairness.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/fairness.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/fairness.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/fairness.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/fairness.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/faultalloc.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/faultalloc.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/faultalloc.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/faultalloc.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/faultalloc.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/faultallocbad.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/faultallocbad.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/faultallocbad.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/faultallocbad.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/faultallocbad.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/faultbadhandler.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/faultbadhandler.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/faultbadhandler.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/faultbadhandler.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/faultbadhandler.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/faultdie.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/faultdie.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/faultdie.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/faultdie.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/faultdie.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/faultevilhandler.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/faultevilhandler.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/faultevilhandler.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/faultevilhandler.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/faultevilhandler.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/faultnostack.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/faultnostack.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/faultnostack.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/faultnostack.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/faultnostack.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/faultread.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/faultread.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/faultread.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/faultread.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/faultread.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/faultreadkernel.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/faultreadkernel.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/faultreadkernel.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/faultreadkernel.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/faultreadkernel.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/faultregs.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/faultregs.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/faultregs.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/faultregs.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/faultregs.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/faultwrite.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/faultwrite.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/faultwrite.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/faultwrite.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/faultwrite.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/faultwritekernel.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/faultwritekernel.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/faultwritekernel.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/faultwritekernel.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/faultwritekernel.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/forktree.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/forktree.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/forktree.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/forktree.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/forktree.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/hello.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/hello.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/hello.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/hello.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/hello.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/icode.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/icode.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/icode.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/icode.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/icode.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/idle.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/idle.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/idle.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/idle.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/idle.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/init.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/init.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/init.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/init.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/init.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/pingpong.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/pingpong.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/pingpong.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/pingpong.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/pingpong.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/pingpongs.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/pingpongs.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/pingpongs.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/pingpongs.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/pingpongs.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/primes.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/primes.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/primes.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/primes.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/primes.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/softint.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/softint.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/softint.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/softint.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/softint.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/spin.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/spin.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/spin.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/spin.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/spin.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/stresssched.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/stresssched.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/stresssched.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/stresssched.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/stresssched.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/testbss.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/testbss.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/testbss.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/testbss.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/testbss.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/testfile.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/testfile.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/testfile.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/testfile.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/testfile.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/writemotd.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/writemotd.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/writemotd.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/writemotd.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/writemotd.asm	/^				fontColor = WHITE;$/;"	d
fontColor	obj/user/yield.asm	/^				fontColor = BLACK;$/;"	d
fontColor	obj/user/yield.asm	/^				fontColor = BLUE;$/;"	d
fontColor	obj/user/yield.asm	/^				fontColor = GREEN;$/;"	d
fontColor	obj/user/yield.asm	/^				fontColor = RED;$/;"	d
fontColor	obj/user/yield.asm	/^				fontColor = WHITE;$/;"	d
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/writemotd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
idle	obj/kern/kernel.asm	/^	idle = &envs[cpunum()];$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
index	obj/kern/kernel.asm	/^			index = 0;$/;"	d
index	obj/kern/kernel.asm	/^		index = 0;$/;"	d
index	obj/kern/kernel.asm	/^		index = ENVX(curenv->env_id) + 1;$/;"	d
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int $/;"	l
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int $/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int $/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int $/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int $/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int $/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int $/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int $/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int $/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int $/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int $/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int $/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int $/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int $/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int $/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int $/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int $/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int $/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int $/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int $/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int $/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int $/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int $/;"	l
int	obj/user/hello.asm	/^int share = 1;$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int $/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int $/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int $/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int $/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int $/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int $/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int $/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int $/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int $/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int $/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int $/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/writemotd.asm	/^int $/;"	l
int	obj/user/writemotd.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int $/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/writemotd.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
isstack	obj/user/forktree.asm	/^			isstack = 0;$/;"	d
isstack	obj/user/hello.asm	/^			isstack = 0;$/;"	d
isstack	obj/user/pingpong.asm	/^			isstack = 0;$/;"	d
isstack	obj/user/pingpongs.asm	/^			isstack = 0;$/;"	d
isstack	obj/user/primes.asm	/^			isstack = 0;$/;"	d
isstack	obj/user/spin.asm	/^			isstack = 0;$/;"	d
isstack	obj/user/stresssched.asm	/^			isstack = 0;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	v
lapic	obj/kern/kernel.asm	/^		lapic = NULL;$/;"	d
lapic	obj/kern/kernel.asm	/^	lapic = (uint32_t *)conf->lapicaddr;$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
len	obj/kern/kernel.asm	/^	len = ROUNDUP(len, PGSIZE);$/;"	d
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/writemotd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;   \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/writemotd.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/writemotd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
maxIndex	obj/kern/kernel.asm	/^				maxIndex = index;$/;"	d
maxPri	obj/kern/kernel.asm	/^				maxPri = current->env_priority;$/;"	d
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_dump	kern/monitor.c	/^mon_dump(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_setperm	kern/monitor.c	/^mon_setperm(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_showmapping	kern/monitor.c	/^mon_showmapping(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_si	kern/monitor.c	/^mon_si(int argc, char ** argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon9	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon9	file:
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct Page), PGSIZE);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
new_pt_page	obj/kern/kernel.asm	/^		new_pt_page = page_alloc(1);$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/writemotd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newpage	obj/kern/kernel.asm	/^		newpage = page_alloc(1);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = ROUNDUP(nextfree, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/writemotd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/writemotd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/writemotd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/writemotd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/writemotd.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/writemotd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	70;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/writemotd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/writemotd.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/writemotd.asm	/^			padc = '-';$/;"	d
padc	obj/user/writemotd.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct Page *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct Page *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct Page* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct Page *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list -> pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct Page *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
pages	obj/kern/kernel.asm	/^	pages = boot_alloc(npages * sizeof(struct Page));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pass	grade-functions.sh	/^pass () {$/;"	f
passfailmsg	grade-functions.sh	/^passfailmsg () {$/;"	f
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10]; \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/kern/kernel.asm	/^	perm = perm | PTE_P;	$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct Page *pp_link;$/;"	m	struct:Page	typeref:struct:Page::Page
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/writemotd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/writemotd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/writemotd.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/writemotd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pt_entry	obj/kern/kernel.asm	/^		pt_entry = pgdir_walk(env->env_pgdir, (const void *)curva, 0);$/;"	d
pt_entry	obj/kern/kernel.asm	/^		pt_entry = pgdir_walk(kern_pgdir, (void *)va, 0);$/;"	d
pt_entry	obj/kern/kernel.asm	/^		pt_entry = pgdir_walk(pgdir, (void *)va, 1);$/;"	d
pt_kva	obj/kern/kernel.asm	/^			pt_kva = KADDR(PTE_ADDR(*pt_entry));$/;"	d
pt_kva	obj/kern/kernel.asm	/^		pt_kva = KADDR(PTE_ADDR(*pt_entry));$/;"	d
pte	obj/fs/fs.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
quicktest	grade-functions.sh	/^quicktest () {$/;"	f
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/fs/fs.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^			r = page_insert(target->env_pgdir, sendpage, target->env_ipc_dstva, perm);	$/;"	d
r	obj/kern/kernel.asm	/^		r = -E_INVAL;break;$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_cgetc();break;$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_env_checkpoint((envid_t)a1, a2);break;$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_env_destroy((envid_t)a1);break;$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_env_set_pgfault_upcall((envid_t)a1, (void *)a2);break;$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_env_set_priority((envid_t)a1, a2);break;$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_env_set_status((envid_t)a1, a2);break;$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_exofork();break;$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_getenvid();break;$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_ipc_recv((void *)a1);break;$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_page_alloc((envid_t)a1, (void *)a2, a3);break;$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_page_unmap((envid_t)a1, (void *)a2);break;$/;"	d
r	obj/kern/kernel.asm	/^		r = syscall(tf->tf_regs.reg_eax,$/;"	d
r	obj/kern/kernel.asm	/^	r = envid2env(envid, &target, 0);$/;"	d
r	obj/kern/kernel.asm	/^	r = page_insert(env->env_pgdir, newpage, va, perm);$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/badsegment.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/badsegment.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/badsegment.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/breakpoint.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/breakpoint.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/breakpoint.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/buggyhello.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/buggyhello.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/buggyhello.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/buggyhello2.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/buggyhello2.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/divzero.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/divzero.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/divzero.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/dumbfork.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/dumbfork.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/dumbfork.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/evilhello.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/evilhello.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/evilhello.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/fairness.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/fairness.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/fairness.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/faultalloc.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultalloc.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultalloc.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultallocbad.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultallocbad.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultbadhandler.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultbadhandler.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/faultdie.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultdie.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultdie.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultevilhandler.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultevilhandler.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/faultnostack.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultnostack.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultnostack.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/faultread.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultread.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultread.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultreadkernel.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultreadkernel.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/faultregs.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultregs.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultregs.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/faultwrite.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultwrite.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultwrite.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultwritekernel.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultwritekernel.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/forktree.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(0, srcva, 0, srcva, PTE_U|PTE_P|PTE_COW);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(0, srcva, envid, srcva, PTE_P|PTE_U|PTE_COW);$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_alloc(envid, PFTEMP, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_map(envid, PFTEMP, envid, addr, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/forktree.asm	/^        r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/forktree.asm	/^        r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/forktree.asm	/^        r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/hello.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/hello.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/hello.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/hello.asm	/^		r = sys_page_map(0, srcva, 0, srcva, PTE_U|PTE_P|PTE_COW);$/;"	d
r	obj/user/hello.asm	/^		r = sys_page_map(0, srcva, envid, srcva, PTE_P|PTE_U|PTE_COW);$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/hello.asm	/^	r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/hello.asm	/^	r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/hello.asm	/^	r = sys_page_alloc(envid, PFTEMP, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/hello.asm	/^	r = sys_page_map(envid, PFTEMP, envid, addr, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/hello.asm	/^        r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/hello.asm	/^        r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/hello.asm	/^        r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/icode.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/icode.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/icode.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/idle.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/idle.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/idle.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/init.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/init.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/init.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/pingpong.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(0, srcva, 0, srcva, PTE_U|PTE_P|PTE_COW);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(0, srcva, envid, srcva, PTE_P|PTE_U|PTE_COW);$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_alloc(envid, PFTEMP, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_map(envid, PFTEMP, envid, addr, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/pingpong.asm	/^        r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/pingpong.asm	/^        r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/pingpong.asm	/^        r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/pingpongs.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(0, srcva, 0, srcva, PTE_U|PTE_P|PTE_COW);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(0, srcva, envid, srcva, PTE_P|PTE_U|PTE_COW);$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_alloc(envid, PFTEMP, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_map(envid, PFTEMP, envid, addr, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/pingpongs.asm	/^        r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/pingpongs.asm	/^        r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/pingpongs.asm	/^        r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/primes.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/primes.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/primes.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(0, srcva, 0, srcva, PTE_U|PTE_P|PTE_COW);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(0, srcva, envid, srcva, PTE_P|PTE_U|PTE_COW);$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/primes.asm	/^	r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_alloc(envid, PFTEMP, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_map(envid, PFTEMP, envid, addr, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/primes.asm	/^        r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/primes.asm	/^        r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/primes.asm	/^        r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/softint.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/softint.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/softint.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/spin.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/spin.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/spin.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(0, srcva, 0, srcva, PTE_U|PTE_P|PTE_COW);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(0, srcva, envid, srcva, PTE_P|PTE_U|PTE_COW);$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/spin.asm	/^	r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_alloc(envid, PFTEMP, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_map(envid, PFTEMP, envid, addr, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/spin.asm	/^        r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/spin.asm	/^        r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/spin.asm	/^        r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/stresssched.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(0, srcva, 0, srcva, PTE_U|PTE_P|PTE_COW);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(0, srcva, envid, srcva, PTE_P|PTE_U|PTE_COW);$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_alloc(envid, PFTEMP, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_map(envid, PFTEMP, envid, addr, PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/user/stresssched.asm	/^        r = sys_env_set_pgfault_upcall(childid, _pgfault_upcall);$/;"	d
r	obj/user/stresssched.asm	/^        r = sys_env_set_status(childid, ENV_RUNNABLE);$/;"	d
r	obj/user/stresssched.asm	/^        r = sys_page_alloc(childid, (void *)(UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/testbss.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testbss.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/testbss.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/testfile.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testfile.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/testfile.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/writemotd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/writemotd.asm	/^			r = 0;$/;"	d
r	obj/user/writemotd.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/writemotd.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/writemotd.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/writemotd.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/writemotd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^			r = sys_ipc_try_send(to_env, val, (void *)UTOP, perm);$/;"	d
r	obj/user/yield.asm	/^			r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/yield.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/yield.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/writemotd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_eip	kern/monitor.c	/^read_eip()$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
remove	lib/file.c	/^remove(const char *path)$/;"	f
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/kern/kernel.asm	/^	result = nextfree;$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/writemotd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/writemotd.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
retPage	obj/kern/kernel.asm	/^	retPage = page_free_list;$/;"	d
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon6	file:
run	grade-functions.sh	/^run () {$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runtest	grade-functions.sh	/^runtest () {$/;"	f
runtest1	grade-functions.sh	/^runtest1 () {$/;"	f
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/writemotd.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
sduppage	lib/fork.c	/^sduppage(envid_t envid, unsigned pn, int need_cow)$/;"	f	file:
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
sendpage	obj/kern/kernel.asm	/^		sendpage = page_lookup(curenv->env_pgdir, srcva, &pt_entry);$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_remove	fs/serv.c	/^serve_remove(envid_t envid, struct Fsreq_remove *req)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
share	user/hello.c	/^int share = 1;$/;"	v
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] = $/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] = $/;"	v	file:
showfinal	grade-functions.sh	/^showfinal () {$/;"	f
showpart	grade-functions.sh	/^showpart () {$/;"	f
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/writemotd.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/writemotd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
startAddr	obj/kern/kernel.asm	/^		startAddr = (uint32_t)KADDR(strtol(argv[2], 0, 0));$/;"	d
startAddr	obj/kern/kernel.asm	/^		startAddr = strtol(argv[2], 0, 0);$/;"	d
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void $/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct Page*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int $/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/writemotd.asm	/^static int$/;"	l
static	obj/user/writemotd.asm	/^static long long$/;"	l
static	obj/user/writemotd.asm	/^static ssize_t$/;"	l
static	obj/user/writemotd.asm	/^static unsigned long long$/;"	l
static	obj/user/writemotd.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_checkpoint	kern/syscall.c	/^sys_env_checkpoint(envid_t envid, int action)$/;"	f	file:
sys_env_checkpoint	lib/syscall.c	/^sys_env_checkpoint(envid_t envid, int action)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_priority	kern/syscall.c	/^sys_env_set_priority(envid_t envid, int priority)$/;"	f	file:
sys_env_set_priority	lib/syscall.c	/^sys_env_set_priority(envid_t envid, int priority)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
test_backtrace	init.s	/^test_backtrace:$/;"	l
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	37;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/forktree.asm	/^                thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/hello.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/hello.asm	/^                thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpong.asm	/^                thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpongs.asm	/^                thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primes.asm	/^                thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spin.asm	/^                thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/stresssched.asm	/^                thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/writemotd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] = $/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
usage	fs/fsformat.c	/^usage(void)$/;"	f
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = curva;$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(tf->tf_esp - sizeof(struct UTrapframe) - 4);$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/kern/kernel.asm	/^	va = ROUNDDOWN(va, PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/writemotd.asm	/^void *$/;"	l
void	obj/user/writemotd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/writemotd.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/writemotd.asm	/^				width = 0;$/;"	d
width	obj/user/writemotd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/writemotd.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon6	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
